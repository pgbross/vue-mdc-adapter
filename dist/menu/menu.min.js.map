{"version":3,"file":"menu.min.js","sources":["../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/menu/constants.js","../../node_modules/@material/menu-surface/constants.js","../../node_modules/@material/menu-surface/foundation.js","../../node_modules/@material/list/constants.js","../../node_modules/@material/list/foundation.js","../../node_modules/@material/menu/foundation.js","../../components/menu/mdc-menu.vue","../../node_modules/@material/menu-surface/util.js","../../components/menu/mdc-menu-surface.vue","../../components/menu/mdc-menu-item.vue","../../components/menu/mdc-menu-divider.vue","../../components/menu/mdc-menu-anchor.vue","../../components/base/base-plugin.js","../../components/menu/index.js","../../components/base/auto-init.js","../../components/menu/entry.js"],"sourcesContent":["/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',\n  MENU_SELECTION_GROUP: 'mdc-menu__selection-group',\n};\n\n/** @enum {string} */\nconst strings = {\n  SELECTED_EVENT: 'MDCMenu:selected',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n  LIST_SELECTOR: '.mdc-list',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface',\n};\n\n/** @enum {string} */\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled=\"true\"]), input:not(:disabled), ' +\n  'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Total duration of menu-surface open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu-surface close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   surfaceHeight: number,\n *   surfaceWidth: number,\n *   bodyDimensions,\n *   windowScroll,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}\n */\nclass MDCMenuSurfaceFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuSurfaceAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuSurfaceAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasAnchor: () => false,\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      isElementInContainer: () => false,\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      isFocused: () => false,\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFirstElementFocused: () => {},\n      isLastElementFocused: () => {},\n      focusFirstElement: () => {},\n      focusLastElement: () => {},\n      getInnerDimensions: () => ({}),\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getBodyDimensions: () => ({}),\n      getWindowScroll: () => ({}),\n      setPosition: () => {},\n      setMaxHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuSurfaceAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {!Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {!AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n    /** @private {boolean} */\n    this.hoistedElement_ = false;\n    /** @private {boolean} */\n    this.isFixedPosition_ = false;\n    /** @private {!{x: number, y: number}} */\n    this.position_ = {x: 0, y: 0};\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuSurfaceFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin set of margin values from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /**\n   * Used to indicate if the menu-surface is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.hoistedElement_ = isHoisted;\n  }\n\n  /**\n   * Used to set the menu-surface calculations based on a fixed position menu.\n   * @param {boolean} isFixedPosition\n   */\n  setFixedPosition(isFixedPosition) {\n    this.isFixedPosition_ = isFixedPosition;\n  }\n\n  /**\n   * Sets the menu-surface position on the page.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;\n    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * Handle clicks and close if not within menu-surface element.\n   * @param {!Event} evt\n   */\n  handleBodyClick(evt) {\n    const el = evt.target;\n\n    if (this.adapter_.isElementInContainer(el)) {\n      return;\n    }\n\n    this.close();\n  };\n\n  /**\n   * Handle keys that close the surface.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key, shiftKey} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) {\n      this.close();\n    } else if (isTab) {\n      if (this.adapter_.isLastElementFocused() && !shiftKey) {\n        this.adapter_.focusFirstElement();\n        evt.preventDefault();\n      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {\n        this.adapter_.focusLastElement();\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.\n   */\n  getAutoLayoutMeasurements_() {\n    let anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n    const bodyDimensions = this.adapter_.getBodyDimensions();\n    const windowScroll = this.adapter_.getWindowScroll();\n\n    if (!anchorRect) {\n      anchorRect = /** @type {ClientRect} */ ({\n        x: this.position_.x,\n        y: this.position_.y,\n        top: this.position_.y,\n        bottom: this.position_.y,\n        left: this.position_.x,\n        right: this.position_.x,\n        height: 0,\n        width: 0,\n      });\n    }\n\n    return {\n      viewport,\n      bodyDimensions,\n      windowScroll,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      surfaceHeight: this.dimensions_.height,\n      surfaceWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu surface.\n   * @return {!Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, surfaceHeight, surfaceWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = surfaceHeight - availableTop;\n    const bottomOverflow = surfaceHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = surfaceWidth - availableLeft;\n    const rightOverflow = surfaceWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return /** @type {Corner} */ (corner);\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    // isRightAligned corresponds to using the 'right' property on the surface.\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n\n      // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so\n      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,\n      // the right property is correct.\n      if (this.hoistedElement_ || this.isFixedPosition_) {\n        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);\n      }\n\n      return rightOffset;\n    }\n\n    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {anchorHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n    }\n    return y;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuSurfaceMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuSurfaceFoundation.numbers;\n\n    // When maximum height is not specified, it is handled from css.\n    if (isBottomAligned) {\n      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;\n      if (!(this.anchorCorner_ & CornerBit.BOTTOM)) {\n        maxHeight += this.measures_.anchorHeight;\n      }\n    } else {\n      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;\n      if (this.anchorCorner_ & CornerBit.BOTTOM) {\n        maxHeight -= this.measures_.anchorHeight;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);\n    const verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    let position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset : '0',\n    };\n    const {anchorWidth, surfaceWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.\n    if (anchorWidth / surfaceWidth > numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element\n    if (this.hoistedElement_ || this.isFixedPosition_) {\n      position = this.adjustPositionForHoistedElement_(position);\n    }\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop) && position[prop] !== '0') {\n        position[prop] = `${parseInt(position[prop], 10)}px`;\n      }\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Calculates the offsets for positioning the menu-surface when the menu-surface has been\n   * hoisted to the body.\n   * @param {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @return {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @private\n   */\n  adjustPositionForHoistedElement_(position) {\n    const {windowScroll, viewportDistance} = this.measures_;\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop)) {\n        // Hoisted surfaces need to have the anchor elements location on the page added to the\n        // position properties for proper alignment on the body.\n        if (viewportDistance.hasOwnProperty(prop)) {\n          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];\n        }\n\n        // Surfaces that are absolutely positioned need to have additional calculations for scroll\n        // and bottom positioning.\n        if (!this.isFixedPosition_) {\n          if (prop === 'top') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.y;\n          } else if (prop === 'bottom') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.y;\n          } else if (prop === 'left') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.x;\n          } else if (prop === 'right') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.x;\n          }\n        }\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Open the menu surface.\n   */\n  open() {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      if (this.quickOpen_) {\n        this.adapter_.notifyOpen();\n      } else {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n          this.adapter_.notifyOpen();\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu surface.\n   */\n  close() {\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      if (this.quickOpen_) {\n        this.adapter_.notifyClose();\n      } else {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n          this.adapter_.notifyClose();\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n\n    this.isOpen_ = false;\n    this.maybeRestoreFocus_();\n  }\n\n  /**\n   * The last focused element when the menu surface was opened should regain focus, if the user is\n   * focused on or within the menu surface when it is closed.\n   * @private\n   */\n  maybeRestoreFocus_() {\n    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {\n      this.adapter_.restoreFocus();\n    }\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * isFinite that doesn't force conversion to number type.\n   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.\n   * @param {number} num\n   * @return {boolean}\n   * @private\n   */\n  typeCheckisFinite_(num) {\n    return typeof num === 'number' && isFinite(num);\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, AnchorMargin};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n  ACTION_EVENT: 'MDCList:action',\n};\n\n/** @typedef {number|!Array<number>} */\nlet Index;\n\nexport {strings, cssClasses, Index};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses, Index} from './constants'; // eslint-disable-line no-unused-vars\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n      notifyAction: () => {},\n      isFocusInsideList: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** @private {boolean} */\n    this.wrapFocus_ = false;\n\n    /** @private {boolean} */\n    this.isVertical_ = true;\n\n    /** @private {boolean} */\n    this.isSingleSelectionList_ = false;\n\n    /** @private {!Index} */\n    this.selectedIndex_ = -1;\n\n    /** @private {number} */\n    this.focusedItemIndex_ = -1;\n\n    /** @private {boolean} */\n    this.useActivatedClass_ = false;\n\n    /** @private {boolean} */\n    this.isCheckboxList_ = false;\n\n    /** @private {boolean} */\n    this.isRadioList_ = false;\n  }\n\n  layout() {\n    if (this.adapter_.getListItemCount() === 0) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(0)) {\n      this.isCheckboxList_ = true;\n    } else if (this.adapter_.hasRadioAtIndex(0)) {\n      this.isRadioList_ = true;\n    }\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @return {!Index} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /** @param {!Index} index */\n  setSelectedIndex(index) {\n    if (!this.isIndexValid_(index)) return;\n\n    if (this.isCheckboxList_) {\n      this.setCheckboxAtIndex_(/** @type {!Array<number>} */ (index));\n    } else if (this.isRadioList_) {\n      this.setRadioAtIndex_(/** @type {number} */ (index));\n    } else {\n      this.setSingleSelectionAtIndex_(/** @type {number} */ (index));\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n     * is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter_.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    let nextIndex = -1;\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.\n        if (evt.target.tagName === 'A' && isEnter) return;\n        this.preventDefaultEvent_(evt);\n\n        if (this.isSelectableList_()) {\n          this.setSelectedIndexOnAction_(currentIndex);\n        }\n\n        this.adapter_.notifyAction(currentIndex);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex >= 0) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (this.isSelectableList_()) {\n      this.setSelectedIndexOnAction_(index, toggleCheckbox);\n    }\n\n    this.adapter_.notifyAction(index);\n\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusFirstElement() {\n    this.adapter_.focusItemAtIndex(0);\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    this.adapter_.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setSingleSelectionAtIndex_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  setRadioAtIndex_(index) {\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {!Array<number>} index\n   * @private\n   */\n  setCheckboxAtIndex_(index) {\n    for (let i = 0; i < this.adapter_.getListItemCount(); i++) {\n      let isChecked = false;\n      if (index.indexOf(i) >= 0) {\n        isChecked = true;\n      }\n\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n      this.adapter_.setAttributeForElementIndex(i, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n    }\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setTabindexAtIndex_(index) {\n    if (this.focusedItemIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n  }\n\n  /**\n   * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n   * @private\n   */\n  isSelectableList_() {\n    return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n  }\n\n  /** @private */\n  setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (this.isSelectableList_()) {\n      if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n        targetIndex = this.selectedIndex_;\n      } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n        targetIndex = this.selectedIndex_.reduce((currentIndex, minIndex) => Math.min(currentIndex, minIndex));\n      }\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexValid_(index) {\n    if (index instanceof Array) {\n      if (!this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.length === 0) {\n        return true;\n      } else {\n        return index.some((i) => this.isIndexInRange_(i));\n      }\n    } else if (typeof index === 'number') {\n      if (this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n      }\n      return this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexInRange_(index) {\n    const listSize = this.adapter_.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean=} toggleCheckbox\n   * @private\n   */\n  setSelectedIndexOnAction_(index, toggleCheckbox = true) {\n    if (this.isCheckboxList_) {\n      this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n    } else {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   * @private\n   */\n  toggleCheckboxAtIndex_(index, toggleCheckbox) {\n    let isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n    if (toggleCheckbox) {\n      isChecked = !isChecked;\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n\n    // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n    if (this.selectedIndex_ === -1) {\n      this.selectedIndex_ = [];\n    }\n\n    if (isChecked) {\n      this.selectedIndex_.push(index);\n    } else {\n      this.selectedIndex_ = this.selectedIndex_.filter((i) => i !== index);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuSurfaceFoundation} from '@material/menu-surface/foundation';\nimport MDCListFoundation from '@material/list/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClassToElementAtIndex: () => {},\n      removeClassFromElementAtIndex: () => {},\n      addAttributeToElementAtIndex: () => {},\n      removeAttributeFromElementAtIndex: () => {},\n      elementContainsClass: () => {},\n      closeSurface: () => {},\n      getElementIndex: () => {},\n      getParentElement: () => {},\n      getSelectedElementIndex: () => {},\n      notifySelected: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @type {number} */\n    this.closeAnimationEndTimerId_ = 0;\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter_.closeSurface();\n  }\n\n  /**\n   * Handler function for the keydown events.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {key, keyCode} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isTab) {\n      this.adapter_.closeSurface();\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} listItem\n   */\n  handleItemAction(listItem) {\n    const index = this.adapter_.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter_.notifySelected({index});\n    this.adapter_.closeSurface();\n\n    // Wait for the menu to close before adding/removing classes that affect styles.\n    this.closeAnimationEndTimerId_ = setTimeout(() => {\n      const selectionGroup = this.getSelectionGroup_(listItem);\n\n      if (selectionGroup !== null) {\n        this.handleSelectionGroup_(/** @type {!HTMLElement} */ (selectionGroup), index);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /**\n   * Handles toggling the selected classes in a selection group when a\n   * selection is made.\n   * @param {!HTMLElement} selectionGroup\n   * @param {number} index The selected index value\n   * @private\n   */\n  handleSelectionGroup_(selectionGroup, index) {\n    // De-select the previous selection in this group.\n    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);\n    if (selectedIndex >= 0) {\n      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, strings.ARIA_SELECTED_ATTR);\n      this.adapter_.removeClassFromElementAtIndex(selectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n    // Select the new list item in this group.\n    this.adapter_.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter_.addAttributeToElementAtIndex(index, strings.ARIA_SELECTED_ATTR, 'true');\n  }\n\n  /**\n   * Returns the parent selection group of an element if one exists.\n   * @param listItem\n   * @return {?HTMLElement} parent selection group element or null.\n   * @private\n   */\n  getSelectionGroup_(listItem) {\n    let parent = this.adapter_.getParentElement(listItem);\n    let isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n\n    // Iterate through ancestors until we find the group or get to the list.\n    while (!isGroup && !this.adapter_.elementContainsClass(parent, MDCListFoundation.cssClasses.ROOT)) {\n      parent = this.adapter_.getParentElement(parent);\n      isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n    }\n\n    if (isGroup) {\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Find the first ancestor with the mdc-list-item class.\n   * @param {?HTMLElement} target\n   * @return {?HTMLElement}\n   * @private\n   */\n  getListItem_(target) {\n    let isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n\n    while (!isListItem) {\n      target = this.adapter_.getParentElement(target);\n      if (target) {\n        isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n      } else { // target has no parent element.\n        return null;\n      }\n    }\n\n    return target;\n  }\n}\n\nexport {MDCMenuFoundation};\n","<template>\n  <mdc-menu-surface\n    ref=\"root\"\n    :quick-open=\"quickOpen\"\n    :open=\"open\"\n    @change=\"onChange\"\n    @keydown=\"handleKeydown\"\n  >\n    <mdc-list ref=\"list\" @MDCList:action.native=\"handleAction\">\n      <slot />\n    </mdc-list>\n  </mdc-menu-surface>\n</template>\n\n<script>\nimport { MDCMenuFoundation } from '@material/menu/foundation'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-menu',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: [Boolean, Object],\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  provide() {\n    return { mdcMenu: this }\n  },\n  watch: {\n    // anchorCorner(nv) {\n    //   this.foundation.setAnchorCorner(Number(nv))\n    // },\n    // anchorMargin(nv) {\n    //   this.foundation.setAnchorMargin(nv)\n    // }\n  },\n  mounted() {\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuFoundation({\n      addClassToElementAtIndex: (index, className) => {\n        const list = this.items\n        list[index].classList.add(className)\n      },\n      removeClassFromElementAtIndex: (index, className) => {\n        const list = this.items\n        list[index].classList.remove(className)\n      },\n      addAttributeToElementAtIndex: (index, attr, value) => {\n        const list = this.items\n        list[index].setAttribute(attr, value)\n      },\n      removeAttributeFromElementAtIndex: (index, attr) => {\n        const list = this.items\n        list[index].removeAttribute(attr)\n      },\n      elementContainsClass: (element, className) =>\n        element.classList.contains(className),\n      closeSurface: () => {\n        this.$emit('change', false)\n      },\n      getElementIndex: element => {\n        return this.items.indexOf(element)\n      },\n      getParentElement: element => element.parentElement,\n      getSelectedElementIndex: selectionGroup => {\n        const idx = this.items.indexOf(\n          selectionGroup.querySelector(\n            `.${MDCMenuFoundation.cssClasses.MENU_SELECTED_LIST_ITEM}`\n          )\n        )\n        return idx\n      },\n      notifySelected: evtData => {\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.SELECTED_EVENT, {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        })\n\n        this.$emit('select', {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        })\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this._previousFocus = null\n    this.foundation.destroy()\n  },\n\n  computed: {\n    items() {\n      return this.$refs.list.listElements\n    }\n  },\n\n  methods: {\n    handleAction({ detail: { index } }) {\n      this.foundation.handleItemAction(this.items[index])\n    },\n\n    handleKeydown(evt) {\n      this.foundation.handleKeydown(evt)\n    },\n    onChange(item) {\n      this.$emit('change', item)\n    }\n    // onOpen_(value) {\n    //   if (value) {\n    //     this.foundation.open(typeof value === 'object' ? value : void 0)\n    //   } else {\n    //     this.foundation.close()\n    //   }\n    // },\n    // show(options) {\n    //   this.foundation.open(options)\n    // },\n    // hide() {\n    //   this.foundation.close()\n    // },\n    // isOpen() {\n    //   return this.foundation ? this.foundation.isOpen() : false\n    // }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\nexport {getTransformPropertyName};\n","<template>\n  <div\n    :class=\"classes\"\n    class=\"mdc-menu mdc-menu-surface\"\n    @keydown=\"handleKeydown\"\n    @MDCMenuSurface:opened=\"registerBodyClickListener\"\n    @MDCMenuSurface:closed=\"deregisterBodyClickListener\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nimport { MDCMenuSurfaceFoundation } from '@material/menu-surface/foundation'\nimport { emitCustomEvent } from '../base'\nimport * as util from '@material/menu-surface/util'\n\nexport default {\n  name: 'mdc-menu-surface',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: [Boolean, Object],\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  provide() {\n    return { mdcMenu: this }\n  },\n  watch: {\n    open: 'onOpen_',\n    quickOpen(nv) {\n      this.foundation.setQuickOpen(nv)\n    }\n  },\n  mounted() {\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuSurfaceFoundation(\n      Object.assign(\n        {\n          addClass: className => this.$set(this.classes, className, true),\n          removeClass: className => this.$delete(this.classes, className),\n          hasClass: className => this.$el.classList.contains(className),\n          hasAnchor: () => !!this.anchorElement,\n          notifyClose: () => {\n            emitCustomEvent(\n              this.$el,\n              MDCMenuSurfaceFoundation.strings.CLOSED_EVENT,\n              {}\n            )\n\n            this.$emit('change', false)\n          },\n          notifyOpen: () => {\n            emitCustomEvent(\n              this.$el,\n              MDCMenuSurfaceFoundation.strings.OPENED_EVENT,\n              {}\n            )\n\n            this.$emit('change', true)\n          },\n          isElementInContainer: el => this.$el === el || this.$el.contains(el),\n          isRtl: () =>\n            getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl',\n          setTransformOrigin: origin => {\n            this.$el.style[\n              `${util.getTransformPropertyName(window)}-origin`\n            ] = origin\n          }\n        },\n        this.getFocusAdapterMethods(),\n        this.getDimensionAdapterMethods()\n      )\n    )\n\n    if (\n      this.$el.parentElement &&\n      this.$el.parentElement.classList.contains(\n        MDCMenuSurfaceFoundation.cssClasses.ANCHOR\n      )\n    ) {\n      this.anchorElement = this.$el.parentElement\n    }\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this._previousFocus = null\n\n    this.foundation.destroy()\n  },\n\n  methods: {\n    handleBodyClick(evt) {\n      this.foundation.handleBodyClick(evt)\n    },\n\n    registerBodyClickListener() {\n      document.body.addEventListener('click', this.handleBodyClick)\n    },\n    deregisterBodyClickListener() {\n      document.body.removeEventListener('click', this.handleBodyClick)\n    },\n    handleKeydown(evt) {\n      this.foundation.handleKeydown(evt)\n    },\n    getFocusAdapterMethods() {\n      return {\n        isFocused: () => document.activeElement === this.$el,\n        saveFocus: () => {\n          this.previousFocus_ = document.activeElement\n        },\n        restoreFocus: () => {\n          if (this.$el.contains(document.activeElement)) {\n            if (this.previousFocus_ && this.previousFocus_.focus) {\n              this.previousFocus_.focus()\n            }\n          }\n        },\n        isFirstElementFocused: () =>\n          this.firstFocusableElement_ &&\n          this.firstFocusableElement_ === document.activeElement,\n        isLastElementFocused: () =>\n          this.lastFocusableElement_ &&\n          this.lastFocusableElement_ === document.activeElement,\n        focusFirstElement: () =>\n          this.firstFocusableElement_ &&\n          this.firstFocusableElement_.focus &&\n          this.firstFocusableElement_.focus(),\n        focusLastElement: () =>\n          this.lastFocusableElement_ &&\n          this.lastFocusableElement_.focus &&\n          this.lastFocusableElement_.focus()\n      }\n    },\n    getDimensionAdapterMethods() {\n      return {\n        getInnerDimensions: () => {\n          return {\n            width: this.$el.offsetWidth,\n            height: this.$el.offsetHeight\n          }\n        },\n        getAnchorDimensions: () =>\n          this.anchorElement && this.anchorElement.getBoundingClientRect(),\n        getWindowDimensions: () => {\n          return { width: window.innerWidth, height: window.innerHeight }\n        },\n        getBodyDimensions: () => {\n          return {\n            width: document.body.clientWidth,\n            height: document.body.clientHeight\n          }\n        },\n        getWindowScroll: () => {\n          return { x: window.pageXOffset, y: window.pageYOffset }\n        },\n        setPosition: position => {\n          this.$el.style.left = 'left' in position ? position.left : null\n          this.$el.style.right = 'right' in position ? position.right : null\n          this.$el.style.top = 'top' in position ? position.top : null\n          this.$el.style.bottom = 'bottom' in position ? position.bottom : null\n        },\n        setMaxHeight: height => {\n          this.$el.style.maxHeight = height\n        }\n      }\n    },\n\n    onOpen_(value) {\n      if (value) {\n        const focusableElements = this.$el.querySelectorAll(\n          MDCMenuSurfaceFoundation.strings.FOCUSABLE_ELEMENTS\n        )\n        this.firstFocusableElement_ =\n          focusableElements.length > 0 ? focusableElements[0] : null\n        this.lastFocusableElement_ =\n          focusableElements.length > 0\n            ? focusableElements[focusableElements.length - 1]\n            : null\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    hoistMenuToBody() {\n      document.body.appendChild(this.$el.parentElement.removeChild(this.$el))\n      this.setIsHoisted(true)\n    },\n    setIsHoisted(isHoisted) {\n      this.foundation.setIsHoisted(isHoisted)\n    },\n    setMenuSurfaceAnchorElement(element) {\n      this.anchorElement = element\n    },\n    setFixedPosition(isFixed) {\n      if (isFixed) {\n        this.$el.classList.add(cssClasses.FIXED)\n      } else {\n        this.$el.classList.remove(cssClasses.FIXED)\n      }\n\n      this.foundation.setFixedPosition(isFixed)\n    },\n    setAbsolutePosition(x, y) {\n      this.foundation.setAbsolutePosition(x, y)\n      this.setIsHoisted(true)\n    },\n    setAnchorCorner(corner) {\n      this.foundation.setAnchorCorner(corner)\n    },\n    setAnchorMargin(margin) {\n      this.foundation.setAnchorMargin(margin)\n    },\n    show(options) {\n      this.foundation.open(options)\n    },\n    hide() {\n      this.foundation.close()\n    },\n    isOpen() {\n      return this.foundation ? this.foundation.isOpen() : false\n    }\n  }\n}\n</script>\n","<template>\n  <li\n    :tabindex=\"disabled ? '-1' : '0'\"\n    :aria-disabled=\"disabled\"\n    class=\"mdc-menu-item mdc-list-item\"\n    role=\"menuitem\"\n  >\n    <slot />\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-item',\n  props: {\n    disabled: Boolean\n  },\n  inject: ['mdcMenu'],\n\n  mounted() {\n    console.dir(this.mdcMenu)\n    this.mdcMenu.items.push(this.$el)\n  }\n}\n</script>\n","<template>\n  <li \n    role=\"separator\" \n    class=\"mdc-menu-divider mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-divider'\n}\n</script>\n","<template>\n  <div class=\"mdc-menu-surface--anchor\"><slot /></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-anchor'\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcMenu from './mdc-menu.vue'\nimport mdcMenuSurface from './mdc-menu-surface.vue'\nimport mdcMenuItem from './mdc-menu-item.vue'\nimport mdcMenuDivider from './mdc-menu-divider.vue'\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\n\nexport { mdcMenu, mdcMenuItem, mdcMenuDivider, mdcMenuAnchor }\n\nexport default BasePlugin({\n  mdcMenu,\n  mdcMenuSurface,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["emitCustomEvent","el","evtType","evtData","evt","shouldBubble","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","Math","floor","random","toString","MDCFoundation","adapter","adapter_","cssClasses","ROOT","MENU_SELECTED_LIST_ITEM","MENU_SELECTION_GROUP","strings","SELECTED_EVENT","ARIA_SELECTED_ATTR","LIST_SELECTOR","CHECKBOX_SELECTOR","ANCHOR","ANIMATING_CLOSED","ANIMATING_OPEN","FIXED","OPEN","CLOSED_EVENT","OPENED_EVENT","FOCUSABLE_ELEMENTS","numbers","TRANSITION_OPEN_DURATION","TRANSITION_CLOSE_DURATION","MARGIN_TO_EDGE","ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO","CornerBit","Corner","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_START","TOP_END","BOTTOM_START","BOTTOM_END","MDCMenuSurfaceFoundation","_extends","defaultAdapter","isOpen_","openAnimationEndTimerId_","closeAnimationEndTimerId_","animationRequestId_","dimensions_","anchorCorner_","anchorMargin_","top","right","bottom","left","measures_","quickOpen_","hoistedElement_","isFixedPosition_","position_","x","y","addClass","removeClass","hasClass","hasAnchor","notifyClose","notifyOpen","isElementInContainer","isRtl","setTransformOrigin","isFocused","saveFocus","restoreFocus","isFirstElementFocused","isLastElementFocused","focusFirstElement","focusLastElement","getInnerDimensions","getAnchorDimensions","getWindowDimensions","getBodyDimensions","getWindowScroll","setPosition","setMaxHeight","this","Error","clearTimeout","cancelAnimationFrame","corner","margin","isHoisted","isFixedPosition","typeCheckisFinite_","quickOpen","target","close","keyCode","key","shiftKey","isTab","preventDefault","anchorRect","viewport","bodyDimensions","windowScroll","height","width","viewportDistance","anchorHeight","anchorWidth","surfaceHeight","surfaceWidth","isBottomAligned","Boolean","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","rightOffset","avoidVerticalOverlap","maxHeight","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuSurfaceHeight","getMenuSurfaceMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","position","prop","adjustPositionForHoistedElement_","hasOwnProperty","parseInt","requestAnimationFrame","_this2","autoPosition_","setTimeout","_this3","maybeRestoreFocus_","activeElement","num","isFinite","LIST_ITEM_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_ACTIVATED_CLASS","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_SELECTED","ARIA_CHECKED","ARIA_CHECKED_RADIO_SELECTOR","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_CHECKED_CHECKBOX_SELECTOR","RADIO_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","ENABLED_ITEMS_SELECTOR","ACTION_EVENT","ELEMENTS_KEY_ALLOWED_IN","MDCListFoundation","wrapFocus_","isVertical_","isSingleSelectionList_","selectedIndex_","focusedItemIndex_","useActivatedClass_","isCheckboxList_","isRadioList_","getListItemCount","getFocusedElementIndex","setAttributeForElementIndex","removeAttributeForElementIndex","addClassForElementIndex","removeClassForElementIndex","focusItemAtIndex","setTabIndexForListItemChildren","hasRadioAtIndex","hasCheckboxAtIndex","isCheckboxCheckedAtIndex","setCheckedCheckboxOrRadioAtIndex","notifyAction","isFocusInsideList","value","useActivated","index","isIndexValid_","setCheckboxAtIndex_","setRadioAtIndex_","setSingleSelectionAtIndex_","listItemIndex","setTabindexToFirstSelectedItem_","isRootListItem","arrowLeft","arrowUp","arrowRight","arrowDown","isHome","isEnd","isEnter","isSpace","currentIndex","nextIndex","preventDefaultEvent_","focusNextElement","focusPrevElement","tagName","isSelectableList_","setSelectedIndexOnAction_","setTabindexAtIndex_","toggleCheckbox","toLowerCase","indexOf","prevIndex","lastIndex","selectedClassName","i","isChecked","targetIndex","Array","length","reduce","minIndex","min","some","isIndexInRange_","listSize","toggleCheckboxAtIndex_","setSelectedIndex","push","filter","MDCMenuFoundation","addClassToElementAtIndex","removeClassFromElementAtIndex","addAttributeToElementAtIndex","removeAttributeFromElementAtIndex","elementContainsClass","closeSurface","getElementIndex","getParentElement","getSelectedElementIndex","notifySelected","listItem","selectionGroup","getSelectionGroup_","handleSelectionGroup_","selectedIndex","parent","isGroup","isListItem","storedTransformPropertyName_","globalObj","forceRefresh","undefined","transformPropertyName","createElement","style","components","version","install","vm","component","name","mdcMenu","mdcMenuSurface","mdcMenuItem","mdcMenuDivider","mdcMenuAnchor","plugin","_Vue","window","Vue","global","use"],"mappings":"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"}