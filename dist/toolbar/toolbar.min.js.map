{"version":3,"file":"toolbar.min.js","sources":["../../components/base/dispatch-event-mixin.js","../../node_modules/@material/base/foundation.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/toolbar/constants.js","../../node_modules/@material/toolbar/foundation.js","../../components/toolbar/mdc-toolbar.vue","../../components/toolbar/mdc-toolbar-row.vue","../../components/toolbar/mdc-toolbar-section.vue","../../components/toolbar/mdc-toolbar-menu-icon.vue","../../components/toolbar/mdc-toolbar-title.vue","../../components/toolbar/mdc-toolbar-icon.vue","../../components/base/base-plugin.js","../../components/toolbar/index.js","../../components/base/auto-init.js","../../components/toolbar/entry.js"],"sourcesContent":["export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","<template>\n  <header class=\"mdc-toolbar-wrapper\">\n    <!--Toolbar-->\n    <div \n      ref=\"root\" \n      :class=\"rootClasses\" \n      :style=\"rootStyles\">\n      <slot/>\n    </div>\n    <!-- Fixed Adjust Element-->\n    <div \n      v-if=\"fixed || waterfall || fixedLastrow\" \n      ref=\"fixed-adjust\" \n      :style=\"adjustStyles\"\n      class=\"mdc-toolbar-fixed-adjust\"/>\n  </header>\n</template>\n\n<script>\nimport MDCToolbarFoundation from '@material/toolbar/foundation'\n\nexport default {\n  name: 'mdc-toolbar',\n  props: {\n    fixed: Boolean,\n    waterfall: Boolean,\n    'fixed-lastrow': Boolean,\n    flexible: Boolean,\n    'flexible-default': { type: Boolean, default: true }\n  },\n  data() {\n    return {\n      rootClasses: {\n        'mdc-toolbar': true,\n        'mdc-toolbar--fixed': this.fixed || this.waterfall || this.fixedLastrow,\n        'mdc-toolbar--waterfall': this.waterfall,\n        'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,\n        'mdc-toolbar--flexible': this.flexible,\n        'mdc-toolbar--flexible-default-behavior':\n          this.flexible && this.flexibleDefault\n      },\n      rootStyles: {},\n      adjustStyles: {\n        // to avoid top margin collapse with :after el\n        // 0.1 px should be rounded to 0px\n        // TODO: find a better trick\n        // height: '0.1px'\n      },\n      foundation: null\n    }\n  },\n  mounted() {\n    this.foundation = new MDCToolbarFoundation({\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      },\n      getViewportWidth: () => {\n        return window.innerWidth\n      },\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getOffsetHeight: () => {\n        return this.$refs.root.offsetHeight\n      },\n      getFirstRowElementOffsetHeight: () => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        return el ? el.offsetHeight : undefined\n      },\n      notifyChange: evtData => {\n        this.$emit('change', evtData)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      setStyleForTitleElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.TITLE_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFlexibleRowElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFixedAdjustElement: (property, value) => {\n        this.$set(this.adjustStyles, property, value)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-toolbar-row mdc-toolbar__row\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-row'\n}\n</script>\n","<template>\n  <section \n    :class=\"classes\" \n    class=\"mdc-toolbar-section mdc-toolbar__section\">\n    <slot/>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-section',\n  props: {\n    'align-start': Boolean,\n    'align-end': Boolean,\n    'shrink-to-fit': Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-toolbar__section--align-start': this.alignStart,\n        'mdc-toolbar__section--align-end': this.alignEnd,\n        'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\"\n    class=\"mdc-toolbar-menu-icon mdc-toolbar__menu-icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-menu-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: { type: String, default: 'menu' }\n  }\n}\n</script>\n","<template>\n  <a \n    class=\"mdc-toolbar-title mdc-toolbar__title\" \n    v-on=\"listeners\">\n    <slot/>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-title',\n  mixins: [DispatchEventMixin]\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\" \n    class=\"mdc-toolbar-icon mdc-toolbar__icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: String\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcToolbar from './mdc-toolbar.vue'\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\n\nexport {\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n}\n\nexport default BasePlugin({\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["DispatchEventMixin","props","event","String","Object","Array","methods","dispatchEvent","evt","this","$emit","type","target","eventTarget","$root","args","eventArgs","computed","listeners","$listeners","click","e","_this","MDCFoundation","Math","floor","random","toString","adapter","adapter_","cssClasses","FIXED","FIXED_LASTROW","FIXED_AT_LAST_ROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","FLEXIBLE_MAX","FLEXIBLE_MIN","strings","TITLE_SELECTOR","ICON_SELECTOR","FIRST_ROW_SELECTOR","CHANGE_EVENT","numbers","MAX_TITLE_SIZE","MIN_TITLE_SIZE","TOOLBAR_ROW_HEIGHT","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_MOBILE_BREAKPOINT","MDCToolbarFoundation","_extends","defaultAdapter","resizeHandler_","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYRatio","scrollThresholdRatio","toolbarHeight","flexibleExpansionHeight","maxTranslateYDistance","scrollThreshold","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","hasClass","addClass","removeClass","registerScrollHandler","deregisterScrollHandler","registerResizeHandler","deregisterResizeHandler","getViewportWidth","getViewportScrollY","getOffsetHeight","getFirstRowElementOffsetHeight","notifyChange","setStyle","setStyleForTitleElement","setStyleForFlexibleRowElement","setStyleForFixedAdjustElement","initKeyRatio_","setKeyHeights_","scrollTop","max","cancelAnimationFrame","requestAnimationFrame","_this2","newToolbarRowHeight","getRowHeight_","updateAdjustElementStyles","_this3","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","breakpoint","translateDistance","min","height","updateElementStylesDefaultBehavior_","maxTitleSize","minTitleSize","currentTitleSize","components","version","install","vm","key","component","name","mdcToolbar","mdcToolbarRow","mdcToolbarSection","mdcToolbarMenuIcon","mdcToolbarTitle","mdcToolbarIcon","plugin","_Vue","window","Vue","global","use"],"mappings":"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"}