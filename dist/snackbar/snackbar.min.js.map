{"version":3,"file":"snackbar.min.js","sources":["../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/snackbar/constants.js","../../node_modules/@material/snackbar/foundation.js","../../node_modules/@material/dom/ponyfill.js","../../components/snackbar/mdc-snackbar.vue","../../components/base/base-plugin.js","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/snackbar/index.js","../../components/base/auto-init.js","../../components/snackbar/entry.js"],"sourcesContent":["const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  OPENING: 'mdc-snackbar--opening',\n  OPEN: 'mdc-snackbar--open',\n  CLOSING: 'mdc-snackbar--closing',\n};\n\nconst strings = {\n  SURFACE_SELECTOR: '.mdc-snackbar__surface',\n  LABEL_SELECTOR: '.mdc-snackbar__label',\n  ACTION_SELECTOR: '.mdc-snackbar__action',\n  DISMISS_SELECTOR: '.mdc-snackbar__dismiss',\n\n  OPENING_EVENT: 'MDCSnackbar:opening',\n  OPENED_EVENT: 'MDCSnackbar:opened',\n  CLOSING_EVENT: 'MDCSnackbar:closing',\n  CLOSED_EVENT: 'MDCSnackbar:closed',\n\n  REASON_ACTION: 'action',\n  REASON_DISMISS: 'dismiss',\n\n  ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text',\n};\n\nconst numbers = {\n  MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,\n  MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,\n  DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,\n\n  // These variables need to be kept in sync with the values in _variables.scss.\n  SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,\n  SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,\n\n  /**\n   * Number of milliseconds to wait between temporarily clearing the label text\n   * in the DOM and subsequently restoring it. This is necessary to force IE 11\n   * to pick up the `aria-live` content change and announce it to the user.\n   */\n  ARIA_LIVE_DELAY_MS: 1000,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [\"error\", {\"argsIgnorePattern\": \"evt\", \"varsIgnorePattern\": \"Adapter$\"}] */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSnackbarAdapter from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\n\nconst {OPENING, OPEN, CLOSING} = cssClasses;\nconst {REASON_ACTION, REASON_DISMISS} = strings;\n\nclass MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @return {!MDCSnackbarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSnackbarAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      announce: () => {},\n      notifyOpening: () => {},\n      notifyOpened: () => {},\n      notifyClosing: (/* reason: string */) => {},\n      notifyClosed: (/* reason: string */) => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSnackbarAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimeoutMs_ = numbers.DEFAULT_AUTO_DISMISS_TIMEOUT_MS;\n\n    /** @private {boolean} */\n    this.closeOnEscape_ = true;\n  }\n\n  destroy() {\n    this.clearAutoDismissTimer_();\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(OPEN);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  open() {\n    this.clearAutoDismissTimer_();\n    this.isOpen_ = true;\n    this.adapter_.notifyOpening();\n    this.adapter_.removeClass(CLOSING);\n    this.adapter_.addClass(OPENING);\n    this.adapter_.announce();\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(OPEN);\n\n      this.animationTimer_ = setTimeout(() => {\n        this.handleAnimationTimerEnd_();\n        this.adapter_.notifyOpened();\n        this.autoDismissTimer_ = setTimeout(() => {\n          this.close(REASON_DISMISS);\n        }, this.getTimeoutMs());\n      }, numbers.SNACKBAR_ANIMATION_OPEN_TIME_MS);\n    });\n  }\n\n  /**\n   * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n   *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n   *     client-specific values may also be used if desired.\n   */\n  close(reason = '') {\n    if (!this.isOpen_) {\n      // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed\n      return;\n    }\n\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    this.clearAutoDismissTimer_();\n\n    this.isOpen_ = false;\n    this.adapter_.notifyClosing(reason);\n    this.adapter_.addClass(cssClasses.CLOSING);\n    this.adapter_.removeClass(cssClasses.OPEN);\n    this.adapter_.removeClass(cssClasses.OPENING);\n\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = setTimeout(() => {\n      this.handleAnimationTimerEnd_();\n      this.adapter_.notifyClosed(reason);\n    }, numbers.SNACKBAR_ANIMATION_CLOSE_TIME_MS);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * @return {number}\n   */\n  getTimeoutMs() {\n    return this.autoDismissTimeoutMs_;\n  }\n\n  /**\n   * @param {number} timeoutMs\n   */\n  setTimeoutMs(timeoutMs) {\n    // Use shorter variable names to make the code more readable\n    const minValue = numbers.MIN_AUTO_DISMISS_TIMEOUT_MS;\n    const maxValue = numbers.MAX_AUTO_DISMISS_TIMEOUT_MS;\n\n    if (timeoutMs <= maxValue && timeoutMs >= minValue) {\n      this.autoDismissTimeoutMs_ = timeoutMs;\n    } else {\n      throw new Error(`timeoutMs must be an integer in the range ${minValue}–${maxValue}, but got '${timeoutMs}'`);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getCloseOnEscape() {\n    return this.closeOnEscape_;\n  }\n\n  /**\n   * @param {boolean} closeOnEscape\n   */\n  setCloseOnEscape(closeOnEscape) {\n    this.closeOnEscape_ = closeOnEscape;\n  }\n\n  /**\n   * @param {!KeyboardEvent} evt\n   */\n  handleKeyDown(evt) {\n    if (this.getCloseOnEscape() && (evt.key === 'Escape' || evt.keyCode === 27)) {\n      this.close(REASON_DISMISS);\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionButtonClick(evt) {\n    this.close(REASON_ACTION);\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionIconClick(evt) {\n    this.close(REASON_DISMISS);\n  }\n\n  /** @private */\n  clearAutoDismissTimer_() {\n    clearTimeout(this.autoDismissTimer_);\n    this.autoDismissTimer_ = 0;\n  }\n\n  /** @private */\n  handleAnimationTimerEnd_() {\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(cssClasses.OPENING);\n    this.adapter_.removeClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCSnackbarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","<template>\n  <div ref=\"root\" :class=\"classes\" class=\"mdc-snackbar\">\n    <div class=\"mdc-snackbar__surface\" @click=\"surfaceClickHandler\">\n      <div\n        ref=\"labelEl\"\n        class=\"mdc-snackbar__label\"\n        role=\"status\"\n        aria-live=\"polite\"\n      >\n        <template v-if=\"showLabelText\">\n          {{ labelText }}\n        </template>\n        <span style=\"display: inline-block; width: 0; height: 1px;\" v-else\n          >&nbsp;</span\n        >\n      </div>\n      <div class=\"mdc-snackbar__actions\">\n        <button\n          ref=\"actionEl\"\n          type=\"button\"\n          class=\"mdc-button mdc-snackbar__action\"\n          v-on=\"$listeners\"\n        >\n          {{ actionText }}\n        </button>\n\n        <button\n          class=\"mdc-icon-button mdc-snackbar__dismiss material-icons\"\n          title=\"Dismiss\"\n          v-if=\"showDismissAction\"\n        >\n          close\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation'\nimport { getCorrectEventName } from '@material/animation/index'\nimport * as ponyfill from '@material/dom/ponyfill'\n\nexport default {\n  name: 'mdc-snackbar',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: Boolean,\n    stacked: Boolean,\n    leading: Boolean,\n    labelText: String,\n    actionText: String,\n    timeoutMs: [String, Number],\n\n    dismissAction: { type: [String, Boolean], default: true }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-snackbar--leading': this.leading,\n\n        'mdc-snackbar--stacked': this.stacked\n      },\n      hidden: false,\n      actionHidden: false,\n      showLabelText: true\n    }\n  },\n  watch: {\n    open: 'onOpen_',\n\n    timeoutMs: 'onTimeoutMs_'\n  },\n  mounted() {\n    window.addEventListener('keydown', this.handleKeydownEvent)\n\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      announce: () => this.announce(this.$refs.labelEl),\n      notifyOpening: () =>\n        this.$emit(MDCSnackbarFoundation.strings.OPENING_EVENT, {}),\n      notifyOpened: () => {\n        this.$emit(MDCSnackbarFoundation.strings.OPENED_EVENT, {})\n        this.$emit('change', true)\n        this.$emit('show', {})\n      },\n      notifyClosing: reason =>\n        this.$emit(\n          MDCSnackbarFoundation.strings.CLOSING_EVENT,\n          reason ? { reason } : {}\n        ),\n      notifyClosed: reason => {\n        this.$emit(\n          MDCSnackbarFoundation.strings.CLOSED_EVENT,\n          reason ? { reason } : {}\n        )\n        this.$emit('change', false)\n        this.$emit('hide')\n      }\n    })\n    this.foundation.init()\n\n    if (this.timeoutMs !== void 0) {\n      this.foundation.setTimeoutMs(this.timeoutMs)\n    }\n  },\n  computed: {\n    showDismissAction() {\n      return typeof this.dismissAction === 'string'\n        ? this.dismissAction != 'false'\n        : this.dismissAction\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('keydown', this.handleKeydownEvent)\n    this.foundation.destroy()\n  },\n  methods: {\n    onTimeoutMs_(value) {\n      if (value !== void 0) {\n        this.foundation.setTimeoutMs(value)\n      }\n    },\n    onOpen_(value) {\n      if (value) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    surfaceClickHandler(evt) {\n      if (this.isActionButton_(evt.target)) {\n        this.foundation.handleActionButtonClick(evt)\n      } else if (this.isActionIcon_(evt.target)) {\n        this.foundation.handleActionIconClick(evt)\n      }\n    },\n\n    handleKeydownEvent(evt) {\n      this.foundation.handleKeyDown(evt)\n    },\n\n    isActionButton_(target) {\n      return Boolean(\n        ponyfill.closest(target, MDCSnackbarFoundation.strings.ACTION_SELECTOR)\n      )\n    },\n\n    isActionIcon_(target) {\n      return Boolean(\n        ponyfill.closest(target, MDCSnackbarFoundation.strings.DISMISS_SELECTOR)\n      )\n    },\n\n    announce(ariaEl, labelEl = ariaEl) {\n      const priority = ariaEl.getAttribute('aria-live')\n\n      const text = this.labelText\n      if (!text) {\n        return\n      }\n\n      // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.\n      ariaEl.setAttribute('aria-live', 'off')\n\n      // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.\n      // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars\n      // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.\n      // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,\n      // so screen readers won't announce the second message unless we first clear `textContent`.\n      //\n      // We have to clear the label text two different ways to make it work in all browsers and screen readers:\n      //\n      //   1. `textContent = ''` is required for IE11 + JAWS\n      //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA\n      //\n      // All other browser/screen reader combinations support both methods.\n      //\n      // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.\n      // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.\n      //\n      // This technique has been tested in:\n      //\n      //   * JAWS 2019:\n      //       - Chrome 70\n      //       - Firefox 60 (ESR)\n      //       - IE 11\n      //   * NVDA 2018:\n      //       - Chrome 70\n      //       - Firefox 60 (ESR)\n      //       - IE 11\n      //   * ChromeVox 53\n      this.showLabelText = false\n\n      // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.\n      // CSS generated content is normally announced by screen readers\n      // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);\n      // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.\n      labelEl.setAttribute(\n        MDCSnackbarFoundation.strings.ARIA_LIVE_LABEL_TEXT_ATTR,\n        this.labelText\n      )\n\n      setTimeout(() => {\n        // Allow screen readers to announce changes to the DOM again.\n        ariaEl.setAttribute('aria-live', priority)\n\n        // Remove the message from the ::before pseudo-element.\n        labelEl.removeAttribute(\n          MDCSnackbarFoundation.strings.ARIA_LIVE_LABEL_TEXT_ATTR\n        )\n\n        // Restore the original label text, which will be announced by screen readers.\n        this.showLabelText = true\n      }, MDCSnackbarFoundation.numbers.ARIA_LIVE_DELAY_MS)\n    }\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","import { BasePlugin } from '../base'\nimport mdcSnackbar from './mdc-snackbar.vue'\n\nexport { mdcSnackbar }\n\nexport default BasePlugin({\n  mdcSnackbar\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["Math","floor","random","toString","MDCFoundation","adapter","adapter_","cssClasses","OPENING","OPEN","CLOSING","strings","SURFACE_SELECTOR","LABEL_SELECTOR","ACTION_SELECTOR","DISMISS_SELECTOR","OPENING_EVENT","OPENED_EVENT","CLOSING_EVENT","CLOSED_EVENT","REASON_ACTION","REASON_DISMISS","ARIA_LIVE_LABEL_TEXT_ATTR","numbers","MIN_AUTO_DISMISS_TIMEOUT_MS","MAX_AUTO_DISMISS_TIMEOUT_MS","DEFAULT_AUTO_DISMISS_TIMEOUT_MS","SNACKBAR_ANIMATION_OPEN_TIME_MS","SNACKBAR_ANIMATION_CLOSE_TIME_MS","ARIA_LIVE_DELAY_MS","MDCSnackbarFoundation","_extends","defaultAdapter","isOpen_","animationFrame_","animationTimer_","autoDismissTimer_","autoDismissTimeoutMs_","closeOnEscape_","addClass","removeClass","announce","notifyOpening","notifyOpened","notifyClosing","notifyClosed","clearAutoDismissTimer_","cancelAnimationFrame","this","clearTimeout","runNextAnimationFrame_","_this2","setTimeout","handleAnimationTimerEnd_","close","getTimeoutMs","reason","_this3","timeoutMs","minValue","maxValue","Error","closeOnEscape","evt","getCloseOnEscape","key","keyCode","callback","requestAnimationFrame","_this4","closest","element","selector","el","matches","parentElement","webkitMatchesSelector","msMatchesSelector","call","script","components","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","version","install","vm","component","name","mdcSnackbar","plugin","_Vue","window","Vue","global","use"],"mappings":"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"}