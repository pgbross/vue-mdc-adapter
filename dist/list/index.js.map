{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/list/adapter.js","../../node_modules/@material/list/constants.js","../../node_modules/@material/list/foundation.js","../../node_modules/@material/dom/ponyfill.js","../../components/list/mdc-list.vue","../../components/list/mdc-list-item.vue","../../components/list/mdc-list-divider.vue","../../components/list/mdc-list-group.vue","../../components/list/mdc-list-group-header.vue","../../components/list/mdc-list-group-divider.vue","../../components/list/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC List. Provides an interface for managing focus.\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCListAdapter {\n  /** @return {number} */\n  getListItemCount() {}\n\n  /**\n   * @return {number} */\n  getFocusedElementIndex() {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   * @param {string} value\n   */\n  setAttributeForElementIndex(index, attribute, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attribute\n   */\n  removeAttributeForElementIndex(index, attribute) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForElementIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  removeClassForElementIndex(index, className) {}\n\n  /**\n   * Focuses list item at the index specified.\n   * @param {number} index\n   */\n  focusItemAtIndex(index) {}\n\n  /**\n   * Sets the tabindex to the value specified for all button/a element children of\n   * the list item at the index specified.\n   * @param {number} listItemIndex\n   * @param {number} tabIndexValue\n   */\n  setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}\n\n  /**\n   * If the given element has an href, follows the link.\n   * @param {!Element} ele\n   */\n  followHref(ele) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if radio button is present at given list item index.\n   */\n  hasRadioAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox is present at given list item index.\n   */\n  hasCheckboxAtIndex(index) {}\n\n  /**\n   * @param {number} index\n   * @return {boolean} Returns true if checkbox inside a list item is checked.\n   */\n  isCheckboxCheckedAtIndex(index) {}\n\n  /**\n   * Sets the checked status of checkbox or radio at given list item index.\n   * @param {number} index\n   * @param {boolean} isChecked\n   */\n  setCheckedCheckboxOrRadioAtIndex(index, isChecked) {}\n}\n\nexport default MDCListAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      followHref: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** {boolean} */\n    this.wrapFocus_ = false;\n    /** {boolean} */\n    this.isVertical_ = true;\n    /** {boolean} */\n    this.isSingleSelectionList_ = false;\n    /** {number} */\n    this.selectedIndex_ = -1;\n    /** {boolean} */\n    this.useActivatedClass_ = false;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @param {number} index */\n  setSelectedIndex(index) {\n    if (index < 0 || index >= this.adapter_.getListItemCount()) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(index)) {\n      this.setAriaAttributesForCheckbox_(index);\n    } else if (this.adapter_.hasRadioAtIndex(index)) {\n      this.setAriaAttributesForRadio_(index);\n    } else {\n      this.setAriaAttributesForSingleSelect_(index);\n      this.setClassNamesForSingleSelect_(index);\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);\n    } else if (this.selectedIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setAriaAttributesForCheckbox_(index) {\n    const ariaAttributeValue = this.adapter_.isCheckboxCheckedAtIndex(index) ? 'true' : 'false';\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, ariaAttributeValue);\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setAriaAttributesForRadio_(index) {\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n  }\n\n  /**\n  * @param {number} index\n  * @private\n  */\n  setAriaAttributesForSingleSelect_(index) {\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setClassNamesForSingleSelect_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        if (this.isSingleSelectionList_) {\n          // Check if the space key was pressed on the list item or a child element.\n          this.preventDefaultEvent_(evt);\n        }\n\n        const hasCheckboxOrRadio = this.hasCheckboxOrRadioAtIndex_(listItemIndex);\n        if (hasCheckboxOrRadio) {\n          this.toggleCheckboxOrRadioAtIndex_(listItemIndex);\n          this.preventDefaultEvent_(evt);\n        }\n\n        if (this.isSingleSelectionList_ || hasCheckboxOrRadio) {\n          this.setSelectedIndex(currentIndex);\n        }\n\n        // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n        this.adapter_.followHref(currentIndex);\n      }\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (toggleCheckbox) {\n      this.toggleCheckboxOrRadioAtIndex_(index);\n    }\n\n    if (this.isSingleSelectionList_ || this.hasCheckboxOrRadioAtIndex_(index)) {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n  }\n\n  focusFirstElement() {\n    if (this.adapter_.getListItemCount() > 0) {\n      this.adapter_.focusItemAtIndex(0);\n    }\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    if (lastIndex >= 0) {\n      this.adapter_.focusItemAtIndex(lastIndex);\n    }\n  }\n\n  /**\n   * Toggles checkbox or radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  toggleCheckboxOrRadioAtIndex_(index) {\n    if (!this.hasCheckboxOrRadioAtIndex_(index)) return;\n\n    let isChecked = true;\n    if (this.adapter_.hasCheckboxAtIndex(index)) {\n      isChecked = !this.adapter_.isCheckboxCheckedAtIndex(index);\n    }\n\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean} Return true if list item contains checkbox or radio input at given index.\n   */\n  hasCheckboxOrRadioAtIndex_(index) {\n    return this.adapter_.hasCheckboxAtIndex(index) || this.adapter_.hasRadioAtIndex(index);\n  }\n}\n\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","<template>\n  <ul\n    :class=\"classes\"\n    class=\"mdc-list\"\n    :aria-orientation=\"orientation\"\n    @click=\"handleClickEvent\"\n    @keydown=\"handleKeydownEvent\"\n    @focusin=\"handleFocusInEvent\"\n    @focusout=\"handleFocusOutEvent\"\n  >\n    <slot />\n  </ul>\n</template>\n\n<script>\nimport MDCListFoundation from '@material/list/foundation'\nimport { matches } from '@material/dom/ponyfill'\n\nexport default {\n  name: 'mdc-list',\n  props: {\n    dense: Boolean,\n    avatarList: Boolean,\n    twoLine: Boolean,\n    bordered: Boolean,\n    interactive: { type: Boolean, default: true },\n    singleSelection: Boolean,\n    vertical: { type: Boolean, default: true }\n  },\n  provide() {\n    return { mdcList: this }\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list--dense': this.dense,\n        'mdc-list--avatar-list': this.avatarList,\n        'mdc-list--two-line': this.twoLine,\n        'mdc-list--bordered': this.bordered,\n        'mdc-list--non-interactive': !this.interactive\n      }\n    },\n\n    orientation() {\n      return this.vertical ? 'vertical' : 'horizontal'\n    },\n\n    listElements() {\n      return [].slice.call(\n        this.$el.querySelectorAll(\n          MDCListFoundation.strings.ENABLED_ITEMS_SELECTOR\n        )\n      )\n    }\n  },\n  methods: {\n    handleFocusInEvent(evt) {\n      const index = this.getListItemIndex(evt)\n      this.foundation.handleFocusIn(evt, index)\n    },\n    handleFocusOutEvent(evt) {\n      const index = this.getListItemIndex(evt)\n      this.foundation.handleFocusOut(evt, index)\n    },\n\n    handleKeydownEvent(evt) {\n      const index = this.getListItemIndex(evt)\n\n      if (index >= 0) {\n        this.foundation.handleKeydown(\n          evt,\n          evt.target.classList.contains(\n            MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n          ),\n          index\n        )\n      }\n    },\n    handleClickEvent(evt) {\n      const index = this.getListItemIndex(evt)\n\n      // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n      const toggleCheckbox = !matches(\n        evt.target,\n        MDCListFoundation.strings.CHECKBOX_RADIO_SELECTOR\n      )\n      this.foundation.handleClick(index, toggleCheckbox)\n    },\n\n    layout() {\n      // List items need to have at least tabindex=-1 to be focusable.\n      ;[].slice\n        .call(this.$el.querySelectorAll('.mdc-list-item:not([tabindex])'))\n        .forEach(ele => {\n          ele.setAttribute('tabindex', -1)\n        })\n\n      // Child button/a elements are not tabbable until the list item is focused.\n      ;[].slice\n        .call(\n          this.$el.querySelectorAll(\n            MDCListFoundation.strings.FOCUSABLE_CHILD_ELEMENTS\n          )\n        )\n        .forEach(ele => ele.setAttribute('tabindex', -1))\n    },\n\n    initializeListType() {\n      // Automatically set single selection if selected/activated classes are present.\n      const preselectedElement = this.$el.querySelector(\n        `.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}, .${\n          MDCListFoundation.cssClasses.LIST_ITEM_SELECTED_CLASS\n        }`\n      )\n\n      if (preselectedElement) {\n        if (\n          preselectedElement.classList.contains(\n            MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS\n          )\n        ) {\n          this.foundation.setUseActivatedClass(true)\n        }\n\n        this.singleSelection = true\n        this.selectedIndex = this.listElements.indexOf(preselectedElement)\n      }\n    },\n\n    getListItemIndex(evt) {\n      let eventTarget = evt.target\n      let index = -1\n\n      // Find the first ancestor that is a list item or the list.\n      while (\n        !eventTarget.classList.contains(\n          MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n        ) &&\n        !eventTarget.classList.contains(MDCListFoundation.cssClasses.ROOT)\n      ) {\n        eventTarget = eventTarget.parentElement\n      }\n\n      // Get the index of the element if it is a list item.\n      if (\n        eventTarget.classList.contains(\n          MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n        )\n      ) {\n        index = this.listElements.indexOf(eventTarget)\n      }\n\n      return index\n    }\n  },\n  mounted() {\n    this.foundation = new MDCListFoundation({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () =>\n        this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.setAttribute(attr, value)\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.removeAttribute(attr)\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.classList.add(className)\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.classList.remove(className)\n        }\n      },\n      focusItemAtIndex: index => {\n        const element = this.listElements[index]\n        if (element) {\n          element.focus()\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex]\n        const listItemChildren = [].slice.call(\n          element.querySelectorAll(\n            MDCListFoundation.strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX\n          )\n        )\n        listItemChildren.forEach(ele =>\n          ele.setAttribute('tabindex', tabIndexValue)\n        )\n      },\n      followHref: index => {\n        const listItem = this.listElements[index]\n        if (listItem && listItem.href) {\n          listItem.click()\n        }\n      },\n      hasCheckboxAtIndex: index => {\n        const listItem = this.listElements[index]\n        return !!listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_SELECTOR\n        )\n      },\n      hasRadioAtIndex: index => {\n        const listItem = this.listElements[index]\n        return !!listItem.querySelector(\n          MDCListFoundation.strings.RADIO_SELECTOR\n        )\n      },\n      isCheckboxCheckedAtIndex: index => {\n        const listItem = this.listElements[index]\n        const toggleEl = listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_SELECTOR\n        )\n        return toggleEl.checked\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index]\n        const toggleEl = listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_RADIO_SELECTOR\n        )\n        toggleEl.checked = isChecked\n\n        const event = document.createEvent('Event')\n        event.initEvent('change', true, true)\n        toggleEl.dispatchEvent(event)\n      }\n    })\n\n    this.foundation.init()\n\n    this.foundation.setSingleSelection(this.singleSelection)\n\n    this.foundation.setVerticalOrientation(this.vertical)\n\n    this.layout()\n  }\n}\n</script>\n","<template>\n  <li\n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\"\n    :tabindex=\"isInteractive ? '0' : undefined\"\n    class=\"mdc-list-item\"\n    v-on=\"isInteractive ? $listeners : {}\"\n  >\n    <!-- <span v-if=\"hasStartDetail\" class=\"mdc-list-item__graphic\"> -->\n    <slot name=\"start-detail\" />\n    <!-- </span> -->\n\n    <span class=\"mdc-list-item__text\" v-if=\"hasSecondary\"\n      ><span class=\"mdc-list-item__primary-text\"> <slot /></span>\n      <span class=\"mdc-list-item__secondary-text\" v-if=\"hasSecondary\">\n        <slot name=\"secondary\" />\n      </span>\n    </span>\n\n    <span class=\"mdc-list-item__text\" v-else> <slot /> </span>\n\n    <!-- <span v-if=\"hasEndDetail\" class=\"mdc-list-item__meta\"> -->\n    <slot name=\"end-detail\" />\n    <!-- </span> -->\n  </li>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-list-item',\n  inject: ['mdcList'],\n  props: {\n    selected: Boolean,\n    activated: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    itemClasses() {\n      return {\n        'mdc-list-item--selected': this.selected,\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    isInteractive() {\n      return this.mdcList && this.mdcList.interactive\n    },\n    hasSecondary() {\n      return this.$slots['secondary'] && (this.mdcList && this.mdcList.twoLine)\n    },\n    hasEndDetail() {\n      return !!this.$slots['end-detail']\n    },\n    hasStartDetail() {\n      return !!this.$slots['start-detail']\n    }\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  mounted() {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy() {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"classes\" \n    role=\"separator\" \n    class=\"mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-divider',\n  props: {\n    inset: Boolean,\n    padded: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list-divider--inset': this.inset,\n        'mdc-list-divider--padded': this.padded\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-list-group\"><slot/></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group'\n}\n</script>\n","<template>\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot/></h3>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-header'\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-divider'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcList from './mdc-list.vue'\nimport mdcListItem from './mdc-list-item.vue'\nimport mdcListDivider from './mdc-list-divider.vue'\nimport mdcListGroup from './mdc-list-group.vue'\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\n\nexport {\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n}\n\nexport default BasePlugin({\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n})\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCListAdapter","index","attribute","value","className","listItemIndex","tabIndexValue","ele","isChecked","cssClasses","ROOT","LIST_ITEM_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_ACTIVATED_CLASS","strings","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_SELECTED","ARIA_CHECKED","ARIA_CHECKED_RADIO_SELECTOR","RADIO_SELECTOR","CHECKBOX_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","ENABLED_ITEMS_SELECTOR","ELEMENTS_KEY_ALLOWED_IN","MDCListFoundation","getListItemCount","getFocusedElementIndex","setAttributeForElementIndex","removeAttributeForElementIndex","addClassForElementIndex","removeClassForElementIndex","focusItemAtIndex","setTabIndexForListItemChildren","followHref","hasRadioAtIndex","hasCheckboxAtIndex","isCheckboxCheckedAtIndex","setCheckedCheckboxOrRadioAtIndex","defaultAdapter","wrapFocus_","isVertical_","isSingleSelectionList_","selectedIndex_","useActivatedClass_","useActivated","setAriaAttributesForCheckbox_","setAriaAttributesForRadio_","setAriaAttributesForSingleSelect_","setClassNamesForSingleSelect_","ariaAttributeValue","selectedClassName","evt","isRootListItem","arrowLeft","keyCode","arrowUp","arrowRight","arrowDown","isHome","isEnd","isEnter","isSpace","currentIndex","preventDefaultEvent_","focusNextElement","focusPrevElement","focusFirstElement","focusLastElement","hasCheckboxOrRadio","hasCheckboxOrRadioAtIndex_","toggleCheckboxOrRadioAtIndex_","setSelectedIndex","toggleCheckbox","tagName","target","toLowerCase","indexOf","preventDefault","count","nextIndex","prevIndex","lastIndex","matches","element","selector","nativeMatches","webkitMatchesSelector","msMatchesSelector","call","mdcList","mdcListItem","mdcListDivider","mdcListGroup","mdcListGroupHeader","mdcListGroupDivider"],"mappings":"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"}