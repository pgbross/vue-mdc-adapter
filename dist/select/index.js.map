{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/select/icon/adapter.js","../../node_modules/@material/select/icon/constants.js","../../node_modules/@material/select/icon/foundation.js","../../node_modules/@material/select/icon/index.js","../../node_modules/@material/select/helper-text/adapter.js","../../node_modules/@material/select/helper-text/constants.js","../../node_modules/@material/select/helper-text/foundation.js","../../node_modules/@material/select/helper-text/index.js","../../node_modules/@material/select/adapter.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/select/foundation.js","../../components/select/select-helper-text.vue","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/select/select-icon.vue","../../components/select/mdc-select.vue","../../components/select/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the select icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCSelect:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCSelectIconAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCSelect:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCSelectIconAdapter>}\n * @final\n */\nclass MDCSelectIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCSelectIconFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCSelectIconAdapter from './adapter';\nimport MDCSelectIconFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCSelectIconFoundation>}\n * @final\n */\nclass MDCSelectIcon extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCSelectIcon}\n   */\n  static attachTo(root) {\n    return new MDCSelectIcon(root);\n  }\n\n  /**\n   * @return {!MDCSelectIconFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCSelectIconFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCSelectIconFoundation(/** @type {!MDCSelectIconAdapter} */ (Object.assign({\n      getAttr: (attr) => this.root_.getAttribute(attr),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n      notifyIconAction: () => this.emit(\n        MDCSelectIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */),\n    })));\n  }\n}\n\nexport {MDCSelectIcon, MDCSelectIconFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCSelectHelperTextAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-select-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-select-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCSelectHelperTextAdapter>}\n * @final\n */\nclass MDCSelectHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the select validity.\n   * @param {boolean} selectIsValid\n   */\n  setValidity(selectIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !selectIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCSelectHelperTextFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCSelectHelperTextAdapter from './adapter';\nimport MDCSelectHelperTextFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCSelectHelperTextFoundation>}\n * @final\n */\nclass MDCSelectHelperText extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCSelectHelperText}\n   */\n  static attachTo(root) {\n    return new MDCSelectHelperText(root);\n  }\n\n  /**\n   * @return {!MDCSelectHelperTextFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCSelectHelperTextFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCSelectHelperTextFoundation(/** @type {!MDCSelectHelperTextAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n    })));\n  }\n}\n\nexport {MDCSelectHelperText, MDCSelectHelperTextFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n/* eslint-disable no-unused-vars */\nimport {MDCSelectIconFoundation} from './icon/index';\nimport {MDCSelectHelperTextFoundation} from './helper-text/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {{\n *   leadingIcon: (!MDCSelectIconFoundation|undefined),\n *   helperText: (!MDCSelectHelperTextFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Select. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCSelectAdapter {\n  /**\n   * Adds class to root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Activates the bottom line, showing a focused state.\n   */\n  activateBottomLine() {}\n\n  /**\n   * Deactivates the bottom line.\n   */\n  deactivateBottomLine() {}\n\n  /**\n   * Sets the value of the select.\n   * @param {string} value\n   */\n  setValue(value) {}\n\n  /**\n   * Returns the selected value of the select element.\n   * @return {string}\n   */\n  getValue() {}\n\n  /**\n   * Floats label determined based off of the shouldFloat argument.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns width of label in pixels, if the label exists.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * @param {number} labelWidth\n   */\n  notchOutline(labelWidth) {}\n\n  /**\n   * Closes notch in outline element, if the outline exists.\n   */\n  closeOutline() {}\n\n  /**\n   * Opens the menu.\n   */\n  openMenu() {}\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {}\n\n  /**\n   * Returns true if the menu is currently open.\n   * @return {boolean}\n   */\n  isMenuOpen() {}\n\n  /**\n   * Sets the selected index of the select to the index provided.\n   * @param {number} index\n   */\n  setSelectedIndex(index) {}\n\n  /**\n   * Sets the select to disabled.\n   * @param {boolean} isDisabled\n   */\n  setDisabled(isDisabled) {}\n\n  /**\n   * Sets the line ripple transform origin center.\n   * @param {number} normalizedX\n   */\n  setRippleCenter(normalizedX) {}\n\n  /**\n   * Emits a change event when an element is selected.\n   * @param {string} value\n   */\n  notifyChange(value) {}\n\n  /**\n   * Checks if the select is currently valid.\n   * @return {boolean} isValid\n   */\n  checkValidity() {}\n\n  /**\n   * Adds/Removes the invalid class.\n   * @param {boolean} isValid\n   */\n  setValid(isValid) {}\n}\n\nexport {MDCSelectAdapter, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n  FOCUSED: 'mdc-select--focused',\n  SELECTED_ITEM_CLASS: 'mdc-list-item--selected',\n  WITH_LEADING_ICON: 'mdc-select--with-leading-icon',\n  INVALID: 'mdc-select--invalid',\n  REQUIRED: 'mdc-select--required',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  CHANGE_EVENT: 'MDCSelect:change',\n  SELECTED_ITEM_SELECTOR: `.${cssClasses.SELECTED_ITEM_CLASS}`,\n  LEADING_ICON_SELECTOR: '.mdc-select__icon',\n  SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',\n  HIDDEN_INPUT_SELECTOR: 'input[type=\"hidden\"]',\n  MENU_SELECTOR: '.mdc-select__menu',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  ENHANCED_VALUE_ATTR: 'data-value',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectAdapter, FoundationMapType} from './adapter';\nimport {MDCSelectIconFoundation} from './icon/index';\nimport {MDCSelectHelperTextFoundation} from './helper-text/index';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectAdapter>}\n * @final\n */\nclass MDCSelectFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      setValue: () => {},\n      getValue: () => {},\n      floatLabel: (/* value: boolean */) => {},\n      getLabelWidth: () => {},\n      hasOutline: () => false,\n      notchOutline: (/* labelWidth: number, */) => {},\n      closeOutline: () => {},\n      openMenu: () => {},\n      closeMenu: () => {},\n      isMenuOpen: () => {},\n      setSelectedIndex: () => {},\n      setDisabled: () => {},\n      setRippleCenter: () => {},\n      notifyChange: () => {},\n      checkValidity: () => {},\n      setValid: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCSelectIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCSelectHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.closeMenu();\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  getValue() {\n    return this.adapter_.getValue();\n  }\n\n  setDisabled(isDisabled) {\n    isDisabled ? this.adapter_.addClass(cssClasses.DISABLED) : this.adapter_.removeClass(cssClasses.DISABLED);\n    this.adapter_.setDisabled(isDisabled);\n    this.adapter_.closeMenu();\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  layout() {\n    const openNotch = this.getValue().length > 0;\n    this.notchOutline(openNotch);\n  }\n\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n  handleChange(didChange = true) {\n    const value = this.getValue();\n    const optionHasValue = value.length > 0;\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    this.notchOutline(optionHasValue);\n\n    if (!this.adapter_.hasClass(cssClasses.FOCUSED)) {\n      this.adapter_.floatLabel(optionHasValue);\n    }\n\n    if (didChange) {\n      this.adapter_.notifyChange(value);\n\n      if (isRequired) {\n        this.setValid(this.isValid());\n        if (this.helperText_) {\n          this.helperText_.setValidity(this.isValid());\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles focus events from select element.\n   */\n  handleFocus() {\n    this.adapter_.addClass(cssClasses.FOCUSED);\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Handles blur events from select element.\n   */\n  handleBlur() {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.removeClass(cssClasses.FOCUSED);\n    this.handleChange(false);\n    this.adapter_.deactivateBottomLine();\n\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    if (isRequired) {\n      this.setValid(this.isValid());\n      if (this.helperText_) {\n        this.helperText_.setValidity(this.isValid());\n      }\n    }\n  }\n\n  handleClick(normalizedX) {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.setRippleCenter(normalizedX);\n\n    this.adapter_.openMenu();\n  }\n\n  handleKeydown(event) {\n    if (this.adapter_.isMenuOpen()) return;\n\n    const isEnter = event.key === 'Enter' || event.keyCode === 13;\n    const isSpace = event.key === 'Space' || event.keyCode === 32;\n    const arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n    const arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n    if (this.adapter_.hasClass(cssClasses.FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {\n      this.adapter_.openMenu();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n    const isFocused = this.adapter_.hasClass(cssClasses.FOCUSED);\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else if (!isFocused) {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  setValid(isValid) {\n    this.adapter_.setValid(isValid);\n  }\n\n  isValid() {\n    return this.adapter_.checkValidity();\n  }\n}\n\nexport default MDCSelectFoundation;\n","<template>\n  <p ref=\"helptextEl\" :class=\"classes\" aria-hidden=\"true\"><slot /></p>\n</template>\n\n<script>\nimport MDCSelectHelperTextFoundation from '@material/select/helper-text/foundation.js'\n\nexport default {\n  name: 'select-helper-text',\n  props: {\n    helptextPersistent: Boolean,\n    helptextValidation: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-select-helper-text': true,\n        'mdc-select-helper-text--persistent': this.helptextPersistent,\n        'mdc-select-helper-text--validation-msg': this.helptextValidation\n      }\n    }\n  },\n  watch: {\n    helptextPersistent() {\n      this.foundation.setPersistent(this.helptextPersistent)\n    },\n    helptextValidation() {\n      this.foundation.setValidation(this.helptextValidation)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCSelectHelperTextFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n\n      hasClass: className => Boolean(this.classes[className]),\n\n      setAttr: (attr, value) => {\n        this.$el.setAttribute(attr, value)\n      },\n      removeAttr: attr => {\n        this.$el.removeAttribute(attr)\n      },\n      setContent: content => {\n        this.$el.textContent = content\n      }\n    })\n\n    this.foundation.init()\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<template>\n  <i :class=\"classes\" v-on=\"$listeners\" :style=\"styles\" v-bind=\"$attrs\">\n    {{ icon }}\n  </i>\n</template>\n\n<script>\nimport MDCSelectIconFoundation from '@material/select/icon/foundation.js'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'select-icon',\n  props: {\n    icon: String\n  },\n  data() {\n    return {\n      classes: {\n        'material-icons': true,\n        'mdc-select__icon': true\n      },\n      styles: {}\n    }\n  },\n\n  mounted() {\n    this.foundation = new MDCSelectIconFoundation(\n      Object.assign({\n        getAttr: attr => this.$el.getAttribute(attr),\n        setAttr: (attr, value) => this.$el.setAttribute(attr, value),\n        removeAttr: attr => this.$el.removeAttribute(attr),\n        setContent: content => {\n          this.$el.textContent = content\n        },\n        registerInteractionHandler: (evtType, handler) =>\n          this.$el.addEventListener(evtType, handler),\n        deregisterInteractionHandler: (evtType, handler) =>\n          this.$el.removeEventListener(evtType, handler),\n        notifyIconAction: () => {\n          this.$emit('click')\n\n          emitCustomEvent(\n            this.$el,\n            MDCSelectIconFoundation.strings.ICON_EVENT,\n            {},\n            true /* shouldBubble  */\n          )\n        }\n      })\n    )\n\n    this.foundation.init()\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div>\n    <div ref=\"root\" :id=\"id\" :class=\"rootClasses\" :style=\"styles\">\n      <select-icon\n        ref=\"leadingIconEl\"\n        v-if=\"leadingIcon\"\n        :icon=\"leadingIcon\"\n        tab-index=\"0\"\n        role=\"button\"\n      ></select-icon>\n      <i class=\"mdc-select__dropdown-icon\"></i>\n      <select\n        ref=\"native_control\"\n        :disabled=\"disabled\"\n        v-bind=\"$attrs\"\n        class=\"mdc-select__native-control\"\n        :aria-controls=\"selectAriaControls\"\n        v-on=\"listeners\"\n      >\n        <option v-if=\"!value\" class=\"mdc-option\" value=\"\" disabled selected />\n        <slot />\n      </select>\n      <mdc-floating-label v-if=\"!outlined\" ref=\"labelEl\">{{\n        label\n      }}</mdc-floating-label>\n      <mdc-line-ripple v-if=\"!outlined\" ref=\"lineRippleEl\" />\n      <mdc-notched-outline v-if=\"outlined\" ref=\"outlineEl\">{{\n        label\n      }}</mdc-notched-outline>\n    </div>\n\n    <select-helper-text\n      :helptextPersistent=\"helptextPersistent\"\n      :helptextValidation=\"helptextValidation\"\n      ref=\"helpertextEl\"\n      v-if=\"helptext\"\n      :id=\"'help-' + vma_uid_\"\n    >\n      {{ helptext }}\n    </select-helper-text>\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\nimport SelectHelperText from './select-helper-text.vue'\n\nimport SelectIcon from './select-icon.vue'\nimport { emitCustomEvent, VMAUniqueIdMixin } from '../base'\n\nexport default {\n  name: 'mdc-select',\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    helptext: String,\n\n    leadingIcon: String,\n    icon: String,\n    helptextPersistent: Boolean,\n    helptextValidation: Boolean,\n    disabled: Boolean,\n    label: String,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  mixins: [VMAUniqueIdMixin],\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n\n  components: { SelectHelperText, SelectIcon },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select': true,\n        'mdc-select--outlined': this.outlined,\n\n        'mdc-select--with-leading-icon': this.leadingIcon,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.handleChange(event),\n        blur: event => this.handleBlur(event),\n        focus: event => this.handleFocus(event),\n        mousedown: event => this.handleClick(event),\n        touchstart: event => this.handleClick(event)\n      }\n    },\n\n    selectAriaControls() {\n      return this.helptext ? 'help-' + this.vma_uid_ : undefined\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.updateDisabledStyle(value)\n    },\n    value: 'refreshIndex'\n  },\n\n  mounted() {\n    this.foundation = new MDCSelectFoundation(\n      Object.assign({\n        // common methods\n        addClass: className => this.$set(this.classes, className, true),\n        removeClass: className => this.$delete(this.classes, className),\n        hasClass: className => Boolean(this.classes[className]),\n        setRippleCenter: normalizedX =>\n          this.$refs.lineRippleEl &&\n          this.$refs.lineRippleEl.setRippleCenter(normalizedX),\n        activateBottomLine: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.foundation.activate()\n          }\n        },\n        deactivateBottomLine: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.foundation.deactivate()\n          }\n        },\n\n        notifyChange: value => {\n          const index = this.selectedIndex\n          emitCustomEvent(\n            this.$refs.root,\n            MDCSelectFoundation.strings.CHANGE_EVENT,\n            { value, index },\n            true /* shouldBubble  */\n          )\n\n          this.$emit('change', value)\n        },\n\n        // native methods\n        getValue: () => this.$refs.native_control.value,\n        setValue: value => (this.$refs.native_control.value = value),\n        openMenu: () => {},\n        closeMenu: () => {},\n        isMenuOpen: () => false,\n        setSelectedIndex: index => {\n          this.$refs.native_control.selectedIndex = index\n        },\n        setDisabled: isDisabled =>\n          (this.$refs.native_control.disabled = isDisabled),\n        setValid: isValid => {\n          isValid\n            ? this.$delete(this.classes, MDCSelectFoundation.cssClasses.INVALID)\n            : this.set(this.classes, MDCSelectFoundation.cssClasses.INVALID)\n        },\n        checkValidity: () => this.$refs.native_control.checkValidity(),\n\n        // outline methods\n\n        hasOutline: () => this.outlined,\n        notchOutline: labelWidth => {\n          if (this.$refs.outlineEl) {\n            this.$refs.outlineEl.notch(labelWidth)\n          }\n        },\n        closeOutline: () => {\n          if (this.$refs.outlineEl) {\n            this.$refs.outlineEl.closeNotch()\n          }\n        },\n\n        // label methods\n        floatLabel: value => {\n          if (this.$refs.labelEl) {\n            this.$refs.labelEl.float(value)\n          } else {\n            this.$refs.outlineEl.float(value)\n          }\n        },\n\n        getLabelWidth: () => {\n          if (this.$refs.labelEl) {\n            return this.$refs.labelEl.getWidth()\n          }\n        }\n      }),\n      {\n        helperText: this.$refs.helpertextEl\n          ? this.$refs.helpertextEl.foundation\n          : void 0,\n\n        leadingIcon: this.$refs.leadingIconEl\n          ? this.$refs.leadingIconEl.foundation\n          : undefined\n      }\n    )\n\n    this.foundation.init()\n    this.foundation.handleChange(false)\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n\n  methods: {\n    handleChange() {\n      this.foundation.handleChange(true)\n    },\n\n    handleFocus() {\n      this.foundation.handleFocus()\n    },\n\n    handleBlur() {\n      this.foundation.handleBlur()\n    },\n\n    handleClick(evt) {\n      this.foundation.handleClick(this.getNormalizedXCoordinate(evt))\n    },\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.$refs.native_control.selectedIndex = idx\n        this.foundation.handleChange(false)\n      }\n    },\n\n    getNormalizedXCoordinate(evt) {\n      const targetClientRect = evt.target.getBoundingClientRect()\n      const xCoordinate = evt.clientX\n      return xCoordinate - targetClientRect.left\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSelect from './mdc-select.vue'\n\nexport { mdcSelect }\n\nexport default BasePlugin({\n  mdcSelect\n})\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","scope","Math","floor","random","toString","VMAUniqueIdMixin","beforeCreate","vma_uid_","_uid","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","handler","addEventListener","removeEventListener","MDCSelectIconAdapter","attr","value","content","strings","ICON_EVENT","ICON_ROLE","MDCSelectIconFoundation","getAttr","setAttr","removeAttr","setContent","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","defaultAdapter","savedTabIndex_","interactionHandler_","handleInteraction","forEach","disabled","label","type","keyCode","MDCSelectIcon","getAttribute","setAttribute","removeAttribute","textContent","emit","MDCSelectHelperTextAdapter","className","ARIA_HIDDEN","ROLE","cssClasses","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCSelectHelperTextFoundation","addClass","removeClass","hasClass","isPersistent","isValidation","selectIsValid","helperTextIsPersistent","helperTextIsValidationMsg","validationMsgNeedsDisplay","hide_","MDCSelectHelperText","classList","add","remove","contains","MDCSelectAdapter","shouldFloat","labelWidth","index","isDisabled","normalizedX","isValid","DISABLED","ROOT","OUTLINED","FOCUSED","SELECTED_ITEM_CLASS","WITH_LEADING_ICON","INVALID","REQUIRED","ARIA_CONTROLS","CHANGE_EVENT","SELECTED_ITEM_SELECTOR","LEADING_ICON_SELECTOR","SELECTED_TEXT_SELECTOR","HIDDEN_INPUT_SELECTOR","MENU_SELECTOR","LINE_RIPPLE_SELECTOR","LABEL_SELECTOR","NATIVE_CONTROL_SELECTOR","OUTLINE_SELECTOR","ENHANCED_VALUE_ATTR","ARIA_SELECTED_ATTR","numbers","LABEL_SCALE","MDCSelectFoundation","activateBottomLine","deactivateBottomLine","setValue","getValue","floatLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","openMenu","closeMenu","isMenuOpen","setSelectedIndex","setDisabled","setRippleCenter","notifyChange","checkValidity","setValid","foundationMap","leadingIcon_","leadingIcon","helperText_","helperText","didChange","handleChange","openNotch","length","optionHasValue","isRequired","setValidity","showToScreenReader","event","isEnter","isSpace","arrowUp","arrowDown","preventDefault","isFocused","labelScale","setAriaLabel","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","renderWithStyleInjection","h","existing","concat","script","mdcSelect"],"mappings":"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"}