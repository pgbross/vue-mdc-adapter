{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/base/index.js","../../node_modules/@material/select/icon/adapter.js","../../node_modules/@material/select/icon/constants.js","../../node_modules/@material/select/icon/foundation.js","../../node_modules/@material/select/icon/index.js","../../node_modules/@material/select/helper-text/adapter.js","../../node_modules/@material/select/helper-text/constants.js","../../node_modules/@material/select/helper-text/foundation.js","../../node_modules/@material/select/helper-text/index.js","../../node_modules/@material/select/adapter.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/foundation.js","../../components/select/mdc-select-label.vue","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../components/select/mdc-select-line-ripple.vue","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../components/select/mdc-select-notched-outline.vue","../../components/select/mdc-select.vue","../../components/select/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the select icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCSelect:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCSelectIconAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCSelect:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCSelectIconAdapter>}\n * @final\n */\nclass MDCSelectIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCSelectIconFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCSelectIconAdapter from './adapter';\nimport MDCSelectIconFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCSelectIconFoundation>}\n * @final\n */\nclass MDCSelectIcon extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCSelectIcon}\n   */\n  static attachTo(root) {\n    return new MDCSelectIcon(root);\n  }\n\n  /**\n   * @return {!MDCSelectIconFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCSelectIconFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCSelectIconFoundation(/** @type {!MDCSelectIconAdapter} */ (Object.assign({\n      getAttr: (attr) => this.root_.getAttribute(attr),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n      notifyIconAction: () => this.emit(\n        MDCSelectIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */),\n    })));\n  }\n}\n\nexport {MDCSelectIcon, MDCSelectIconFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCSelectHelperTextAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-select-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-select-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCSelectHelperTextAdapter>}\n * @final\n */\nclass MDCSelectHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the select validity.\n   * @param {boolean} selectIsValid\n   */\n  setValidity(selectIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !selectIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCSelectHelperTextFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCSelectHelperTextAdapter from './adapter';\nimport MDCSelectHelperTextFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCSelectHelperTextFoundation>}\n * @final\n */\nclass MDCSelectHelperText extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCSelectHelperText}\n   */\n  static attachTo(root) {\n    return new MDCSelectHelperText(root);\n  }\n\n  /**\n   * @return {!MDCSelectHelperTextFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCSelectHelperTextFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCSelectHelperTextFoundation(/** @type {!MDCSelectHelperTextAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n    })));\n  }\n}\n\nexport {MDCSelectHelperText, MDCSelectHelperTextFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n/* eslint-disable no-unused-vars */\nimport {MDCSelectIconFoundation} from './icon/index';\nimport {MDCSelectHelperTextFoundation} from './helper-text/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {{\n *   leadingIcon: (!MDCSelectIconFoundation|undefined),\n *   helperText: (!MDCSelectHelperTextFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Select. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCSelectAdapter {\n  /**\n   * Adds class to root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Activates the bottom line, showing a focused state.\n   */\n  activateBottomLine() {}\n\n  /**\n   * Deactivates the bottom line.\n   */\n  deactivateBottomLine() {}\n\n  /**\n   * Sets the value of the select.\n   * @param {string} value\n   */\n  setValue(value) {}\n\n  /**\n   * Returns the selected value of the select element.\n   * @return {string}\n   */\n  getValue() {}\n\n  /**\n   * Floats label determined based off of the shouldFloat argument.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns width of label in pixels, if the label exists.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * @param {number} labelWidth\n   */\n  notchOutline(labelWidth) {}\n\n  /**\n   * Closes notch in outline element, if the outline exists.\n   */\n  closeOutline() {}\n\n  /**\n   * Opens the menu.\n   */\n  openMenu() {}\n\n  /**\n   * Closes the menu.\n   */\n  closeMenu() {}\n\n  /**\n   * Returns true if the menu is currently open.\n   * @return {boolean}\n   */\n  isMenuOpen() {}\n\n  /**\n   * Sets the selected index of the select to the index provided.\n   * @param {number} index\n   */\n  setSelectedIndex(index) {}\n\n  /**\n   * Sets the select to disabled.\n   * @param {boolean} isDisabled\n   */\n  setDisabled(isDisabled) {}\n\n  /**\n   * Sets the line ripple transform origin center.\n   * @param {number} normalizedX\n   */\n  setRippleCenter(normalizedX) {}\n\n  /**\n   * Emits a change event when an element is selected.\n   * @param {string} value\n   */\n  notifyChange(value) {}\n\n  /**\n   * Checks if the select is currently valid.\n   * @return {boolean} isValid\n   */\n  checkValidity() {}\n\n  /**\n   * Adds/Removes the invalid class.\n   * @param {boolean} isValid\n   */\n  setValid(isValid) {}\n}\n\nexport {MDCSelectAdapter, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n  FOCUSED: 'mdc-select--focused',\n  SELECTED_ITEM_CLASS: 'mdc-list-item--selected',\n  WITH_LEADING_ICON: 'mdc-select--with-leading-icon',\n  INVALID: 'mdc-select--invalid',\n  REQUIRED: 'mdc-select--required',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  CHANGE_EVENT: 'MDCSelect:change',\n  SELECTED_ITEM_SELECTOR: `.${cssClasses.SELECTED_ITEM_CLASS}`,\n  LEADING_ICON_SELECTOR: '.mdc-select__icon',\n  SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',\n  HIDDEN_INPUT_SELECTOR: 'input[type=\"hidden\"]',\n  MENU_SELECTOR: '.mdc-select__menu',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  ENHANCED_VALUE_ATTR: 'data-value',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectAdapter, FoundationMapType} from './adapter';\nimport {MDCSelectIconFoundation} from './icon/index';\nimport {MDCSelectHelperTextFoundation} from './helper-text/index';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectAdapter>}\n * @final\n */\nclass MDCSelectFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      setValue: () => {},\n      getValue: () => {},\n      floatLabel: (/* value: boolean */) => {},\n      getLabelWidth: () => {},\n      hasOutline: () => false,\n      notchOutline: (/* labelWidth: number, */) => {},\n      closeOutline: () => {},\n      openMenu: () => {},\n      closeMenu: () => {},\n      isMenuOpen: () => {},\n      setSelectedIndex: () => {},\n      setDisabled: () => {},\n      setRippleCenter: () => {},\n      notifyChange: () => {},\n      checkValidity: () => {},\n      setValid: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCSelectIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCSelectHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.closeMenu();\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  getValue() {\n    return this.adapter_.getValue();\n  }\n\n  setDisabled(isDisabled) {\n    isDisabled ? this.adapter_.addClass(cssClasses.DISABLED) : this.adapter_.removeClass(cssClasses.DISABLED);\n    this.adapter_.setDisabled(isDisabled);\n    this.adapter_.closeMenu();\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  layout() {\n    const openNotch = this.getValue().length > 0;\n    this.notchOutline(openNotch);\n  }\n\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n  handleChange(didChange = true) {\n    const value = this.getValue();\n    const optionHasValue = value.length > 0;\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    this.notchOutline(optionHasValue);\n\n    if (!this.adapter_.hasClass(cssClasses.FOCUSED)) {\n      this.adapter_.floatLabel(optionHasValue);\n    }\n\n    if (didChange) {\n      this.adapter_.notifyChange(value);\n\n      if (isRequired) {\n        this.setValid(this.isValid());\n        if (this.helperText_) {\n          this.helperText_.setValidity(this.isValid());\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles focus events from select element.\n   */\n  handleFocus() {\n    this.adapter_.addClass(cssClasses.FOCUSED);\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Handles blur events from select element.\n   */\n  handleBlur() {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.removeClass(cssClasses.FOCUSED);\n    this.handleChange(false);\n    this.adapter_.deactivateBottomLine();\n\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    if (isRequired) {\n      this.setValid(this.isValid());\n      if (this.helperText_) {\n        this.helperText_.setValidity(this.isValid());\n      }\n    }\n  }\n\n  handleClick(normalizedX) {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.setRippleCenter(normalizedX);\n\n    this.adapter_.openMenu();\n  }\n\n  handleKeydown(event) {\n    if (this.adapter_.isMenuOpen()) return;\n\n    const isEnter = event.key === 'Enter' || event.keyCode === 13;\n    const isSpace = event.key === 'Space' || event.keyCode === 32;\n    const arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n    const arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n    if (this.adapter_.hasClass(cssClasses.FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {\n      this.adapter_.openMenu();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n    const isFocused = this.adapter_.hasClass(cssClasses.FOCUSED);\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else if (!isFocused) {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  setValid(isValid) {\n    this.adapter_.setValid(isValid);\n  }\n\n  isValid() {\n    return this.adapter_.checkValidity();\n  }\n}\n\nexport default MDCSelectFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n  ROOT: 'mdc-floating-label',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\n  <label\n    :class=\"labelClasses\"\n    class=\"mdc-floating-label\">\n    <slot />\n  </label>\n</template>\n\n<script>\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\n\nexport default {\n  name: 'mdc-select-label',\n  data() {\n    return {\n      labelClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCFloatingLabelFoundation({\n      addClass: className => {\n        this.$set(this.labelClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.labelClasses, className)\n      },\n      getWidth: () => this.$el.offsetWidth,\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\n  <div\n    :class=\"lineClasses\"\n    :style=\"lineStyles\"\n    class=\"mdc-line-ripple\"/>\n</template>\n\n<script>\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\n\nexport default {\n  name: 'mdc-select-line-ripple',\n  data() {\n    return {\n      lineClasses: {},\n      lineStyles: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLineRippleFoundation({\n      addClass: className => {\n        this.$set(this.lineClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.lineClasses, className)\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      setStyle: (name, value) => {\n        this.$set(this.lineStyles, name, value)\n      },\n      registerEventHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterEventHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the width style property of the notch element.\n   * @param {number} width\n   */\n  setNotchWidthProperty(width) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // This should stay in sync with $mdc-notched-outline-padding * 2.\n  NOTCH_ELEMENT_PADDING: 8,\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n  OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',\n  NO_LABEL: 'mdc-notched-outline--no-label',\n};\n\nexport {cssClasses, numbers, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      setNotchWidthProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth.\n   * @param {number} notchWidth\n   */\n  notch(notchWidth) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n\n    if (notchWidth > 0) {\n      notchWidth += numbers.NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n    }\n\n    this.adapter_.setNotchWidthProperty(notchWidth);\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n    this.adapter_.setNotchWidthProperty(0);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div>\n    <div\n      ref=\"outlined\"\n      :class=\"outlinedClasses\"\n      class=\"mdc-notched-outline\">\n      <svg>\n        <path\n          ref=\"outlinedPath\"\n          class=\"mdc-notched-outline__path\"/>\n      </svg>\n    </div>\n    <div\n      ref=\"outlinedIdle\"\n      class=\"mdc-notched-outline__idle\"/>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundationFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-select-notched-outline',\n  data() {\n    return {\n      outlinedClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundationFoundation({\n      getWidth: () => this.$refs.outlined.offsetWidth,\n      getHeight: () => this.$refs.outlined.offsetHeight,\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n      setOutlinePathAttr: value => {\n        const path = this.$refs.outlinedPath\n        path.setAttribute('d', value)\n      },\n      getIdleOutlineStyleValue: propertyName => {\n        return window\n          .getComputedStyle(this.$refs.outlinedIdle)\n          .getPropertyValue(propertyName)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"rootClasses\"\n    :style=\"styles\"\n    class=\"mdc-select\">\n    <select\n      ref=\"native_control\"\n      :disabled=\"disabled\"\n      v-bind=\"$attrs\"\n      class=\"mdc-select__native-control\"\n      v-on=\"listeners\">\n      <option\n        v-if=\"!!label\"\n        class=\"mdc-option\"\n        value=\"\"\n        disabled\n        selected/>\n      <slot/>\n    </select>\n    <!-- label -->\n    <select-label\n      v-if=\"label\"\n      ref=\"label\">{{ label }}</select-label>\n    <!-- line ripple -->\n    <select-line-riple\n      v-if=\"!outlined\"\n      ref=\"line\"/>\n    <!-- outline -->\n    <select-notched-outline\n      v-if=\"outlined\"\n      ref=\"outline\"\n    />\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\n\nimport SelectLabel from './mdc-select-label.vue'\nimport SelectLineRiple from './mdc-select-line-ripple.vue'\nimport SelectNotchedOutline from './mdc-select-notched-outline.vue'\n\nexport default {\n  name: 'mdc-select',\n  components: {\n    SelectLabel,\n    SelectLineRiple,\n    SelectNotchedOutline\n  },\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': !this.outlined,\n        'mdc-select--outlined': this.outlined,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.onChange(event)\n      }\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.updateDisabledStyle(value)\n    },\n    value: 'refreshIndex'\n  },\n  mounted() {\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      activateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.activate()\n        }\n      },\n      deactivateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.deactivate()\n        }\n      },\n      getValue: () => this.$refs.native_control.value,\n      isRtl: () => {\n        return (\n          window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n          'rtl'\n        )\n      },\n      notchOutline: (labelWidth, isRtl) => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.notch(labelWidth, isRtl)\n        }\n      },\n      closeOutline: () => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.closeNotch()\n        }\n      },\n      hasOutline: () => !!this.$refs.outline,\n      floatLabel: value => {\n        if (this.$refs.label) {\n          this.$refs.label.foundation.float(value)\n        }\n      },\n      hasLabel: () => !!this.$refs.label,\n      getLabelWidth: () => {\n        if (this.$refs.label) {\n          return this.$refs.label.foundation.getWidth()\n        }\n      }\n    })\n\n    this.foundation.init()\n    this.foundation.handleChange()\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.$refs.native_control.selectedIndex = idx\n        this.foundation.handleChange()\n      }\n    },\n    onChange(event) {\n      this.foundation.handleChange()\n      this.$emit('change', event.target.value)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSelect from './mdc-select.vue'\n\nexport { mdcSelect }\n\nexport default BasePlugin({\n  mdcSelect\n})\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","MDCSelectIconAdapter","attr","value","content","strings","ICON_EVENT","ICON_ROLE","MDCSelectIconFoundation","getAttr","setAttr","removeAttr","setContent","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","defaultAdapter","savedTabIndex_","interactionHandler_","handleInteraction","forEach","disabled","label","type","keyCode","MDCSelectIcon","getAttribute","setAttribute","removeAttribute","textContent","emit","MDCSelectHelperTextAdapter","className","ARIA_HIDDEN","ROLE","cssClasses","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCSelectHelperTextFoundation","addClass","removeClass","hasClass","isPersistent","isValidation","selectIsValid","helperTextIsPersistent","helperTextIsValidationMsg","validationMsgNeedsDisplay","hide_","MDCSelectHelperText","classList","add","remove","contains","MDCSelectAdapter","shouldFloat","labelWidth","index","isDisabled","normalizedX","isValid","DISABLED","ROOT","OUTLINED","FOCUSED","SELECTED_ITEM_CLASS","WITH_LEADING_ICON","INVALID","REQUIRED","ARIA_CONTROLS","CHANGE_EVENT","SELECTED_ITEM_SELECTOR","LEADING_ICON_SELECTOR","SELECTED_TEXT_SELECTOR","HIDDEN_INPUT_SELECTOR","MENU_SELECTOR","LINE_RIPPLE_SELECTOR","LABEL_SELECTOR","NATIVE_CONTROL_SELECTOR","OUTLINE_SELECTOR","ENHANCED_VALUE_ATTR","ARIA_SELECTED_ATTR","numbers","LABEL_SCALE","MDCSelectFoundation","activateBottomLine","deactivateBottomLine","setValue","getValue","floatLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","openMenu","closeMenu","isMenuOpen","setSelectedIndex","setDisabled","setRippleCenter","notifyChange","checkValidity","setValid","foundationMap","leadingIcon_","leadingIcon","helperText_","helperText","didChange","handleChange","openNotch","length","optionHasValue","isRequired","setValidity","showToScreenReader","event","isEnter","isSpace","arrowUp","arrowDown","preventDefault","isFocused","labelScale","setAriaLabel","MDCFloatingLabelAdapter","LABEL_FLOAT_ABOVE","LABEL_SHAKE","MDCFloatingLabelFoundation","getWidth","shakeAnimationEndHandler_","handleShakeAnimationEnd_","shouldShake","MDCLineRippleAdapter","propertyName","LINE_RIPPLE_ACTIVE","LINE_RIPPLE_DEACTIVATING","MDCLineRippleFoundation","setStyle","registerEventHandler","deregisterEventHandler","transitionEndHandler_","handleTransitionEnd","xCoordinate","isDeactivating","MDCNotchedOutlineAdapter","width","NOTCH_ELEMENT_SELECTOR","NOTCH_ELEMENT_PADDING","OUTLINE_NOTCHED","OUTLINE_UPGRADED","NO_LABEL","MDCNotchedOutlineFoundation","setNotchWidthProperty","notchWidth","mdcSelect"],"mappings":"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"}