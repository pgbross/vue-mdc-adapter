{"version":3,"file":"tabs.min.js","sources":["../../components/base/custom-element.js","../../components/base/custom-link.js","../../components/base/custom-event.js","../../node_modules/@material/ripple/util.js","../../components/base/dispatch-event-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/tab/constants.js","../../node_modules/@material/tab/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/foundation.js","../../node_modules/@material/ripple/index.js","../../components/ripple/mdc-ripple-base.js","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/ripple/mdc-ripple.vue","../../components/base/custom-icon.js","../../components/tabs/mdc-tab.vue","../../node_modules/@material/tab-bar/constants.js","../../node_modules/@material/tab-bar/foundation.js","../../components/tabs/mdc-tab-bar.vue","../../node_modules/@material/tab-scroller/util.js","../../node_modules/@material/tab-scroller/constants.js","../../node_modules/@material/tab-scroller/rtl-scroller.js","../../node_modules/@material/tab-scroller/rtl-default-scroller.js","../../node_modules/@material/tab-scroller/rtl-negative-scroller.js","../../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","../../node_modules/@material/tab-scroller/foundation.js","../../components/tabs/mdc-tab-scroller.vue","../../node_modules/@material/tab-indicator/constants.js","../../node_modules/@material/tab-indicator/foundation.js","../../node_modules/@material/tab-indicator/sliding-foundation.js","../../components/tabs/mdc-tab-indicator.vue","../../components/tabs/mdc-tab-ripple.vue","../../components/base/base-plugin.js","../../components/tabs/index.js","../../components/base/auto-init.js","../../components/tabs/entry.js"],"sourcesContent":["export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_SELECTED: 'aria-selected',\n  RIPPLE_SELECTOR: '.mdc-tab__ripple',\n  CONTENT_SELECTOR: '.mdc-tab__content',\n  TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n  TABINDEX: 'tabIndex',\n  INTERACTED_EVENT: 'MDCTab:interacted',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabAdapter>}\n * @final\n */\nclass MDCTabFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabAdapter for typing information\n   * @return {!MDCTabAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      activateIndicator: () => {},\n      deactivateIndicator: () => {},\n      notifyInteracted: () => {},\n      getOffsetLeft: () => {},\n      getOffsetWidth: () => {},\n      getContentOffsetLeft: () => {},\n      getContentOffsetWidth: () => {},\n      focus: () => {},\n    });\n  }\n\n  /** @param {!MDCTabAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.focusOnActivate_ = true;\n  }\n\n  /**\n   * Handles the \"click\" event\n   */\n  handleClick() {\n    // It's up to the parent component to keep track of the active Tab and\n    // ensure we don't activate a Tab that's already active.\n    this.adapter_.notifyInteracted();\n  }\n\n  /**\n   * Returns the Tab's active state\n   * @return {boolean}\n   */\n  isActive() {\n    return this.adapter_.hasClass(cssClasses.ACTIVE);\n  }\n\n  /**\n   * Sets whether the tab should focus itself when activated\n   * @param {boolean} focusOnActivate\n   */\n  setFocusOnActivate(focusOnActivate) {\n    this.focusOnActivate_ = focusOnActivate;\n  }\n\n  /**\n   * Activates the Tab\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.adapter_.addClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'true');\n    this.adapter_.setAttr(strings.TABINDEX, '0');\n    this.adapter_.activateIndicator(previousIndicatorClientRect);\n    if (this.focusOnActivate_) {\n      this.adapter_.focus();\n    }\n  }\n\n  /**\n   * Deactivates the Tab\n   */\n  deactivate() {\n    // Early exit\n    if (!this.isActive()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'false');\n    this.adapter_.setAttr(strings.TABINDEX, '-1');\n    this.adapter_.deactivateIndicator();\n  }\n\n  /**\n   * Returns the dimensions of the Tab\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    const rootWidth = this.adapter_.getOffsetWidth();\n    const rootLeft = this.adapter_.getOffsetLeft();\n    const contentWidth = this.adapter_.getContentOffsetWidth();\n    const contentLeft = this.adapter_.getContentOffsetLeft();\n\n    return {\n      rootLeft,\n      rootRight: rootLeft + rootWidth,\n      contentLeft: rootLeft + contentLeft,\n      contentRight: rootLeft + contentLeft + contentWidth,\n    };\n  }\n}\n\nexport default MDCTabFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","import { MDCRippleFoundation } from '@material/ripple/index'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :classes=\"classes\"\n    :styles=\"styles\" \n    class=\"mdc-ripple\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport { CustomElementMixin } from '../base'\nimport { RippleMixin } from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins: [CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  }\n}\n</script>\n","export function extractIconProp(iconProp) {\n  if (typeof iconProp === 'string') {\n    return {\n      classes: { 'material-icons': true },\n      content: iconProp\n    }\n  } else if (iconProp instanceof Array) {\n    return {\n      classes: iconProp.reduce(\n        (result, value) => Object.assign(result, { [value]: true }),\n        {}\n      )\n    }\n  } else if (typeof iconProp === 'object') {\n    return {\n      classes: iconProp.className\n        .split(' ')\n        .reduce(\n          (result, value) => Object.assign(result, { [value]: true }),\n          {}\n        ),\n      content: iconProp.textContent\n    }\n  }\n}\n","<template>\r\n  <custom-link\r\n    :class=\"classes\"\r\n    :style=\"styles\"\r\n    :link=\"link\"\r\n    class=\"mdc-tab\"\r\n    @click=\"handleClick\"\r\n    role=\"tab\"\r\n    aria-selected=\"false\"\r\n    tabindex=\"-1\"\r\n  >\r\n    <span ref=\"content\" class=\"mdc-tab__content\">\r\n      <i\r\n        v-if=\"!!hasIcon\"\r\n        ref=\"icon\"\r\n        :class=\"hasIcon.classes\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-tab__icon\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n      </i>\r\n\r\n      <span v-if=\"hasText\" class=\"mdc-tab__text-label\"> <slot /> </span>\r\n    </span>\r\n\r\n    <mdc-tab-indicator ref=\"tabIndicator\"></mdc-tab-indicator>\r\n    <mdc-tab-ripple></mdc-tab-ripple>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tab/foundation'\r\nimport {\r\n  CustomLinkMixin,\r\n  DispatchEventMixin,\r\n  emitCustomEvent,\r\n  extractIconProp,\r\n  VMAUniqueIdMixin\r\n} from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin, VMAUniqueIdMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object],\r\n    stacked: Boolean,\r\n    minWidth: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-tab--stacked': this.stacked,\r\n        'mdc-tab--min-width': this.minWidth\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n\r\n  inject: ['mdcTabBar'],\r\n  computed: {\r\n    hasIcon() {\r\n      if (this.icon || this.$slots.icon) {\r\n        return this.icon ? extractIconProp(this.icon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasText() {\r\n      return !!this.$slots.default\r\n    }\r\n  },\r\n  watch: {\r\n    active(value) {}\r\n  },\r\n  mounted() {\r\n    this.id = this.vma_uid_\r\n    this.foundation = new MDCTabFoundation({\r\n      setAttr: (attr, value) => this.$el.setAttribute(attr, value),\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      hasClass: className => this.$el.classList.contains(className),\r\n      activateIndicator: previousIndicatorClientRect => {\r\n        this.$refs.tabIndicator.activate(previousIndicatorClientRect)\r\n      },\r\n      deactivateIndicator: () => {\r\n        this.$refs.tabIndicator.deactivate()\r\n      },\r\n      notifyInteracted: () =>\r\n        emitCustomEvent(\r\n          this.$el,\r\n          MDCTabFoundation.strings.INTERACTED_EVENT,\r\n          { tabId: this.id },\r\n          true /* bubble */\r\n        ),\r\n      getOffsetLeft: () => this.$el.offsetLeft,\r\n      getOffsetWidth: () => this.$el.offsetWidth,\r\n      getContentOffsetLeft: () => this.$refs.content.offsetLeft,\r\n      getContentOffsetWidth: () => this.$refs.content.offsetWidth,\r\n      focus: () => this.$el.focus()\r\n    })\r\n    this.foundation.init()\r\n\r\n    // console.log('tab mounted')\r\n\r\n    this.mdcTabBar.tabList.push(this)\r\n\r\n    // this.setActive(this.active)\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy()\r\n  },\r\n  methods: {\r\n    activate(computeIndicatorClientRect) {\r\n      this.foundation.activate(computeIndicatorClientRect)\r\n    },\r\n\r\n    deactivate() {\r\n      this.foundation.deactivate()\r\n    },\r\n    handleClick(evt) {\r\n      this.foundation.handleClick(evt)\r\n    },\r\n    isActive() {\r\n      return this.foundation.isActive()\r\n    },\r\n    setActive(isActive) {\r\n      if (isActive) {\r\n        this.$set(this.classes, 'mdc-tab--active', true),\r\n          this.$refs.tabIndicator.activate()\r\n      }\r\n    },\r\n    computeIndicatorClientRect() {\r\n      return this.$refs.tabIndicator.computeContentClientRect()\r\n    },\r\n\r\n    computeDimensions() {\r\n      return this.foundation.computeDimensions()\r\n    },\r\n\r\n    focus() {\r\n      this.$el.focus()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n  TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n  TAB_SELECTOR: '.mdc-tab',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  END_KEY: 'End',\n  HOME_KEY: 'Home',\n  ENTER_KEY: 'Enter',\n  SPACE_KEY: 'Space',\n};\n\n/** @enum {number} */\nconst numbers = {\n  EXTRA_SCROLL_AMOUNT: 20,\n  ARROW_LEFT_KEYCODE: 37,\n  ARROW_RIGHT_KEYCODE: 39,\n  END_KEYCODE: 35,\n  HOME_KEYCODE: 36,\n  ENTER_KEYCODE: 13,\n  SPACE_KEYCODE: 32,\n};\n\nexport {\n  numbers,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\nimport {strings, numbers} from './constants';\nimport MDCTabBarAdapter from './adapter';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @type {Set<string>}\n */\nconst ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\n\n/**\n * @type {Map<number, string>}\n */\nconst KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\n\n/**\n * @extends {MDCFoundation<!MDCTabBarAdapter>}\n * @final\n */\nclass MDCTabBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @see MDCTabBarAdapter for typing information\n   * @return {!MDCTabBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabBarAdapter} */ ({\n      scrollTo: () => {},\n      incrementScroll: () => {},\n      getScrollPosition: () => {},\n      getScrollContentWidth: () => {},\n      getOffsetWidth: () => {},\n      isRTL: () => {},\n      setActiveTab: () => {},\n      activateTabAtIndex: () => {},\n      deactivateTabAtIndex: () => {},\n      focusTabAtIndex: () => {},\n      getTabIndicatorClientRectAtIndex: () => {},\n      getTabDimensionsAtIndex: () => {},\n      getPreviousActiveTabIndex: () => {},\n      getFocusedTabIndex: () => {},\n      getIndexOfTabById: () => {},\n      getTabListLength: () => {},\n      notifyTabActivated: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTabBarAdapter} adapter\n   * */\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.useAutomaticActivation_ = false;\n  }\n\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   * @param {boolean} useAutomaticActivation\n   */\n  setUseAutomaticActivation(useAutomaticActivation) {\n    this.useAutomaticActivation_ = useAutomaticActivation;\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index\n   */\n  activateTab(index) {\n    const previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n      return;\n    }\n\n    this.adapter_.deactivateTabAtIndex(previousActiveIndex);\n    this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));\n    this.scrollIntoView(index);\n\n    this.adapter_.notifyTabActivated(index);\n  }\n\n  /**\n   * Handles the keydown event\n   * @param {!Event} evt\n   */\n  handleKeyDown(evt) {\n    // Get the key from the event\n    const key = this.getKeyFromEvent_(evt);\n\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey_(key)) {\n      evt.preventDefault();\n    }\n\n    if (this.useAutomaticActivation_) {\n      if (this.isActivationKey_(key)) {\n        return;\n      }\n\n      const index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);\n      this.adapter_.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      const focusedTabIndex = this.adapter_.getFocusedTabIndex();\n      if (this.isActivationKey_(key)) {\n        this.adapter_.setActiveTab(focusedTabIndex);\n      } else {\n        const index = this.determineTargetFromKey_(focusedTabIndex, key);\n        this.adapter_.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  }\n\n  /**\n   * Handles the MDCTab:interacted event\n   * @param {!Event} evt\n   */\n  handleTabInteraction(evt) {\n    this.adapter_.setActiveTab(this.adapter_.getIndexOfTabById(evt.detail.tabId));\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index The tab index to make visible\n   */\n  scrollIntoView(index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange_(index)) {\n      return;\n    }\n\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      return this.adapter_.scrollTo(0);\n    }\n\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter_.getTabListLength() - 1) {\n      return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());\n    }\n\n    if (this.isRTL_()) {\n      return this.scrollIntoViewRTL_(index);\n    }\n\n    this.scrollIntoView_(index);\n  }\n\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param {number} origin The original index from which to determine the destination\n   * @param {string} key The name of the key\n   * @return {number}\n   * @private\n   */\n  determineTargetFromKey_(origin, key) {\n    const isRTL = this.isRTL_();\n    const maxIndex = this.adapter_.getTabListLength() - 1;\n    const shouldGoToEnd = key === strings.END_KEY;\n    const shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    const shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    let index = origin;\n\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    const relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    const leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n\n    return Math.max(rightIncrement, 0);\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @param {number} scrollContentWidth The width of the scroll content\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    const relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    const leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n\n    return Math.min(rightIncrement, 0);\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    const relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    const relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    const relativeRootDelta = relativeRootLeft + relativeRootRight;\n    const leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    const rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @param {number} scrollContentWidth The width of the scroller content\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    const rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    const rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    const rootDelta = rootLeft + rootRight;\n    const leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    const rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Returns the key associated with a keydown event\n   * @param {!Event} evt The keydown event\n   * @return {string}\n   * @private\n   */\n  getKeyFromEvent_(evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n\n    return KEYCODE_MAP.get(evt.keyCode);\n  }\n\n  isActivationKey_(key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  }\n\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param {number} index The index to test\n   * @private\n   */\n  indexIsInRange_(index) {\n    return index >= 0 && index < this.adapter_.getTabListLength();\n  }\n\n  /**\n   * Returns the view's RTL property\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.isRTL();\n  }\n\n  /**\n   * Scrolls the tab at the given index into view for left-to-right useragents\n   * @param {number} index The index of the tab to scroll into view\n   * @private\n   */\n  scrollIntoView_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param {number} index The tab index to make visible\n   * @private\n   */\n  scrollIntoViewRTL_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const scrollWidth = this.adapter_.getScrollContentWidth();\n    const nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(\n      index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n}\n\nexport default MDCTabBarFoundation;\n","<template>\n  <div :class=\"classes\" class=\"mdc-tab-bar\" v-on=\"listeners\" role=\"tablist\">\n    <mdc-tab-scroller ref=\"scroller\"> <slot></slot> </mdc-tab-scroller>\n  </div>\n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tab-bar/foundation'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-tab-bar',\n  data() {\n    return {\n      classes: {},\n      indicatorStyles: {},\n      tabList: []\n    }\n  },\n  props: { activeTabIndex: [Number, String] },\n  provide() {\n    return { mdcTabBar: this }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabBarFoundation({\n      scrollTo: scrollX => this.$refs.scroller.scrollTo(scrollX),\n      incrementScroll: scrollXIncrement =>\n        this.$refs.scroller.incrementScroll(scrollXIncrement),\n      getScrollPosition: () => this.$refs.scroller.getScrollPosition(),\n      getScrollContentWidth: () => this.$refs.scroller.getScrollContentWidth(),\n      getOffsetWidth: () => this.$el.offsetWidth,\n      isRTL: () =>\n        window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n        'rtl',\n      setActiveTab: index => {\n        this.foundation.activateTab(index)\n      },\n      activateTabAtIndex: (index, clientRect) => {\n        this.tabList[index].activate(clientRect)\n      },\n      deactivateTabAtIndex: index => {\n        this.tabList[index] && this.tabList[index].deactivate()\n      },\n      focusTabAtIndex: index => this.tabList[index].focus(),\n      getTabIndicatorClientRectAtIndex: index => {\n        return (\n          this.tabList[index] &&\n          this.tabList[index].computeIndicatorClientRect()\n        )\n      },\n      getTabDimensionsAtIndex: index => {\n        return this.tabList[index].computeDimensions()\n      },\n      getPreviousActiveTabIndex: () => {\n        for (let i = 0; i < this.tabList.length; i++) {\n          if (this.tabList[i].isActive()) {\n            return i\n          }\n        }\n        return -1\n      },\n      getFocusedTabIndex: () => {\n        const tabElements = this.getTabElements_()\n        const activeElement = document.activeElement\n        return tabElements.indexOf(activeElement)\n      },\n      getIndexOfTabById: id => {\n        for (let i = 0; i < this.tabList.length; i++) {\n          if (this.tabList[i].id === id) {\n            return i\n          }\n        }\n        return -1\n      },\n      getTabListLength: () => this.tabList.length,\n      notifyTabActivated: index => {\n        emitCustomEvent(\n          this.$el,\n          MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT,\n          { index },\n          true\n        )\n\n        this.$emit('change', index)\n      }\n    })\n    this.foundation.init()\n    // ensure active tab\n    this.foundation.activateTab(this.activeTabIndex || 0)\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        'MDCTab:interacted': event => this.handleInteraction(event),\n        keydown: event => this.handleKeyDown(event)\n      }\n    }\n  },\n  methods: {\n    handleInteraction(evt) {\n      this.foundation.handleTabInteraction(evt)\n    },\n\n    handleKeyDown(evt) {\n      this.foundation.handleKeyDown(evt)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","<template>\n  <div class=\"mdc-tab-scroller\" :class=\"classes\">\n    <div\n      ref=\"area\"\n      class=\"mdc-tab-scroller__scroll-area\"\n      @mousedown=\"handleInteraction\"\n      @wheel=\"handleInteraction\"\n      @pointerdown=\"handleInteraction\"\n      @touchstart=\"handleInteraction\"\n      @keydown=\"handleInteraction\"\n      :class=\"areaClasses\"\n      :style=\"areaStyles\"\n    >\n      <div\n        ref=\"content\"\n        class=\"mdc-tab-scroller__scroll-content\"\n        :style=\"contentStyles\"\n        @transitionend=\"handleTransitionEnd\"\n      >\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCTabScrollerFoundation from '@material/tab-scroller/foundation'\nimport * as util from '@material/tab-scroller/util'\n\nexport default {\n  name: 'mdc-tab-scroller',\n  data() {\n    return { classes: {}, areaClasses: {}, areaStyles: {}, contentStyles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabScrollerFoundation({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype)\n        return evtTarget[MATCHES](selector)\n      },\n      addClass: className => this.$set(this.classes, className, true),\n\n      removeClass: className => this.$delete(this.classes, className),\n      addScrollAreaClass: className =>\n        this.$set(this.areaClasses, className, true),\n      setScrollAreaStyleProperty: (prop, value) =>\n        this.$set(this.areaStyles, prop, value),\n      setScrollContentStyleProperty: (prop, value) =>\n        this.$set(this.contentStyles, prop, value),\n      getScrollContentStyleValue: propName =>\n        window.getComputedStyle(this.$refs.content).getPropertyValue(propName),\n      setScrollAreaScrollLeft: scrollX =>\n        (this.$refs.area.scrollLeft = scrollX),\n      getScrollAreaScrollLeft: () => this.$refs.area.scrollLeft,\n      getScrollContentOffsetWidth: () => this.$refs.content.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.$refs.area.offsetWidth,\n      computeScrollAreaClientRect: () =>\n        this.$refs.area.getBoundingClientRect(),\n      computeScrollContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () =>\n        util.computeHorizontalScrollbarHeight(document)\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    handleTransitionEnd(evt) {\n      this.foundation.handleTransitionEnd(evt)\n    },\n    handleInteraction(evt) {\n      this.foundation.handleInteraction(evt)\n    },\n    getScrollPosition() {\n      return this.foundation.getScrollPosition()\n    },\n    getScrollContentWidth() {\n      return this.$refs.content.offsetWidth\n    },\n    incrementScroll(scrollXIncrement) {\n      this.foundation.incrementScroll(scrollXIncrement)\n    },\n    scrollTo(scrollX) {\n      this.foundation.scrollTo(scrollX)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab-indicator--active',\n  FADE: 'mdc-tab-indicator--fade',\n  NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\n\n/** @enum {string} */\nconst strings = {\n  CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTabIndicatorAdapter from './adapter';\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}\n * @abstract\n */\nclass MDCTabIndicatorFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabIndicatorAdapter for typing information\n   * @return {!MDCTabIndicatorAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabIndicatorAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      computeContentClientRect: () => {},\n      setContentStyleProperty: () => {},\n    });\n  }\n\n  /** @param {!MDCTabIndicatorAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabIndicatorFoundation.defaultAdapter, adapter));\n  }\n\n  /** @return {!ClientRect} */\n  computeContentClientRect() {\n    return this.adapter_.computeContentClientRect();\n  }\n\n  /**\n   * Activates the indicator\n   * @param {!ClientRect=} previousIndicatorClientRect\n   * @abstract\n   */\n  activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars\n\n  /** @abstract */\n  deactivate() {}\n}\n\nexport default MDCTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCSlidingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  /** @param {!ClientRect=} previousIndicatorClientRect */\n  activate(previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    }\n\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = this.computeContentClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    this.computeContentClientRect();\n\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCSlidingTabIndicatorFoundation;\n","<template>\n  <span class=\"mdc-tab-indicator\" :class=\"classes\">\n    <span\n      ref=\"content\"\n      :style=\"styles\"\n      class=\"mdc-tab-indicator__content mdc-tab-indicator__content--underline\"\n    ></span>\n  </span>\n</template>\n\n<script>\nimport MDCSlidingTabIndicatorFoundation from '@material/tab-indicator/sliding-foundation'\n\nexport default {\n  name: 'mdc-tab-indicator',\n  data() {\n    return { classes: {}, styles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCSlidingTabIndicatorFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      computeContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      setContentStyleProperty: (prop, value) => {\n        this.$set(this.styles, prop, value)\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    activate(previousIndicatorClientRect) {\n      this.foundation.activate(previousIndicatorClientRect)\n    },\n    deactivate() {\n      this.foundation.deactivate()\n    },\n    computeContentClientRect() {\n      return this.foundation.computeContentClientRect()\n    }\n  }\n}\n</script>\n","<template>\n  <span class=\"mdc-tab__ripple\" :class=\"classes\" :style=\"styles\"></span>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-tab-ripple',\n\n  data() {\n    return { classes: {}, styles: {} }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\nimport mdcTabScroller from './mdc-tab-scroller.vue'\nimport mdcTabIndicator from './mdc-tab-indicator.vue'\nimport mdcTabRipple from './mdc-tab-ripple.vue'\nexport { mdcTab, mdcTabBar, mdcTabScroller, mdcTabIndicator, mdcTabRipple }\n\nexport default BasePlugin({\n  mdcTab,\n  mdcTabBar,\n  mdcTabScroller,\n  mdcTabIndicator,\n  mdcTabRipple\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["CustomElementMixin","components","CustomElement","functional","render","createElement","context","props","is","tag","data","children","CustomLink","name","type","String","default","link","Object","h","element","_extends","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","to","exact","Boolean","append","replace","activeClass","exactActiveClass","computed","this","emitCustomEvent","el","evtType","evtData","evt","shouldBubble","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","supportsCssVariables_","supportsPassive_","DispatchEventMixin","event","Array","methods","$emit","target","eventTarget","args","eventArgs","listeners","$listeners","e","_this","scope","Math","floor","random","toString","VMAUniqueIdMixin","beforeCreate","vma_uid_","_uid","MDCFoundation","adapter","adapter_","cssClasses","ACTIVE","strings","ARIA_SELECTED","RIPPLE_SELECTOR","CONTENT_SELECTOR","TAB_INDICATOR_SELECTOR","TABINDEX","INTERACTED_EVENT","MDCTabFoundation","defaultAdapter","focusOnActivate_","addClass","removeClass","hasClass","setAttr","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getOffsetWidth","getContentOffsetLeft","getContentOffsetWidth","focus","focusOnActivate","previousIndicatorClientRect","isActive","rootWidth","rootLeft","contentWidth","contentLeft","rootRight","contentRight","ROOT","UNBOUNDED","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","VAR_LEFT","VAR_TOP","VAR_FG_SIZE","VAR_FG_SCALE","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","numbers","PADDING","INITIAL_ORIGIN_SCALE","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","TAP_DELAY_MS","supportsCssVariables","windowObj","forceRefresh","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","className","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","applyPassive","globalObj","window","undefined","isSupported","addEventListener","passive","getMatchesProperty","HTMLElementPrototype","matchesMethods","method","i","length","matchesMethod","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","left","top","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isUnbounded","isSurfaceActive","isSurfaceDisabled","containsEventTarget","registerInteractionHandler","deregisterInteractionHandler","registerDocumentInteractionHandler","deregisterDocumentInteractionHandler","registerResizeHandler","deregisterResizeHandler","updateCssVariable","computeBoundingRect","getWindowPageOffset","isActivated","hasDeactivationUXRun","wasActivatedByPointer","wasElementMadeActive","activationEvent","isProgrammatic","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","requestAnimationFrame","_this2","layoutInternal_","clearTimeout","_this3","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","forEach","_this4","_this5","_this6","_this7","keys","k","indexOf","_this8","activationState","previousActivationEvent","some","_this9","resetActivationState_","push","registerDeactivationHandlers_","checkElementMadeActive_","animateActivation_","key","keyCode","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","setTimeout","_this10","ev","pageOffset","clientRect","normalizedX","normalizedY","documentX","documentY","changedTouches","pageX","pageY","_this11","_this12","state","_this13","animateDeactivation_","cancelAnimationFrame","_this14","maxDim","max","sqrt","pow","_this15","updateLayoutCssVars_","round","unbounded","_this16","_this17","RippleCapableSurface","prototype","root_","disabled","RippleBase","vm","options","$el","MATCHES","$set","classes","$delete","contains","handler","removeEventListener","documentElement","varName","value","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElement","mounted","ripple","init","beforeDestroy","destroy","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","staticRenderFns","_compiled","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","shadowRoot","originalRender","existing","concat","script","iconProp","content","reduce","result","_typeof","split","textContent","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","EXTRA_SCROLL_AMOUNT","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","ACCEPTABLE_KEYS","Set","KEYCODE_MAP","Map","set","MDCTabBarFoundation","useAutomaticActivation_","scrollTo","incrementScroll","getScrollPosition","getScrollContentWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTabById","getTabListLength","notifyTabActivated","useAutomaticActivation","index","previousActiveIndex","indexIsInRange_","scrollIntoView","getKeyFromEvent_","isActivationKey_","preventDefault","determineTargetFromKey_","focusedTabIndex","tabId","isRTL_","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","leftIncrement","rightIncrement","min","scrollContentWidth","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","rootDelta","has","get","findAdjacentTabIndexClosestToEdge_","scrollIncrement","calculateScrollIncrement_","scrollWidth","findAdjacentTabIndexClosestToEdgeRTL_","calculateScrollIncrementRTL_","horizontalScrollbarHeight_","ANIMATING","SCROLL_TEST","SCROLL_AREA_SCROLL","AREA_SELECTOR","MDCTabScrollerRTL","translateX","scrollX","MDCTabScrollerRTLDefault","currentScrollLeft","getScrollAreaScrollLeft","right","calculateScrollEdges_","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","MDCTabScrollerRTLNegative","MDCTabScrollerRTLReverse","MDCTabScrollerFoundation","isAnimating_","rtlScrollerInstance_","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","horizontalScrollbarHeight","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","stopScrollAnimation_","scrollXIncrement","incrementScrollRTL_","incrementScroll_","scrollToRTL_","scrollTo_","rtlScrollerFactory_","transformValue","parts","exec","parseFloat","getRTLScroller","getScrollPositionRTL","currentScrollX","safeScrollX","animate_","animation","scrollToRTL","targetScrollX","incrementScrollRTL","currentScrollPosition","getAnimatingScrollPosition_","scrollLeft","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","filter","p","pop","documentObj","shouldCacheResult","classList","offsetHeight","clientHeight","removeChild","FADE","NO_TRANSITION","MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","MDCSlidingTabIndicatorFoundation","currentClientRect","widthDelta","xPosition","version","install","component","mdcTab","mdcTabBar","mdcTabScroller","mdcTabIndicator","mdcTabRipple","plugin","_Vue","Vue","global","use"],"mappings":"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"}