{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-link.js","../../components/base/custom-event.js","../../components/base/custom-icon.js","../../components/base/dispatch-event-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/tab/adapter.js","../../node_modules/@material/tab/constants.js","../../node_modules/@material/tab/foundation.js","../../components/tabs/mdc-tab.vue","../../node_modules/vue-runtime-helpers/normalize-component.js","../../node_modules/@material/tab-bar/constants.js","../../node_modules/@material/tab-bar/adapter.js","../../node_modules/@material/tab-bar/foundation.js","../../components/tabs/mdc-tab-bar.vue","../../node_modules/@material/tab-scroller/constants.js","../../node_modules/@material/tab-scroller/adapter.js","../../node_modules/@material/tab-scroller/rtl-scroller.js","../../node_modules/@material/tab-scroller/rtl-default-scroller.js","../../node_modules/@material/tab-scroller/rtl-negative-scroller.js","../../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","../../node_modules/@material/tab-scroller/foundation.js","../../node_modules/@material/tab-scroller/util.js","../../components/tabs/mdc-tab-scroller.vue","../../node_modules/@material/tab-indicator/adapter.js","../../node_modules/@material/tab-indicator/constants.js","../../node_modules/@material/tab-indicator/foundation.js","../../node_modules/@material/tab-indicator/sliding-foundation.js","../../components/tabs/mdc-tab-indicator.vue","../../components/tabs/mdc-tab-ripple.vue","../../components/tabs/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export function extractIconProp(iconProp) {\n  if (typeof iconProp === 'string') {\n    return {\n      classes: { 'material-icons': true },\n      content: iconProp\n    }\n  } else if (iconProp instanceof Array) {\n    return {\n      classes: iconProp.reduce(\n        (result, value) => Object.assign(result, { [value]: true }),\n        {}\n      )\n    }\n  } else if (typeof iconProp === 'object') {\n    return {\n      classes: iconProp.className\n        .split(' ')\n        .reduce(\n          (result, value) => Object.assign(result, { [value]: true }),\n          {}\n        ),\n      content: iconProp.textContent\n    }\n  }\n}\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * MDCTabDimensions provides details about the left and right edges of the Tab\n * root element and the Tab content element. These values are used to determine\n * the visual position of the Tab with respect it's parent container.\n * @typedef {{rootLeft: number, rootRight: number, contentLeft: number, contentRight: number}}\n */\nlet MDCTabDimensions;\n\n/**\n * @typedef {{\n *   detail: {\n *     tabId: string,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCTabInteractionEventType;\n\n/**\n * Adapter for MDC Tab.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab  into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether the root element has the given className.\n   * @param {string} className The className to remove\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the given attrName of the root element to the given value.\n   * @param {string} attr The attribute name to set\n   * @param {string} value The value so give the attribute\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Activates the indicator element.\n   * @param {!ClientRect=} previousIndicatorClientRect The client rect of the previously activated indicator\n   */\n  activateIndicator(previousIndicatorClientRect) {}\n\n  /** Deactivates the indicator. */\n  deactivateIndicator() {}\n\n  /**\n   * Emits the MDCTab:interacted event for use by parent components\n   */\n  notifyInteracted() {}\n\n  /**\n   * Returns the offsetLeft value of the root element.\n   * @return {number}\n   */\n  getOffsetLeft() {}\n\n  /**\n   * Returns the offsetWidth value of the root element.\n   * @return {number}\n   */\n  getOffsetWidth() {}\n\n  /**\n   * Returns the offsetLeft of the content element.\n   * @return {number}\n   */\n  getContentOffsetLeft() {}\n\n  /**\n   * Returns the offsetWidth of the content element.\n   * @return {number}\n   */\n  getContentOffsetWidth() {}\n\n  /**\n   * Applies focus to the root element\n   */\n  focus() {}\n}\n\nexport {MDCTabDimensions, MDCTabInteractionEventType, MDCTabAdapter};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_SELECTED: 'aria-selected',\n  RIPPLE_SELECTOR: '.mdc-tab__ripple',\n  CONTENT_SELECTOR: '.mdc-tab__content',\n  TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n  TABINDEX: 'tabIndex',\n  INTERACTED_EVENT: 'MDCTab:interacted',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabAdapter>}\n * @final\n */\nclass MDCTabFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabAdapter for typing information\n   * @return {!MDCTabAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      activateIndicator: () => {},\n      deactivateIndicator: () => {},\n      notifyInteracted: () => {},\n      getOffsetLeft: () => {},\n      getOffsetWidth: () => {},\n      getContentOffsetLeft: () => {},\n      getContentOffsetWidth: () => {},\n      focus: () => {},\n    });\n  }\n\n  /** @param {!MDCTabAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.focusOnActivate_ = true;\n  }\n\n  /**\n   * Handles the \"click\" event\n   */\n  handleClick() {\n    // It's up to the parent component to keep track of the active Tab and\n    // ensure we don't activate a Tab that's already active.\n    this.adapter_.notifyInteracted();\n  }\n\n  /**\n   * Returns the Tab's active state\n   * @return {boolean}\n   */\n  isActive() {\n    return this.adapter_.hasClass(cssClasses.ACTIVE);\n  }\n\n  /**\n   * Sets whether the tab should focus itself when activated\n   * @param {boolean} focusOnActivate\n   */\n  setFocusOnActivate(focusOnActivate) {\n    this.focusOnActivate_ = focusOnActivate;\n  }\n\n  /**\n   * Activates the Tab\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.adapter_.addClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'true');\n    this.adapter_.setAttr(strings.TABINDEX, '0');\n    this.adapter_.activateIndicator(previousIndicatorClientRect);\n    if (this.focusOnActivate_) {\n      this.adapter_.focus();\n    }\n  }\n\n  /**\n   * Deactivates the Tab\n   */\n  deactivate() {\n    // Early exit\n    if (!this.isActive()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'false');\n    this.adapter_.setAttr(strings.TABINDEX, '-1');\n    this.adapter_.deactivateIndicator();\n  }\n\n  /**\n   * Returns the dimensions of the Tab\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    const rootWidth = this.adapter_.getOffsetWidth();\n    const rootLeft = this.adapter_.getOffsetLeft();\n    const contentWidth = this.adapter_.getContentOffsetWidth();\n    const contentLeft = this.adapter_.getContentOffsetLeft();\n\n    return {\n      rootLeft,\n      rootRight: rootLeft + rootWidth,\n      contentLeft: rootLeft + contentLeft,\n      contentRight: rootLeft + contentLeft + contentWidth,\n    };\n  }\n}\n\nexport default MDCTabFoundation;\n","<template>\r\n  <custom-link\r\n    :class=\"classes\"\r\n    :style=\"styles\"\r\n    :link=\"link\"\r\n    class=\"mdc-tab\"\r\n    @click=\"handleClick\"\r\n    role=\"tab\"\r\n    aria-selected=\"false\"\r\n    tabindex=\"-1\"\r\n  >\r\n    <span ref=\"content\" class=\"mdc-tab__content\">\r\n      <i\r\n        v-if=\"!!hasIcon\"\r\n        ref=\"icon\"\r\n        :class=\"hasIcon.classes\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-tab__icon\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n      </i>\r\n\r\n      <span v-if=\"hasText\" class=\"mdc-tab__text-label\"> <slot /> </span>\r\n    </span>\r\n\r\n    <mdc-tab-indicator ref=\"tabIndicator\"></mdc-tab-indicator>\r\n    <mdc-tab-ripple></mdc-tab-ripple>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tab/foundation'\r\nimport {\r\n  CustomLinkMixin,\r\n  DispatchEventMixin,\r\n  emitCustomEvent,\r\n  extractIconProp\r\n} from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object],\r\n    stacked: Boolean,\r\n    minWidth: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-tab--stacked': this.stacked,\r\n        'mdc-tab--min-width': this.minWidth\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n\r\n  inject: ['mdcTabBar'],\r\n  computed: {\r\n    hasIcon() {\r\n      if (this.icon || this.$slots.icon) {\r\n        return this.icon ? extractIconProp(this.icon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasText() {\r\n      return !!this.$slots.default\r\n    }\r\n  },\r\n  watch: {\r\n    active(value) {}\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCTabFoundation({\r\n      setAttr: (attr, value) => this.$el.setAttribute(attr, value),\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      hasClass: className => this.$el.classList.contains(className),\r\n      activateIndicator: previousIndicatorClientRect => {\r\n        this.$refs.tabIndicator.activate(previousIndicatorClientRect)\r\n      },\r\n      deactivateIndicator: () => {\r\n        this.$refs.tabIndicator.deactivate()\r\n      },\r\n      notifyInteracted: () =>\r\n        emitCustomEvent(\r\n          this.$el,\r\n          MDCTabFoundation.strings.INTERACTED_EVENT,\r\n          { tab: this },\r\n          true /* bubble */\r\n        ),\r\n      getOffsetLeft: () => this.$el.offsetLeft,\r\n      getOffsetWidth: () => this.$el.offsetWidth,\r\n      getContentOffsetLeft: () => this.$refs.content.offsetLeft,\r\n      getContentOffsetWidth: () => this.$refs.content.offsetWidth,\r\n      focus: () => this.$el.focus()\r\n    })\r\n    this.foundation.init()\r\n\r\n    // console.log('tab mounted')\r\n\r\n    this.mdcTabBar.tabList.push(this)\r\n\r\n    // this.setActive(this.active)\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy()\r\n  },\r\n  methods: {\r\n    activate(computeIndicatorClientRect) {\r\n      this.foundation.activate(computeIndicatorClientRect)\r\n    },\r\n\r\n    deactivate() {\r\n      this.foundation.deactivate()\r\n    },\r\n    handleClick(evt) {\r\n      this.foundation.handleClick(evt)\r\n    },\r\n    isActive() {\r\n      return this.foundation.isActive()\r\n    },\r\n    setActive(isActive) {\r\n      if (isActive) {\r\n        this.$set(this.classes, 'mdc-tab--active', true),\r\n          this.$refs.tabIndicator.activate()\r\n      }\r\n    },\r\n    computeIndicatorClientRect() {\r\n      return this.$refs.tabIndicator.computeContentClientRect()\r\n    },\r\n\r\n    computeDimensions() {\r\n      return this.foundation.computeDimensions()\r\n    },\r\n\r\n    focus() {\r\n      this.$el.focus()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n  TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n  TAB_SELECTOR: '.mdc-tab',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  END_KEY: 'End',\n  HOME_KEY: 'Home',\n  ENTER_KEY: 'Enter',\n  SPACE_KEY: 'Space',\n};\n\n/** @enum {number} */\nconst numbers = {\n  EXTRA_SCROLL_AMOUNT: 20,\n  ARROW_LEFT_KEYCODE: 37,\n  ARROW_RIGHT_KEYCODE: 39,\n  END_KEYCODE: 35,\n  HOME_KEYCODE: 36,\n  ENTER_KEYCODE: 13,\n  SPACE_KEYCODE: 32,\n};\n\nexport {\n  numbers,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * Adapter for MDC Tab Bar.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabBarAdapter {\n  /**\n   * Scrolls to the given position\n   * @param {number} scrollX The position to scroll to\n   */\n  scrollTo(scrollX) {}\n\n  /**\n   * Increments the current scroll position by the given amount\n   * @param {number} scrollXIncrement The amount to increment scroll\n   */\n  incrementScroll(scrollXIncrement) {}\n\n  /**\n   * Returns the current scroll position\n   * @return {number}\n   */\n  getScrollPosition() {}\n\n  /**\n   * Returns the width of the scroll content\n   * @return {number}\n   */\n  getScrollContentWidth() {}\n\n  /**\n   * Returns the root element's offsetWidth\n   * @return {number}\n   */\n  getOffsetWidth() {}\n\n  /**\n   * Returns if the Tab Bar language direction is RTL\n   * @return {boolean}\n   */\n  isRTL() {}\n\n  /**\n   * Sets the tab at the given index to be activated\n   * @param {number} index The index of the tab to activate\n   */\n  setActiveTab(index) {}\n\n  /**\n   * Activates the tab at the given index with the given client rect\n   * @param {number} index The index of the tab to activate\n   * @param {!ClientRect} clientRect The client rect of the previously active Tab Indicator\n   */\n  activateTabAtIndex(index, clientRect) {}\n\n  /**\n   * Deactivates the tab at the given index\n   * @param {number} index The index of the tab to deactivate\n   */\n  deactivateTabAtIndex(index) {}\n\n  /**\n   * Focuses the tab at the given index\n   * @param {number} index The index of the tab to focus\n   */\n  focusTabAtIndex(index) {}\n\n  /**\n   * Returns the client rect of the tab's indicator\n   * @param {number} index The index of the tab\n   * @return {!ClientRect}\n   */\n  getTabIndicatorClientRectAtIndex(index) {}\n\n  /**\n   * Returns the tab dimensions of the tab at the given index\n   * @param {number} index The index of the tab\n   * @return {!MDCTabDimensions}\n   */\n  getTabDimensionsAtIndex(index) {}\n\n  /**\n   * Returns the length of the tab list\n   * @return {number}\n   */\n  getTabListLength() {}\n\n  /**\n   * Returns the index of the previously active tab\n   * @return {number}\n   */\n  getPreviousActiveTabIndex() {}\n\n  /**\n   * Returns the index of the focused tab\n   * @return {number}\n   */\n  getFocusedTabIndex() {}\n\n  /**\n   * Returns the index of the given tab\n   * @param {string} id The ID of the tab whose index to determine\n   * @return {number}\n   */\n  getIndexOfTabById(id) {}\n\n  /**\n   * Emits the MDCTabBar:activated event\n   * @param {number} index The index of the activated tab\n   */\n  notifyTabActivated(index) {}\n}\n\nexport default MDCTabBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\nimport {strings, numbers} from './constants';\nimport MDCTabBarAdapter from './adapter';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @type {Set<string>}\n */\nconst ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\n\n/**\n * @type {Map<number, string>}\n */\nconst KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\n\n/**\n * @extends {MDCFoundation<!MDCTabBarAdapter>}\n * @final\n */\nclass MDCTabBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @see MDCTabBarAdapter for typing information\n   * @return {!MDCTabBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabBarAdapter} */ ({\n      scrollTo: () => {},\n      incrementScroll: () => {},\n      getScrollPosition: () => {},\n      getScrollContentWidth: () => {},\n      getOffsetWidth: () => {},\n      isRTL: () => {},\n      setActiveTab: () => {},\n      activateTabAtIndex: () => {},\n      deactivateTabAtIndex: () => {},\n      focusTabAtIndex: () => {},\n      getTabIndicatorClientRectAtIndex: () => {},\n      getTabDimensionsAtIndex: () => {},\n      getPreviousActiveTabIndex: () => {},\n      getFocusedTabIndex: () => {},\n      getIndexOfTabById: () => {},\n      getTabListLength: () => {},\n      notifyTabActivated: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTabBarAdapter} adapter\n   * */\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.useAutomaticActivation_ = false;\n  }\n\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   * @param {boolean} useAutomaticActivation\n   */\n  setUseAutomaticActivation(useAutomaticActivation) {\n    this.useAutomaticActivation_ = useAutomaticActivation;\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index\n   */\n  activateTab(index) {\n    const previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n      return;\n    }\n\n    this.adapter_.deactivateTabAtIndex(previousActiveIndex);\n    this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));\n    this.scrollIntoView(index);\n\n    this.adapter_.notifyTabActivated(index);\n  }\n\n  /**\n   * Handles the keydown event\n   * @param {!Event} evt\n   */\n  handleKeyDown(evt) {\n    // Get the key from the event\n    const key = this.getKeyFromEvent_(evt);\n\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey_(key)) {\n      evt.preventDefault();\n    }\n\n    if (this.useAutomaticActivation_) {\n      if (this.isActivationKey_(key)) {\n        return;\n      }\n\n      const index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);\n      this.adapter_.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      const focusedTabIndex = this.adapter_.getFocusedTabIndex();\n      if (this.isActivationKey_(key)) {\n        this.adapter_.setActiveTab(focusedTabIndex);\n      } else {\n        const index = this.determineTargetFromKey_(focusedTabIndex, key);\n        this.adapter_.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  }\n\n  /**\n   * Handles the MDCTab:interacted event\n   * @param {!Event} evt\n   */\n  handleTabInteraction(evt) {\n    this.adapter_.setActiveTab(this.adapter_.getIndexOfTabById(evt.detail.tabId));\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index The tab index to make visible\n   */\n  scrollIntoView(index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange_(index)) {\n      return;\n    }\n\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      return this.adapter_.scrollTo(0);\n    }\n\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter_.getTabListLength() - 1) {\n      return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());\n    }\n\n    if (this.isRTL_()) {\n      return this.scrollIntoViewRTL_(index);\n    }\n\n    this.scrollIntoView_(index);\n  }\n\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param {number} origin The original index from which to determine the destination\n   * @param {string} key The name of the key\n   * @return {number}\n   * @private\n   */\n  determineTargetFromKey_(origin, key) {\n    const isRTL = this.isRTL_();\n    const maxIndex = this.adapter_.getTabListLength() - 1;\n    const shouldGoToEnd = key === strings.END_KEY;\n    const shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    const shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    let index = origin;\n\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    const relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    const leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n\n    return Math.max(rightIncrement, 0);\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @param {number} scrollContentWidth The width of the scroll content\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    const relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    const leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n\n    return Math.min(rightIncrement, 0);\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    const relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    const relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    const relativeRootDelta = relativeRootLeft + relativeRootRight;\n    const leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    const rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @param {number} scrollContentWidth The width of the scroller content\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    const rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    const rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    const rootDelta = rootLeft + rootRight;\n    const leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    const rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Returns the key associated with a keydown event\n   * @param {!Event} evt The keydown event\n   * @return {string}\n   * @private\n   */\n  getKeyFromEvent_(evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n\n    return KEYCODE_MAP.get(evt.keyCode);\n  }\n\n  isActivationKey_(key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  }\n\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param {number} index The index to test\n   * @private\n   */\n  indexIsInRange_(index) {\n    return index >= 0 && index < this.adapter_.getTabListLength();\n  }\n\n  /**\n   * Returns the view's RTL property\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.isRTL();\n  }\n\n  /**\n   * Scrolls the tab at the given index into view for left-to-right useragents\n   * @param {number} index The index of the tab to scroll into view\n   * @private\n   */\n  scrollIntoView_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param {number} index The tab index to make visible\n   * @private\n   */\n  scrollIntoViewRTL_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const scrollWidth = this.adapter_.getScrollContentWidth();\n    const nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(\n      index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n}\n\nexport default MDCTabBarFoundation;\n","<template>\n  <div :class=\"classes\" class=\"mdc-tab-bar\" v-on=\"listeners\" role=\"tablist\">\n    <mdc-tab-scroller ref=\"scroller\"> <slot></slot> </mdc-tab-scroller>\n  </div>\n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tab-bar/foundation'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-tab-bar',\n  data() {\n    return {\n      classes: {},\n      indicatorStyles: {},\n      tabList: []\n    }\n  },\n  props: { activeTabIndex: [Number, String] },\n  provide() {\n    return { mdcTabBar: this }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabBarFoundation({\n      scrollTo: scrollX => this.$refs.scroller.scrollTo(scrollX),\n      incrementScroll: scrollXIncrement =>\n        this.$refs.scroller.incrementScroll(scrollXIncrement),\n      getScrollPosition: () => this.$refs.scroller.getScrollPosition(),\n      getScrollContentWidth: () => this.$refs.scroller.getScrollContentWidth(),\n      getOffsetWidth: () => this.$el.offsetWidth,\n      isRTL: () =>\n        window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n        'rtl',\n      setActiveTab: index => {\n        this.foundation.activateTab(index)\n      },\n      activateTabAtIndex: (index, clientRect) => {\n        this.tabList[index].activate(clientRect)\n      },\n      deactivateTabAtIndex: index => {\n        this.tabList[index] && this.tabList[index].deactivate()\n      },\n      focusTabAtIndex: index => this.tabList[index].focus(),\n      getTabIndicatorClientRectAtIndex: index => {\n        return (\n          this.tabList[index] &&\n          this.tabList[index].computeIndicatorClientRect()\n        )\n      },\n      getTabDimensionsAtIndex: index => {\n        return this.tabList[index].computeDimensions()\n      },\n      getPreviousActiveTabIndex: () => {\n        for (let i = 0; i < this.tabList.length; i++) {\n          if (this.tabList[i].isActive()) {\n            return i\n          }\n        }\n        return -1\n      },\n      getFocusedTabIndex: () => {\n        const tabElements = this.getTabElements_()\n        const activeElement = document.activeElement\n        return tabElements.indexOf(activeElement)\n      },\n      getIndexOfTab: tabToFind => this.tabList.indexOf(tabToFind),\n      getTabListLength: () => this.tabList.length,\n      notifyTabActivated: index => {\n        emitCustomEvent(\n          this.$el,\n          MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT,\n          { index },\n          true\n        )\n\n        this.$emit('change', index)\n      }\n    })\n    this.foundation.init()\n    // ensure active tab\n    this.foundation.activateTab(this.activeTabIndex || 0)\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        'MDCTab:interacted': event => this.handleInteraction(event)\n      }\n    }\n  },\n  methods: {\n    handleInteraction(evt) {\n      this.foundation.handleTabInteraction(evt)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * MDCTabScrollerAnimation contains the values required for animating from the\n * current scroll position to the new scroll position. The \"finalScrollPosition\"\n * value represents the new scroll position while the \"scrollDelta\" value is the\n * corresponding transformation that is applied to the scroll content. Together,\n * they create the animation by first updating the scroll value then applying\n * the transformation and animating the transition. Both pieces are necessary\n * for the scroll animation to work. The values are used as-is by the tab\n * scroller animation method, ensuring that all logic for determining scroll\n * position or transformation is abstracted away from the animation method.\n * @typedef {{finalScrollPosition: number, scrollDelta: number}}\n */\nlet MDCTabScrollerAnimation;\n\n/**\n * MDCTabScrollerHorizontalEdges represents the left and right edges of the\n * scroll content. These values vary depending on how scrolling in RTL is\n * implemented by the browser. One value is always 0 and one value is always\n * the max scrollable value as either a positive or negative integer.\n * @typedef {{left: number, right: number}}\n */\nlet MDCTabScrollerHorizontalEdges;\n\n/**\n * Adapter for MDC Tab Scroller.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab  into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabScrollerAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Adds the given className to the scroll area element.\n   * @param {string} className The className to add\n   */\n  addScrollAreaClass(className) {}\n\n  /**\n   * Returns whether the event target matches given className.\n   * @param {EventTarget} evtTarget The event target\n   * @param {string} selector The selector to check\n   * @return {boolean}\n   */\n  eventTargetMatchesSelector(evtTarget, selector) {}\n\n  /**\n   * Sets a style property of the area element to the passed value.\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setScrollAreaStyleProperty(propName, value) {}\n\n  /**\n   * Sets a style property of the content element to the passed value.\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setScrollContentStyleProperty(propName, value) {}\n\n  /**\n   * Returns the scroll content element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getScrollContentStyleValue(propertyName) {}\n\n  /**\n   * Sets the scrollLeft value of the scroll area element to the passed value.\n   * @param {number} scrollLeft The new scrollLeft value\n   */\n  setScrollAreaScrollLeft(scrollLeft) {}\n\n  /**\n   * Returns the scrollLeft value of the scroll area element.\n   * @return {number}\n   */\n  getScrollAreaScrollLeft() {}\n\n  /**\n   * Returns the offsetWidth of the scroll content element.\n   * @return {number}\n   */\n  getScrollContentOffsetWidth() {}\n\n  /**\n   * Returns the offsetWitdth of the scroll area element.\n   * @return {number}\n   */\n  getScrollAreaOffsetWidth() {}\n\n  /**\n   * Returns the bounding client rect of the scroll area element.\n   * @return {!ClientRect}\n   */\n  computeScrollAreaClientRect() {}\n\n  /**\n   * Returns the bounding client rect of the scroll content element.\n   * @return {!ClientRect}\n   */\n  computeScrollContentClientRect() {}\n\n  /**\n   * Returns the height of the browser's horizontal scrollbars (in px).\n   * @return {number}\n   */\n  computeHorizontalScrollbarHeight() {}\n}\n\nexport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","<template>\n  <div class=\"mdc-tab-scroller\" :class=\"classes\">\n    <div\n      ref=\"area\"\n      class=\"mdc-tab-scroller__scroll-area\"\n      @mousedown=\"handleInteraction\"\n      @wheel=\"handleInteraction\"\n      @pointerdown=\"handleInteraction\"\n      @touchstart=\"handleInteraction\"\n      @keydown=\"handleInteraction\"\n      :class=\"areaClasses\"\n      :style=\"areaStyles\"\n    >\n      <div\n        ref=\"content\"\n        class=\"mdc-tab-scroller__scroll-content\"\n        :style=\"contentStyles\"\n        @transitionend=\"handleTransitionEnd\"\n      >\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCTabScrollerFoundation from '@material/tab-scroller/foundation'\nimport * as util from '@material/tab-scroller/util'\n\nexport default {\n  name: 'mdc-tab-scroller',\n  data() {\n    return { classes: {}, areaClasses: {}, areaStyles: {}, contentStyles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabScrollerFoundation({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype)\n        return evtTarget[MATCHES](selector)\n      },\n      addClass: className => this.$set(this.classes, className, true),\n\n      removeClass: className => this.$delete(this.classes, className),\n      addScrollAreaClass: className =>\n        this.$set(this.areaClasses, className, true),\n      setScrollAreaStyleProperty: (prop, value) =>\n        this.$set(this.areaStyles, prop, value),\n      setScrollContentStyleProperty: (prop, value) =>\n        this.$set(this.contentStyles, prop, value),\n      getScrollContentStyleValue: propName =>\n        window.getComputedStyle(this.$refs.content).getPropertyValue(propName),\n      setScrollAreaScrollLeft: scrollX =>\n        (this.$refs.area.scrollLeft = scrollX),\n      getScrollAreaScrollLeft: () => this.$refs.area.scrollLeft,\n      getScrollContentOffsetWidth: () => this.$refs.content.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.$refs.area.offsetWidth,\n      computeScrollAreaClientRect: () =>\n        this.$refs.area.getBoundingClientRect(),\n      computeScrollContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () =>\n        util.computeHorizontalScrollbarHeight(document)\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    handleTransitionEnd(evt) {\n      this.foundation.handleTransitionEnd(evt)\n    },\n    handleInteraction(evt) {\n      this.foundation.handleInteraction(evt)\n    },\n    getScrollPosition() {\n      return this.foundation.getScrollPosition()\n    },\n    getScrollContentWidth() {\n      return this.$refs.content.offsetWidth\n    },\n    incrementScroll(scrollXIncrement) {\n      this.foundation.incrementScroll(scrollXIncrement)\n    },\n    scrollTo(scrollX) {\n      this.foundation.scrollTo(scrollX)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Tab Indicator.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Tab Indicator into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTabIndicatorAdapter {\n  /**\n   * Adds the given className to the root element.\n   * @param {string} className The className to add\n   */\n  addClass(className) {}\n\n  /**\n   * Removes the given className from the root element.\n   * @param {string} className The className to remove\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the client rect of the content element.\n   * @return {!ClientRect}\n   */\n  computeContentClientRect() {}\n\n  /**\n   * Sets a style property of the content element to the passed value\n   * @param {string} propName The style property name to set\n   * @param {string} value The style property value\n   */\n  setContentStyleProperty(propName, value) {}\n}\n\nexport default MDCTabIndicatorAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab-indicator--active',\n  FADE: 'mdc-tab-indicator--fade',\n  NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\n\n/** @enum {string} */\nconst strings = {\n  CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTabIndicatorAdapter from './adapter';\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}\n * @abstract\n */\nclass MDCTabIndicatorFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabIndicatorAdapter for typing information\n   * @return {!MDCTabIndicatorAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabIndicatorAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      computeContentClientRect: () => {},\n      setContentStyleProperty: () => {},\n    });\n  }\n\n  /** @param {!MDCTabIndicatorAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabIndicatorFoundation.defaultAdapter, adapter));\n  }\n\n  /** @return {!ClientRect} */\n  computeContentClientRect() {\n    return this.adapter_.computeContentClientRect();\n  }\n\n  /**\n   * Activates the indicator\n   * @param {!ClientRect=} previousIndicatorClientRect\n   * @abstract\n   */\n  activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars\n\n  /** @abstract */\n  deactivate() {}\n}\n\nexport default MDCTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCSlidingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  /** @param {!ClientRect=} previousIndicatorClientRect */\n  activate(previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    }\n\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = this.computeContentClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    this.computeContentClientRect();\n\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCSlidingTabIndicatorFoundation;\n","<template>\n  <span class=\"mdc-tab-indicator\" :class=\"classes\">\n    <span\n      ref=\"content\"\n      :style=\"styles\"\n      class=\"mdc-tab-indicator__content mdc-tab-indicator__content--underline\"\n    ></span>\n  </span>\n</template>\n\n<script>\nimport MDCSlidingTabIndicatorFoundation from '@material/tab-indicator/sliding-foundation'\n\nexport default {\n  name: 'mdc-tab-indicator',\n  data() {\n    return { classes: {}, styles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCSlidingTabIndicatorFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      computeContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      setContentStyleProperty: (prop, value) => {\n        this.$set(this.styles, prop, value)\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    activate(previousIndicatorClientRect) {\n      this.foundation.activate(previousIndicatorClientRect)\n    },\n    deactivate() {\n      this.foundation.deactivate()\n    },\n    computeContentClientRect() {\n      return this.foundation.computeContentClientRect()\n    }\n  }\n}\n</script>\n","<template>\n  <span class=\"mdc-tab__ripple\" :class=\"classes\" :style=\"styles\"></span>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-tab-ripple',\n\n  data() {\n    return { classes: {}, styles: {} }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\nimport mdcTabScroller from './mdc-tab-scroller.vue'\nimport mdcTabIndicator from './mdc-tab-indicator.vue'\nimport mdcTabRipple from './mdc-tab-ripple.vue'\nexport { mdcTab, mdcTabBar, mdcTabScroller, mdcTabIndicator, mdcTabRipple }\n\nexport default BasePlugin({\n  mdcTab,\n  mdcTabBar,\n  mdcTabScroller,\n  mdcTabIndicator,\n  mdcTabRipple\n})\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","CustomLink","functional","props","tag","type","String","default","link","Object","render","h","context","element","data","parent","$router","$root","$options","on","click","nativeOn","children","CustomLinkMixin","to","exact","Boolean","append","replace","activeClass","exactActiveClass","computed","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","extractIconProp","iconProp","classes","content","Array","reduce","result","value","className","split","textContent","DispatchEventMixin","event","methods","$emit","target","eventTarget","args","eventArgs","listeners","$listeners","e","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCTabAdapter","attr","previousIndicatorClientRect","cssClasses","ACTIVE","strings","ARIA_SELECTED","RIPPLE_SELECTOR","CONTENT_SELECTOR","TAB_INDICATOR_SELECTOR","TABINDEX","INTERACTED_EVENT","MDCTabFoundation","addClass","removeClass","hasClass","setAttr","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getOffsetWidth","getContentOffsetLeft","getContentOffsetWidth","focus","defaultAdapter","focusOnActivate_","focusOnActivate","isActive","rootWidth","rootLeft","contentWidth","contentLeft","rootRight","contentRight","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","staticRenderFns","_compiled","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","shadowRoot","originalRender","renderWithStyleInjection","existing","beforeCreate","concat","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","numbers","EXTRA_SCROLL_AMOUNT","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","MDCTabBarAdapter","scrollX","scrollXIncrement","index","clientRect","id","ACCEPTABLE_KEYS","Set","KEYCODE_MAP","Map","set","MDCTabBarFoundation","scrollTo","incrementScroll","getScrollPosition","getScrollContentWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTabById","getTabListLength","notifyTabActivated","useAutomaticActivation_","useAutomaticActivation","previousActiveIndex","indexIsInRange_","scrollIntoView","getKeyFromEvent_","undefined","isActivationKey_","preventDefault","determineTargetFromKey_","focusedTabIndex","tabId","isRTL_","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","shouldGoToEnd","shouldDecrement","shouldIncrement","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","relativeContentRight","leftIncrement","rightIncrement","min","max","scrollContentWidth","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","leftEdgeIsCloser","rightEdgeIsCloser","rootDelta","has","get","keyCode","findAdjacentTabIndexClosestToEdge_","scrollIncrement","calculateScrollIncrement_","scrollWidth","findAdjacentTabIndexClosestToEdgeRTL_","calculateScrollIncrementRTL_","script","ANIMATING","SCROLL_TEST","SCROLL_AREA_SCROLL","AREA_SELECTOR","MDCTabScrollerAdapter","evtTarget","selector","propName","propertyName","scrollLeft","MDCTabScrollerRTL","translateX","MDCTabScrollerRTLDefault","currentScrollLeft","getScrollAreaScrollLeft","calculateScrollEdges_","right","round","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","left","MDCTabScrollerRTLNegative","MDCTabScrollerRTLReverse","MDCTabScrollerFoundation","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","isAnimating_","rtlScrollerInstance_","horizontalScrollbarHeight","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","stopScrollAnimation_","incrementScrollRTL_","incrementScroll_","scrollToRTL_","scrollTo_","rtlScrollerFactory_","transformValue","results","exec","parts","parseFloat","getRTLScroller","getScrollPositionRTL","currentScrollX","safeScrollX","animate_","animation","scrollToRTL","targetScrollX","incrementScrollRTL","requestAnimationFrame","currentScrollPosition","getAnimatingScrollPosition_","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","horizontalScrollbarHeight_","documentObj","shouldCacheResult","createElement","classList","body","appendChild","offsetHeight","clientHeight","removeChild","getMatchesProperty","HTMLElementPrototype","filter","p","pop","MDCTabIndicatorAdapter","FADE","NO_TRANSITION","MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","MDCSlidingTabIndicatorFoundation","currentClientRect","widthDelta","width","xPosition","mdcTab","mdcTabBar","mdcTabScroller","mdcTabIndicator","mdcTabRipple"],"mappings":"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"}