{"version":3,"file":"vue-mdc-adapter.umd.min.js","sources":["../components/base/apply-passive.js","../components/base/base-plugin.js","../components/base/custom-element.js","../components/base/custom-link.js","../components/base/custom-event.js","../components/base/custom-button.js","../components/base/custom-icon.js","../node_modules/@material/ripple/util.js","../components/base/dispatch-event-mixin.js","../components/base/dispatch-focus-mixin.js","../components/base/uniqueid-mixin.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/foundation.js","../node_modules/@material/ripple/index.js","../components/ripple/mdc-ripple-base.js","../node_modules/vue-runtime-helpers/normalize-component.js","../components/ripple/mdc-ripple.vue","../components/ripple/index.js","../components/button/mdc-button-base.vue","../components/button/mdc-button.vue","../components/button/index.js","../components/card/mdc-card.vue","../components/card/mdc-card-primary-action.vue","../components/card/mdc-card-media.vue","../components/card/mdc-card-header.vue","../components/card/mdc-card-title.vue","../components/card/mdc-card-subtitle.vue","../components/card/mdc-card-text.vue","../components/card/mdc-card-actions.vue","../components/card/mdc-card-action-buttons.vue","../components/card/mdc-card-action-button.vue","../components/card/mdc-card-action-icons.vue","../components/card/mdc-card-action-icon.vue","../components/card/index.js","../node_modules/@material/checkbox/constants.js","../node_modules/@material/checkbox/foundation.js","../node_modules/@material/form-field/constants.js","../node_modules/@material/form-field/foundation.js","../node_modules/@material/animation/index.js","../components/checkbox/mdc-checkbox.vue","../components/checkbox/index.js","../node_modules/@material/chips/chip/constants.js","../node_modules/@material/chips/chip/foundation.js","../components/chips/mdc-chip.vue","../node_modules/@material/chips/chip-set/constants.js","../node_modules/@material/chips/chip-set/foundation.js","../components/chips/mdc-chip-set.vue","../components/chips/index.js","../node_modules/@material/dialog/constants.js","../node_modules/@material/dialog/foundation.js","../node_modules/tabbable/index.js","../node_modules/xtend/immutable.js","../node_modules/@material/dialog/node_modules/focus-trap/index.js","../node_modules/@material/dom/ponyfill.js","../node_modules/focus-trap/index.js","../node_modules/@material/dialog/util.js","../components/dialog/mdc-dialog.vue","../components/dialog/index.js","../node_modules/@material/drawer/constants.js","../node_modules/@material/drawer/dismissible/foundation.js","../node_modules/@material/drawer/modal/foundation.js","../node_modules/@material/list/constants.js","../node_modules/@material/list/foundation.js","../components/drawer/mdc-drawer.vue","../components/drawer/mdc-drawer-header.vue","../components/drawer/mdc-drawer-list.vue","../components/drawer/mdc-drawer-item.vue","../components/drawer/mdc-drawer-divider.vue","../components/drawer/index.js","../components/elevation/mdc-elevation.vue","../components/elevation/index.js","../components/fab/mdc-fab.vue","../components/fab/index.js","../node_modules/@material/floating-label/constants.js","../node_modules/@material/floating-label/foundation.js","../components/floating-label/mdc-floating-label.vue","../components/floating-label/index.js","../node_modules/@material/grid-list/constants.js","../node_modules/@material/grid-list/foundation.js","../components/grid-list/mdc-grid-list.vue","../components/grid-list/mdc-grid-tile.vue","../components/grid-list/index.js","../components/icon/mdc-icon.vue","../components/icon/index.js","../node_modules/@material/icon-button/constants.js","../node_modules/@material/icon-button/foundation.js","../components/icon-button/mdc-icon-button.vue","../components/icon-button/mdc-icon-toggle.vue","../components/icon-button/index.js","../components/layout-app/mdc-layout-app.vue","../components/layout-app/index.js","../components/layout-grid/mdc-layout-grid.vue","../components/layout-grid/mdc-layout-cell.vue","../components/layout-grid/mdc-layout-inner-grid.vue","../components/layout-grid/index.js","../node_modules/@material/linear-progress/constants.js","../node_modules/@material/linear-progress/foundation.js","../components/linear-progress/mdc-linear-progress.vue","../components/linear-progress/index.js","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/line-ripple/foundation.js","../components/line-ripple/mdc-line-ripple.vue","../components/line-ripple/index.js","../components/list/mdc-list.vue","../components/list/mdc-list-item.vue","../components/list/mdc-list-divider.vue","../components/list/mdc-list-group.vue","../components/list/mdc-list-group-header.vue","../components/list/mdc-list-group-divider.vue","../components/list/index.js","../components/material-icon/mdc-material-icon.vue","../components/material-icon/index.js","../node_modules/@material/menu/constants.js","../node_modules/@material/menu-surface/constants.js","../node_modules/@material/menu-surface/foundation.js","../node_modules/@material/menu/foundation.js","../components/menu/mdc-menu.vue","../node_modules/@material/menu-surface/util.js","../components/menu/mdc-menu-surface.vue","../components/menu/mdc-menu-item.vue","../components/menu/mdc-menu-divider.vue","../components/menu/mdc-menu-anchor.vue","../components/menu/index.js","../node_modules/@material/notched-outline/constants.js","../node_modules/@material/notched-outline/foundation.js","../components/notched-outline/mdc-notched-outline.vue","../components/notched-outline/index.js","../node_modules/@material/radio/constants.js","../node_modules/@material/radio/foundation.js","../components/radio/mdc-radio.vue","../components/radio/index.js","../node_modules/@material/select/constants.js","../node_modules/@material/select/foundation.js","../components/select/mdc-select.vue","../components/select/index.js","../node_modules/@material/slider/constants.js","../node_modules/@material/slider/foundation.js","../components/slider/mdc-slider.vue","../components/slider/index.js","../node_modules/@material/snackbar/constants.js","../node_modules/@material/snackbar/foundation.js","../components/snackbar/mdc-snackbar.vue","../components/snackbar/index.js","../node_modules/@material/switch/constants.js","../node_modules/@material/switch/foundation.js","../components/switch/mdc-switch.vue","../components/switch/index.js","../node_modules/@material/tab/constants.js","../node_modules/@material/tab/foundation.js","../components/tabs/mdc-tab.vue","../node_modules/@material/tab-bar/constants.js","../node_modules/@material/tab-bar/foundation.js","../components/tabs/mdc-tab-bar.vue","../node_modules/@material/tab-scroller/util.js","../node_modules/@material/tab-scroller/constants.js","../node_modules/@material/tab-scroller/rtl-scroller.js","../node_modules/@material/tab-scroller/rtl-default-scroller.js","../node_modules/@material/tab-scroller/rtl-negative-scroller.js","../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","../node_modules/@material/tab-scroller/foundation.js","../components/tabs/mdc-tab-scroller.vue","../node_modules/@material/tab-indicator/constants.js","../node_modules/@material/tab-indicator/foundation.js","../node_modules/@material/tab-indicator/sliding-foundation.js","../components/tabs/mdc-tab-indicator.vue","../components/tabs/mdc-tab-ripple.vue","../components/tabs/index.js","../node_modules/@material/textfield/helper-text/constants.js","../node_modules/@material/textfield/helper-text/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/foundation.js","../components/textfield/mdc-textfield.vue","../components/textfield/index.js","../components/theme/mdc-theme.vue","../components/theme/index.js","../node_modules/@material/toolbar/constants.js","../node_modules/@material/toolbar/foundation.js","../components/toolbar/mdc-toolbar.vue","../components/toolbar/mdc-toolbar-row.vue","../components/toolbar/mdc-toolbar-section.vue","../components/toolbar/mdc-toolbar-menu-icon.vue","../components/toolbar/mdc-toolbar-title.vue","../components/toolbar/mdc-toolbar-icon.vue","../components/toolbar/index.js","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/standard/foundation.js","../node_modules/@material/top-app-bar/short/foundation.js","../node_modules/@material/top-app-bar/fixed/foundation.js","../components/top-app-bar/mdc-top-app-bar.vue","../components/top-app-bar/mdc-top-app-bar-action.vue","../components/top-app-bar/index.js","../components/typography/mdc-typography.js","../components/typography/index.js","../components/index.js","../components/base/auto-init.js","../components/entry.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const CustomButton = {\n  name: 'custom-button',\n  functional: true,\n  props: {\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      data.attrs.role = 'button'\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else if (data.attrs && data.attrs.href) {\n      // href case\n      element = 'a'\n      data.attrs.role = 'button'\n    } else {\n      // button fallback\n      element = 'button'\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomButtonMixin = {\n  props: {\n    href: String,\n    disabled: Boolean,\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomButton\n  }\n}\n","export function extractIconProp(iconProp) {\n  if (typeof iconProp === 'string') {\n    return {\n      classes: { 'material-icons': true },\n      content: iconProp\n    }\n  } else if (iconProp instanceof Array) {\n    return {\n      classes: iconProp.reduce(\n        (result, value) => Object.assign(result, { [value]: true }),\n        {}\n      )\n    }\n  } else if (typeof iconProp === 'object') {\n    return {\n      classes: iconProp.className\n        .split(' ')\n        .reduce(\n          (result, value) => Object.assign(result, { [value]: true }),\n          {}\n        ),\n      content: iconProp.textContent\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","export const DispatchFocusMixin = {\n  data() {\n    return { hasFocus: false }\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp() {\n      this._active = false\n    },\n    onFocusEvent() {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    onBlurEvent() {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus =\n        this.$el === document.activeElement ||\n        this.$el.contains(document.activeElement)\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted() {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","import { MDCRippleFoundation } from '@material/ripple/index'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :classes=\"classes\"\n    :styles=\"styles\" \n    class=\"mdc-ripple\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport { CustomElementMixin } from '../base'\nimport { RippleMixin } from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins: [CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcRipple from './mdc-ripple.vue'\n\nexport * from './mdc-ripple-base.js'\n\nexport { mdcRipple }\n\nexport default BasePlugin({\n  mdcRipple\n})\n","<template>\n  <custom-button\n    ref=\"root\"\n    :class=\"classes\"\n    :style=\"styles\"\n    :href=\"href\"\n    :link=\"link\"\n    :disabled=\"disabled\"\n    v-on=\"listeners\"\n  >\n    <span class=\"mdc-button__label\"> <slot /> </span>\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-button-base',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  }\n}\n</script>\n","<script>\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport default {\n  name: 'mdc-button',\n  extends: mdcButtonBase,\n  props: {\n    raised: Boolean,\n    unelevated: Boolean,\n    outlined: Boolean,\n    dense: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-button': true,\n        'mdc-button--raised': this.raised,\n        'mdc-button--unelevated': this.unelevated,\n        'mdc-button--outlined': this.outlined,\n        'mdc-button--dense': this.dense\n      }\n    }\n  },\n  watch: {\n    raised() {\n      this.$set(this.classes, 'mdc-button--raised', this.raised)\n    },\n    unelevated() {\n      this.$set(this.classes, 'mdc-button--unelevated', this.unelevated)\n    },\n    outlined() {\n      this.$set(this.classes, 'mdc-button--outlined', this.outlined)\n    },\n    dense() {\n      this.$set(this.classes, 'mdc-button--dense', this.dense)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcButton from './mdc-button.vue'\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport { mdcButtonBase, mdcButton }\n\nexport default BasePlugin({\n  mdcButton\n})\n","<template>\n  <div\n    :class=\"{'mdc-card--outlined': outlined}\"\n    class=\"mdc-card\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card',\n  props: {\n    outlined: Boolean\n  }\n}\n</script>\n","<template>\r\n  <custom-link \r\n    :class=\"classes\"\r\n    :style=\"styles\" \n    :link=\"link\" \r\n    class=\"mdc-card-primary-action mdc-card__primary-action\" \r\n    v-on=\"listeners\">\r\n    <slot />\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin, CustomLinkMixin } from '../base'\r\nimport { RippleMixin } from '../ripple/index'\r\nexport default {\r\n  name: 'mdc-card-primary-action',\r\n  mixins: [DispatchEventMixin, CustomLinkMixin, RippleMixin],\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <section \n    :class=\"classes\" \r\n    :style=\"styles\" \n    class=\"mdc-card-media mdc-card__media\">\r\n    <div \n      v-if=\"$slots.default\" \n      class=\"mdc-card__media-content\">\r\n      <slot/>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-media',\r\n  props: {\r\n    src: String,\r\n    square: Boolean\r\n  },\r\n  computed: {\r\n    styles() {\r\n      var styles = {\r\n        backgroundImage: `url(${this.src})`\r\n      }\r\n\r\n      return styles\r\n    },\r\n    classes() {\r\n      return this.square ? 'mdc-card__media--square' : 'mdc-card__media--16-9'\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\n  <section class=\"mdc-card-header mdc-card__primary\">\n    <slot>\n      <h1 \n        v-if=\"title\"\n        :class=\"{'mdc-card__title--large': largeTitle}\"\n        class=\"mdc-card__title\"\n      >\n        {{ title }}\n      </h1>\n      <h2 \n        v-if=\"subtitle\"\n        class=\"mdc-card__subtitle\"\n      >\n        {{ subtitle }} \n      </h2>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-header',\n  props: {\n    title: String,\n    subtitle: String,\n    'large-title': { type: Boolean, default: true }\n  }\n}\n</script>\n","<template>\n  <h1 \n    :class=\"{'mdc-card__title--large': large}\"\n    class=\"mdc-card-title mdc-card__title\">\n    <slot/>\n  </h1>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-title',\n  props: {\n    large: Boolean\n  }\n}\n</script>\n","<template>\n  <h2 class=\"mdc-card-subtitle mdc-card__subtitle\">\n    <slot/>\n  </h2>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'mdc-card-subtitle'\n}\n</script>\n","<template>\n  <section class=\"mdc-card-text mdc-card__supporting-text\">\n    <slot/>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-text'\n}\n</script>\n","<template>\r\n  <section \n    :class=\"classes\" \r\n    class=\"mdc-card-actions mdc-card__actions\">\r\n    <slot/>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-actions',\r\n  props: {\r\n    fullBleed: Boolean\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        'mdc-card__actions--full-bleed': this.fullBleed\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-buttons mdc-card__action-buttons\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-action-buttons'\r\n}\r\n</script>\r\n","<script>\r\nimport { mdcButtonBase } from '../button'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-button',\r\n  extends: mdcButtonBase,\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-button': true,\r\n        'mdc-card__action': true,\r\n        'mdc-card-action-button': true\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-icons mdc-card__action-icons\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-action-icons'\r\n}\r\n</script>\r\n","<template>\r\n  <span \n    :class=\"classes\" \n    :style=\"styles\" \r\n    v-on=\"listeners\">\r\n    <slot>{{ icon }}</slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin } from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-icon',\r\n  mixins: [DispatchEventMixin],\r\n  props: {\r\n    icon: String\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-card-action-icon': true,\r\n        'material-icons': !!this.icon,\r\n        'mdc-card__action': true,\r\n        'mdc-card__action--icon': true,\r\n        'mdc-icon-toggle': true\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n  watch: {\r\n    icon() {\r\n      this.$set(this.classes, 'material-icons', !!this.icon)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this, {\r\n      isUnbounded: () => true\r\n    })\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcCard from './mdc-card.vue'\r\nimport mdcCardPrimaryAction from './mdc-card-primary-action.vue'\r\nimport mdcCardMedia from './mdc-card-media.vue'\r\nimport mdcCardHeader from './mdc-card-header.vue'\r\nimport mdcCardTitle from './mdc-card-title.vue'\r\nimport mdcCardSubtitle from './mdc-card-subtitle.vue'\r\nimport mdcCardText from './mdc-card-text.vue'\r\nimport mdcCardActions from './mdc-card-actions.vue'\r\nimport mdcCardActionButtons from './mdc-card-action-buttons.vue'\r\nimport mdcCardActionButton from './mdc-card-action-button.vue'\r\nimport mdcCardActionIcons from './mdc-card-action-icons.vue'\r\nimport mdcCardActionIcon from './mdc-card-action-icon.vue'\r\n\r\nexport {\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: (/* attr: string, value: string */) => {},\n      removeNativeControlAttr: (/* attr: string */) => {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n      isIndeterminate: () => /* boolean */ {},\n      isChecked: () => /* boolean */ {},\n      hasNativeControl: () => /* boolean */ {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    /** @private {boolean} */\n    this.enableAnimationEndHandler_ = false;\n  }\n\n  /** @override */\n  init() {\n    this.currentCheckState_ = this.determineCheckState_();\n    this.updateAriaChecked_();\n    this.adapter_.addClass(cssClasses.UPGRADED);\n  }\n\n  /** @override */\n  destroy() {\n    clearTimeout(this.animEndLatchTimer_);\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    if (!this.enableAnimationEndHandler_) return;\n\n    clearTimeout(this.animEndLatchTimer_);\n\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.enableAnimationEndHandler_ = false;\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    if (!this.adapter_.hasNativeControl()) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_();\n\n    if (oldState === newState) {\n      return;\n    }\n\n    this.updateAriaChecked_();\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.enableAnimationEndHandler_ = true;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  determineCheckState_() {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (this.adapter_.isIndeterminate()) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return this.adapter_.isChecked() ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  updateAriaChecked_() {\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.adapter_.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      // The on/off state does not need to keep track of aria-checked, since\n      // the screenreader uses the checked property on the checkbox element.\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n  }\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","<template>\n  <div :class=\"formFieldClasses\" class=\"mdc-checkbox-wrapper\">\n    <div ref=\"root\" :class=\"classes\" :style=\"styles\" class=\"mdc-checkbox\">\n      <input\n        ref=\"control\"\n        :id=\"vma_uid_\"\n        :name=\"name\"\n        :value=\"value\"\n        type=\"checkbox\"\n        class=\"mdc-checkbox__native-control\"\n        @change=\"onChange\"\n      />\n      <div class=\"mdc-checkbox__background\">\n        <svg class=\"mdc-checkbox__checkmark\" viewBox=\"0 0 24 24\">\n          <path\n            class=\"mdc-checkbox__checkmark-path\"\n            fill=\"none\"\n            stroke=\"white\"\n            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n          />\n        </svg>\n        <div class=\"mdc-checkbox__mixedmark\" />\n      </div>\n    </div>\n    <label ref=\"label\" :for=\"vma_uid_\"\n      ><slot>{{ label }}</slot></label\n    >\n  </div>\n</template>\n\n<script>\n/* global HTMLElement */\nimport MDCCheckboxFoundation from '@material/checkbox/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport { getCorrectEventName } from '@material/animation/index'\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\nimport { RippleBase } from '../ripple'\nimport { applyPassive } from '../base'\n\nconst CB_PROTO_PROPS = ['checked', 'indeterminate']\n\nexport default {\n  name: 'mdc-checkbox',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    checked: [Boolean, Array],\n    indeterminate: Boolean,\n    disabled: Boolean,\n    label: String,\n    'align-end': Boolean,\n    value: {\n      type: [String, Number],\n      default() {\n        return 'on'\n      }\n    },\n    name: String\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default\n    },\n    formFieldClasses() {\n      return {\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd\n      }\n    }\n  },\n  watch: {\n    checked: 'setChecked',\n    disabled(value) {\n      this.foundation.setDisabled(value)\n    },\n    indeterminate(value) {\n      this.setIndeterminate(value)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCCheckboxFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setNativeControlAttr: (attr, value) => {\n        this.$refs.control.setAttribute(attr, value)\n      },\n      removeNativeControlAttr: attr => {\n        this.$refs.control.removeAttribute(attr)\n      },\n      // getNativeControl: () => this.$refs.control,\n      isIndeterminate: () => this.$refs.control.indeterminate,\n      isChecked: () => this.checked,\n      hasNativeControl: () => !!this.$refs.control,\n      setNativeControlDisabled: disabled =>\n        (this.$refs.control.disabled = disabled),\n      forceLayout: () => this.$refs.root.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.$el.parentNode)\n    })\n\n    this.handleAnimationEnd_ = () => this.foundation.handleAnimationEnd()\n\n    this.$el.addEventListener(\n      getCorrectEventName(window, 'animationend'),\n      this.handleAnimationEnd_\n    )\n\n    this.installPropertyChangeHooks_()\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => RippleBase.isSurfaceActive(this.$refs.control),\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler, applyPassive())\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      }\n    })\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n    this.setChecked(this.checked)\n    this.foundation.setDisabled(this.disabled)\n    this.setIndeterminate(this.indeterminate)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener(\n      getCorrectEventName(window, 'animationend'),\n      this.handleAnimationEnd_\n    )\n\n    this.formField.destroy()\n    this.ripple.destroy()\n\n    this.uninstallPropertyChangeHooks_()\n    this.foundation.destroy()\n  },\n  methods: {\n    setChecked(checked) {\n      this.$refs.control.checked = Array.isArray(checked)\n        ? checked.indexOf(this.value) > -1\n        : checked\n    },\n    setIndeterminate(indeterminate) {\n      this.$refs.control.indeterminate = indeterminate\n    },\n\n    onChange() {\n      this.$emit('update:indeterminate', this.indeterminate)\n      const isChecked = this.$refs.control.checked\n\n      if (Array.isArray(this.checked)) {\n        const idx = this.checked.indexOf(this.value)\n        if (isChecked) {\n          idx < 0 && this.$emit('change', this.checked.concat(this.value))\n        } else {\n          idx > -1 &&\n            this.$emit(\n              'change',\n              this.checked.slice(0, idx).concat(this.checked.slice(idx + 1))\n            )\n        }\n      } else {\n        this.$emit('change', isChecked)\n      }\n    },\n\n    installPropertyChangeHooks_() {\n      const nativeCb = this.$refs.control\n      const cbProto = Object.getPrototypeOf(nativeCb)\n\n      CB_PROTO_PROPS.forEach(controlState => {\n        const desc = Object.getOwnPropertyDescriptor(cbProto, controlState)\n        // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n        // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n        if (validDescriptor(desc)) {\n          const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n            get: desc.get,\n            set: state => {\n              desc.set.call(nativeCb, state)\n              this.foundation.handleChange()\n            },\n            configurable: desc.configurable,\n            enumerable: desc.enumerable\n          })\n          Object.defineProperty(nativeCb, controlState, nativeCbDesc)\n        }\n      })\n    },\n\n    uninstallPropertyChangeHooks_() {\n      const nativeCb = this.$refs.control\n      const cbProto = Object.getPrototypeOf(nativeCb)\n\n      CB_PROTO_PROPS.forEach(controlState => {\n        const desc = /** @type {!ObjectPropertyDescriptor} */ (Object.getOwnPropertyDescriptor(\n          cbProto,\n          controlState\n        ))\n        if (validDescriptor(desc)) {\n          Object.defineProperty(nativeCb, controlState, desc)\n        }\n      })\n    }\n  }\n}\n\n// ===\n// Private functions\n// ===\n\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcCheckbox from './mdc-checkbox.vue'\n\nexport { mdcCheckbox }\n\nexport default BasePlugin({\n  mdcCheckbox\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  SELECTION_EVENT: 'MDCChip:selection',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      notifyInteraction: () => {},\n      notifySelection: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /**\n     * Whether a trailing icon click should immediately trigger exit/removal of the chip.\n     * @private {boolean}\n     * */\n    this.shouldRemoveOnTrailingIconClick_ = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n    this.adapter_.notifySelection(selected);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick_;\n  }\n\n  /**\n   * @param {boolean} shouldRemove\n   */\n  setShouldRemoveOnTrailingIconClick(shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter_.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      if (this.shouldRemoveOnTrailingIconClick_) {\n        this.beginExit();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipInteractionEventType;\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *     selected: boolean,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipSelectionEventType;\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *     root: Element,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipRemovalEventType;\n\nexport {MDCChipFoundation, MDCChipInteractionEventType, MDCChipSelectionEventType, MDCChipRemovalEventType};\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"classes\"\n    :style=\"styles\"\n    tabindex=\"0\"\n    @click=\"handleInteraction\"\n    @keydown=\"handleInteraction\"\n    @transitionend=\"handleTransitionEnd\"\n  >\n    <i\n      v-if=\"haveleadingIcon\"\n      ref=\"leadingIcon\"\n      :class=\"leadingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--leading\"\n      >{{ leadingIcon }}</i\n    >\n    <div v-if=\"isFilter\" class=\"mdc-chip__checkmark\">\n      <svg class=\"mdc-chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n        <path\n          class=\"mdc-chip__checkmark-path\"\n          fill=\"none\"\n          stroke=\"black\"\n          d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n        />\n      </svg>\n    </div>\n    <div class=\"mdc-chip__text\"><slot /></div>\n    <i\n      v-if=\"havetrailingIcon\"\n      ref=\"trailingIcon\"\n      :class=\"trailingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--trailing\"\n      tabindex=\"0\"\n      role=\"button\"\n      @click=\"handleTrailingIconInteraction\"\n      @keydown=\"handleTrailingIconInteraction\"\n      >{{ trailingIcon }}</i\n    >\n  </div>\n</template>\napplyPassive\n<script>\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\nimport { CustomLinkMixin, emitCustomEvent } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true\n      },\n      styles: {},\n      id: ''\n    }\n  },\n  computed: {\n    selected: {\n      get() {\n        return this.foundation.isSelected()\n      },\n      set(nv) {\n        this.foundation.setSelected(nv)\n      }\n    },\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      )\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      )\n    }\n  },\n\n  created() {\n    this.id = this.mdcChipSet.nextId()\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className)\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className)\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chipId: this.id\n          },\n          true\n        )\n        this.mdcChipSet && this.mdcChipSet.handleInteraction\n      },\n\n      notifySelection: selected =>\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.SELECTION_EVENT,\n          { chipId: this.id, selected: selected },\n          true /* shouldBubble */\n        ),\n      notifyTrailingIconInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chipId: this.id\n          },\n          true\n        )\n      },\n      notifyRemoval: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.REMOVAL_EVENT,\n          { chipId: this.id, root: this.$el },\n          true\n        )\n      },\n      getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this.$el).getPropertyValue(propertyName),\n      setStyleProperty: (property, value) =>\n        this.$set(this.styles, property, value)\n    })\n\n    this.foundation.init()\n\n    this.mdcChipSet.chips.push(this)\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    handleInteraction(evt) {\n      this.foundation.handleInteraction(evt)\n    },\n    handleTransitionEnd(evt) {\n      this.foundation.handleTransitionEnd(evt)\n    },\n    handleTrailingIconInteraction(evt) {\n      this.foundation.handleTrailingIconInteraction(evt)\n    },\n    toggleSelected() {\n      this.foundation.toggleSelected()\n    },\n    isSelected() {\n      return this.foundation.isSelected()\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipInteractionEventType, MDCChipSelectionEventType, MDCChipRemovalEventType} from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      removeChip: () => {},\n      setSelected: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<string>}\n     */\n    this.selectedChipIds_ = [];\n  }\n\n  /**\n   * Returns an array of the IDs of all selected chips.\n   * @return {!Array<string>}\n   */\n  getSelectedChipIds() {\n    return this.selectedChipIds_;\n  }\n\n  /**\n   * Toggles selection of the chip with the given id.\n   * @private\n   * @param {string} chipId\n   */\n  toggleSelect_(chipId) {\n    if (this.selectedChipIds_.indexOf(chipId) >= 0) {\n      this.deselect_(chipId);\n    } else {\n      this.select(chipId);\n    }\n  }\n\n  /**\n   * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.\n   * @param {string} chipId\n   */\n  select(chipId) {\n    if (this.selectedChipIds_.indexOf(chipId) >= 0) {\n      return;\n    }\n\n    if (this.adapter_.hasClass(cssClasses.CHOICE) && this.selectedChipIds_.length > 0) {\n      const previouslySelectedChip = this.selectedChipIds_[0];\n      this.selectedChipIds_.length = 0;\n      this.adapter_.setSelected(previouslySelectedChip, false);\n    }\n    this.selectedChipIds_.push(chipId);\n    this.adapter_.setSelected(chipId, true);\n  }\n\n  /**\n   * Deselects the chip with the given id.\n   * @private\n   * @param {string} chipId\n   */\n  deselect_(chipId) {\n    const index = this.selectedChipIds_.indexOf(chipId);\n    if (index >= 0) {\n      this.selectedChipIds_.splice(index, 1);\n      this.adapter_.setSelected(chipId, false);\n    }\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {string} chipId\n   */\n  handleChipInteraction(chipId) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      this.toggleSelect_(chipId);\n    }\n  }\n\n  /**\n   * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.\n   * @param {string} chipId\n   * @param {boolean} selected\n   */\n  handleChipSelection(chipId, selected) {\n    const chipIsSelected = this.selectedChipIds_.indexOf(chipId) >= 0;\n    if (selected && !chipIsSelected) {\n      this.select(chipId);\n    } else if (!selected && chipIsSelected) {\n      this.deselect_(chipId);\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {string} chipId\n   */\n  handleChipRemoval(chipId) {\n    this.deselect_(chipId);\n    this.adapter_.removeChip(chipId);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation'\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\n\nlet idCounter = 0\n\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n    input: [Boolean]\n  },\n  provide() {\n    return { mdcChipSet: this }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n        'mdc-chip-set--input': this.input\n      },\n\n      chips: []\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      removeChip: chipId => {\n        const index = this.findChipIndex(chipId)\n\n        if (index > 0) {\n          this.$nextTick(() => {\n            this.chips.splice(index, 1)\n          })\n        }\n      },\n      setSelected: (chipId, selected) => {\n        const index = this.findChipIndex(chipId)\n        if (index >= 0) {\n          this.chips[index].selected = selected\n        }\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    nextId() {\n      return `mdc-chip-${++idCounter}`\n    },\n    findChipIndex(chipId) {\n      for (let i = 0; i < this.chips.length; i++) {\n        if (this.chips[i].id === chipId) {\n          return i\n        }\n      }\n      return -1\n    },\n    handleChipInteraction(evt) {\n      this.foundation.handleChipInteraction(evt.detail.chipId)\n    },\n    handleChipRemoval(evt) {\n      this.foundation.handleChipRemoval(evt.detail.chipId)\n    },\n    handleChipSelection(evt) {\n      this.foundation.handleChipSelection(\n        evt.detail.chipId,\n        evt.detail.selected\n      )\n    }\n  },\n  render(h) {\n    return h(\n      'div',\n      {\n        class: this.classes,\n        on: {\n          [MDCChipFoundation.strings.INTERACTION_EVENT]: evt =>\n            this.handleChipInteraction(evt),\n          [MDCChipFoundation.strings.SELECTION_EVENT]: evt =>\n            this.handleChipSelection(evt),\n          [MDCChipFoundation.strings.REMOVAL_EVENT]: evt =>\n            this.handleChipRemoval(evt)\n        }\n      },\n      this.$slots.default\n    )\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { mdcChip, mdcChipSet }\n\nexport default BasePlugin({\n  mdcChip,\n  mdcChipSet\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  OPEN: 'mdc-dialog--open',\n  OPENING: 'mdc-dialog--opening',\n  CLOSING: 'mdc-dialog--closing',\n  SCROLLABLE: 'mdc-dialog--scrollable',\n  STACKED: 'mdc-dialog--stacked',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n};\n\nconst strings = {\n  SCRIM_SELECTOR: '.mdc-dialog__scrim',\n  CONTAINER_SELECTOR: '.mdc-dialog__container',\n  SURFACE_SELECTOR: '.mdc-dialog__surface',\n  CONTENT_SELECTOR: '.mdc-dialog__content',\n  BUTTON_SELECTOR: '.mdc-dialog__button',\n  DEFAULT_BUTTON_SELECTOR: '.mdc-dialog__button--default',\n  SUPPRESS_DEFAULT_PRESS_SELECTOR: [\n    'textarea',\n    '.mdc-menu .mdc-list-item',\n  ].join(', '),\n\n  OPENING_EVENT: 'MDCDialog:opening',\n  OPENED_EVENT: 'MDCDialog:opened',\n  CLOSING_EVENT: 'MDCDialog:closing',\n  CLOSED_EVENT: 'MDCDialog:closed',\n\n  ACTION_ATTRIBUTE: 'data-mdc-dialog-action',\n\n  CLOSE_ACTION: 'close',\n  DESTROY_ACTION: 'destroy',\n};\n\nconst numbers = {\n  DIALOG_ANIMATION_OPEN_TIME_MS: 150,\n  DIALOG_ANIMATION_CLOSE_TIME_MS: 75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCDialogAdapter from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\n\nclass MDCDialogFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return /** @type {!MDCDialogAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      eventTargetMatches: (/* target: !EventTarget, selector: string */) => {},\n      trapFocus: () => {},\n      releaseFocus: () => {},\n      isContentScrollable: () => {},\n      areButtonsStacked: () => {},\n      getActionFromEvent: (/* event: !Event */) => {},\n      clickDefaultButton: () => {},\n      reverseButtons: () => {},\n      notifyOpening: () => {},\n      notifyOpened: () => {},\n      notifyClosing: (/* action: ?string */) => {},\n      notifyClosed: (/* action: ?string */) => {},\n    });\n  }\n\n  /**\n   * @param {!MDCDialogAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {string} */\n    this.escapeKeyAction_ = strings.CLOSE_ACTION;\n\n    /** @private {string} */\n    this.scrimClickAction_ = strings.CLOSE_ACTION;\n\n    /** @private {boolean} */\n    this.autoStackButtons_ = true;\n\n    /** @private {boolean} */\n    this.areButtonsStacked_ = false;\n  };\n\n  init() {\n    if (this.adapter_.hasClass(cssClasses.STACKED)) {\n      this.setAutoStackButtons(false);\n    }\n  };\n\n  destroy() {\n    if (this.isOpen_) {\n      this.close(strings.DESTROY_ACTION);\n    }\n\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n      this.handleAnimationTimerEnd_();\n    }\n\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n      this.layoutFrame_ = 0;\n    }\n  }\n\n  open() {\n    this.isOpen_ = true;\n    this.adapter_.notifyOpening();\n    this.adapter_.addClass(cssClasses.OPENING);\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(cssClasses.OPEN);\n      this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n\n      this.layout();\n\n      this.animationTimer_ = setTimeout(() => {\n        this.handleAnimationTimerEnd_();\n        this.adapter_.trapFocus();\n        this.adapter_.notifyOpened();\n      }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n    });\n  }\n\n  /**\n   * @param {string=} action\n   */\n  close(action = '') {\n    if (!this.isOpen_) {\n      // Avoid redundant close calls (and events), e.g. from keydown on elements that inherently emit click\n      return;\n    }\n\n    this.isOpen_ = false;\n    this.adapter_.notifyClosing(action);\n    this.adapter_.addClass(cssClasses.CLOSING);\n    this.adapter_.removeClass(cssClasses.OPEN);\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = setTimeout(() => {\n      this.adapter_.releaseFocus();\n      this.handleAnimationTimerEnd_();\n      this.adapter_.notifyClosed(action);\n    }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {string} */\n  getEscapeKeyAction() {\n    return this.escapeKeyAction_;\n  }\n\n  /** @param {string} action */\n  setEscapeKeyAction(action) {\n    this.escapeKeyAction_ = action;\n  }\n\n  /** @return {string} */\n  getScrimClickAction() {\n    return this.scrimClickAction_;\n  }\n\n  /** @param {string} action */\n  setScrimClickAction(action) {\n    this.scrimClickAction_ = action;\n  }\n\n  /** @return {boolean} */\n  getAutoStackButtons() {\n    return this.autoStackButtons_;\n  }\n\n  /** @param {boolean} autoStack */\n  setAutoStackButtons(autoStack) {\n    this.autoStackButtons_ = autoStack;\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  layoutInternal_() {\n    if (this.autoStackButtons_) {\n      this.detectStackedButtons_();\n    }\n    this.detectScrollableContent_();\n  }\n\n  /** @private */\n  detectStackedButtons_() {\n    // Remove the class first to let us measure the buttons' natural positions.\n    this.adapter_.removeClass(cssClasses.STACKED);\n\n    const areButtonsStacked = this.adapter_.areButtonsStacked();\n\n    if (areButtonsStacked) {\n      this.adapter_.addClass(cssClasses.STACKED);\n    }\n\n    if (areButtonsStacked !== this.areButtonsStacked_) {\n      this.adapter_.reverseButtons();\n      this.areButtonsStacked_ = areButtonsStacked;\n    }\n  }\n\n  /** @private */\n  detectScrollableContent_() {\n    // Remove the class first to let us measure the natural height of the content.\n    this.adapter_.removeClass(cssClasses.SCROLLABLE);\n    if (this.adapter_.isContentScrollable()) {\n      this.adapter_.addClass(cssClasses.SCROLLABLE);\n    }\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handleInteraction(evt) {\n    const isClick = evt.type === 'click';\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n\n    // Check for scrim click first since it doesn't require querying ancestors\n    if (isClick && this.adapter_.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR) &&\n      this.scrimClickAction_ !== '') {\n      this.close(this.scrimClickAction_);\n    } else if (isClick || evt.key === 'Space' || evt.keyCode === 32 || isEnter) {\n      const action = this.adapter_.getActionFromEvent(evt);\n      if (action) {\n        this.close(action);\n      } else if (isEnter && !this.adapter_.eventTargetMatches(evt.target, strings.SUPPRESS_DEFAULT_PRESS_SELECTOR)) {\n        this.adapter_.clickDefaultButton();\n      }\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} evt\n   * @private\n   */\n  handleDocumentKeydown(evt) {\n    if ((evt.key === 'Escape' || evt.keyCode === 27) && this.escapeKeyAction_ !== '') {\n      this.close(this.escapeKeyAction_);\n    }\n  }\n\n  /** @private */\n  handleAnimationTimerEnd_() {\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(cssClasses.OPENING);\n    this.adapter_.removeClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCDialogFoundation;\n","var candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\nvar candidateSelector = candidateSelectors.join(',');\n\nvar matches = typeof Element === 'undefined'\n  ? function () {}\n  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nfunction tabbable(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var regularTabbables = [];\n  var orderedTabbables = [];\n\n  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);\n  var candidates = el.querySelectorAll(candidateSelector);\n\n  if (options.includeContainer) {\n    if (matches.call(el, candidateSelector)) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var i, candidate, candidateTabindex;\n  for (i = 0; i < candidates.length; i++) {\n    candidate = candidates[i];\n\n    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;\n\n    candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map(function(a) { return a.node })\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n}\n\ntabbable.isTabbable = isTabbable;\ntabbable.isFocusable = isFocusable;\n\nfunction isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {\n  if (\n    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)\n    || isNonTabbableRadio(node)\n    || getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isTabbable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, candidateSelector) === false) return false;\n  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);\n}\n\nfunction isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {\n  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);\n  if (\n    node.disabled\n    || isHiddenInput(node)\n    || untouchabilityChecker.isUntouchable(node)\n  ) {\n    return false;\n  }\n  return true;\n}\n\nvar focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');\nfunction isFocusable(node, untouchabilityChecker) {\n  if (!node) throw new Error('No node provided');\n  if (matches.call(node, focusableCandidateSelector) === false) return false;\n  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);\n}\n\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n}\n\n// Array.prototype.find not available in IE.\nfunction find(list, predicate) {\n  for (var i = 0, length = list.length; i < length; i++) {\n    if (predicate(list[i])) return list[i];\n  }\n}\n\nfunction isContentEditable(node) {\n  return node.contentEditable === 'true';\n}\n\nfunction isInput(node) {\n  return node.tagName === 'INPUT';\n}\n\nfunction isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n}\n\nfunction isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n}\n\nfunction isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n}\n\nfunction getCheckedRadio(nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isTabbableRadio(node) {\n  if (!node.name) return true;\n  // This won't account for the edge case where you have radio groups with the same\n  // in separate forms on the same page.\n  var radioSet = node.ownerDocument.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet);\n  return !checked || checked === node;\n}\n\n// An element is \"untouchable\" if *it or one of its ancestors* has\n// `visibility: hidden` or `display: none`.\nfunction UntouchabilityChecker(elementDocument) {\n  this.doc = elementDocument;\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed. The cache contains tuples\n  // mapping nodes to their boolean result.\n  this.cache = [];\n}\n\n// getComputedStyle accurately reflects `visibility: hidden` of ancestors\n// but not `display: none`, so we need to recursively check parents.\nUntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {\n  if (node.nodeType !== Node.ELEMENT_NODE) return false;\n\n    // Search for a cached result.\n    var cached = find(this.cache, function(item) {\n      return item === node;\n    });\n    if (cached) return cached[1];\n\n    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = this.hasDisplayNone(node.parentNode);\n    }\n\n    this.cache.push([node, result]);\n\n    return result;\n}\n\nUntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {\n  if (node === this.doc.documentElement) return false;\n  var computedStyle = this.doc.defaultView.getComputedStyle(node);\n  if (this.hasDisplayNone(node, computedStyle)) return true;\n  return computedStyle.visibility === 'hidden';\n}\n\nmodule.exports = tabbable;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element}\n */\nfunction closest(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\n/**\n * @param {!Element} element\n * @param {string} selector\n * @return {boolean}\n */\nfunction matches(element, selector) {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport {closest, matches};\n","var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport createFocusTrap from 'focus-trap';\n\n/**\n * @param {!Element} surfaceEl\n * @param {?Element=} initialFocusEl\n * @param {function(!Element, !FocusTrapCreateOptions): !FocusTrapInstance} focusTrapFactory\n * @return {!FocusTrapInstance}\n */\nfunction createFocusTrapInstance(surfaceEl, focusTrapFactory = createFocusTrap, initialFocusEl = null) {\n  return focusTrapFactory(surfaceEl, {\n    initialFocus: initialFocusEl,\n    escapeDeactivates: false, // Dialog foundation handles escape key\n    clickOutsideDeactivates: true, // Allow handling of scrim clicks\n  });\n}\n\n/**\n * @param {!Element} el\n * @return {boolean}\n */\nfunction isScrollable(el) {\n  return el.scrollHeight > el.offsetHeight;\n}\n\n/**\n * @param {!Array<!Element>|!NodeList} els\n * @return {boolean}\n */\nfunction areTopsMisaligned(els) {\n  const tops = new Set();\n  [].forEach.call(els, (el) => tops.add(el.offsetTop));\n  return tops.size > 1;\n}\n\nexport {createFocusTrapInstance, isScrollable, areTopsMisaligned};\n","<template>\n  <div\n    ref=\"root\"\n    :class=\"classes\"\n    :style=\"styles\"\n    aria-modal=\"true\"\n    :aria-labelledby=\"'label' + vma_uid_\"\n    :aria-describedby=\"'desc' + vma_uid_\"\n    class=\"mdc-dialog\"\n    role=\"alertdialog\"\n    @click=\"onClick\"\n    @keydown=\"onClick\"\n  >\n    <div ref=\"container\" class=\"mdc-dialog__container\">\n      <div ref=\"surface\" :class=\"surfaceClasses\" class=\"mdc-dialog__surface\">\n        <h2 v-if=\"title\" class=\"mdc-dialog__title\" :id=\"'label' + vma_uid_\">\n          <!--\n          -->{{ title\n          }}<!---->\n        </h2>\n        <div ref=\"content\" class=\"mdc-dialog__content\" :id=\"'desc' + vma_uid_\">\n          <slot />\n        </div>\n        <footer v-if=\"accept || cancel\" class=\"mdc-dialog__actions\">\n          <button\n            type=\"button\"\n            v-if=\"cancel\"\n            class=\"mdc-button mdc-dialog__button\"\n            data-mdc-dialog-action=\"no\"\n          >\n            {{ cancel }}\n          </button>\n          <button\n            type=\"button\"\n            ref=\"defaultButton\"\n            :disabled=\"acceptDisabled\"\n            class=\"mdc-button mdc-dialog__button \"\n            data-mdc-dialog-action=\"yes\"\n          >\n            {{ accept }}\n          </button>\n        </footer>\n      </div>\n    </div>\n    <div class=\"mdc-dialog__scrim\" />\n  </div>\n</template>\n\n<script>\nimport MDCDialogFoundation from '@material/dialog/foundation'\nimport * as util from '@material/dialog/util'\nimport { mdcButton } from '../button'\nimport { VMAUniqueIdMixin } from '../base'\nimport { closest, matches } from '@material/dom/ponyfill'\nimport createFocusTrap from 'focus-trap'\nconst strings = MDCDialogFoundation.strings\n\nexport default {\n  name: 'mdc-dialog',\n  components: {\n    mdcButton: mdcButton\n  },\n  mixins: [VMAUniqueIdMixin],\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    title: {\n      type: String\n    },\n    accept: {\n      type: String,\n      default: 'Ok'\n    },\n    acceptDisabled: Boolean,\n    acceptRaised: {\n      type: Boolean,\n      default: false\n    },\n    cancel: {\n      type: String\n    },\n    cancelRaised: {\n      type: Boolean,\n      default: false\n    },\n    accent: Boolean,\n    scrollable: Boolean,\n    open: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-theme--dark': this.dark\n      },\n      styles: {},\n      surfaceClasses: {},\n      bodyClasses: {\n        'mdc-dialog__body--scrollable': this.scrollable\n      }\n    }\n  },\n  watch: {\n    open: 'onOpen_'\n  },\n  mounted() {\n    if (this.accept) {\n      this.focusTrap = util.createFocusTrapInstance(\n        this.$refs.container,\n        createFocusTrap\n      )\n    }\n\n    this.buttons_ = [].slice.call(\n      this.$el.querySelectorAll(strings.BUTTON_SELECTOR)\n    )\n\n    this.foundation = new MDCDialogFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addBodyClass: className => document.body.classList.add(className),\n      removeBodyClass: className => document.body.classList.remove(className),\n      eventTargetMatches: (target, selector) => matches(target, selector),\n      trapFocus: () => this.focusTrap && this.focusTrap.activate(),\n      releaseFocus: () => this.focusTrap && this.focusTrap.deactivate(),\n      isContentScrollable: () =>\n        !!this.$refs.content && util.isScrollable(this.$refs.content),\n      areButtonsStacked: () => util.areTopsMisaligned(this.buttons_),\n\n      getActionFromEvent: event => {\n        const element = closest(event.target, `[${strings.ACTION_ATTRIBUTE}]`)\n        return element && element.getAttribute(strings.ACTION_ATTRIBUTE)\n      },\n      clickDefaultButton: () => {\n        if (this.$refs.defaultButton) {\n          this.$refs.defaultButton.click()\n        }\n      },\n      reverseButtons: () => {\n        this.buttons_.reverse()\n        this.buttons_.forEach(button =>\n          button.parentElement.appendChild(button)\n        )\n      },\n      notifyOpening: () => this.$emit(strings.OPENING_EVENT, {}),\n      notifyOpened: () => this.$emit(strings.OPENED_EVENT, {}),\n      notifyClosing: action => {\n        this.$emit('change', false)\n        // console.log(action)\n        this.$emit(strings.CLOSING_EVENT, action ? { action } : {})\n      },\n      notifyClosed: action =>\n        this.$emit(strings.CLOSED_EVENT, action ? { action } : {})\n    })\n\n    this.foundation.init()\n    this.open && this.foundation.open()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    onOpen_(value) {\n      if (value) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n\n    onClick(event) {\n      this.foundation.handleInteraction(event)\n    },\n    onCancel() {\n      if (this.$listeners['validateCancel']) {\n        this.$emit('validateCancel', {\n          cancel: (notify = true) => {\n            // if notify = false, the dialog will close\n            // but the notifyAccept method will not be called\n            // so we need to notify listeners the open state\n            // is changing.\n            if (!notify) {\n              this.$emit('change', false)\n            }\n            this.foundation.cancel(notify)\n          }\n        })\n      } else {\n        this.foundation.cancel(true)\n      }\n    },\n    onAccept() {\n      if (this.$listeners['validate']) {\n        this.$emit('validate', {\n          accept: (notify = true) => {\n            // if notify = false, the dialog will close\n            // but the notifyAccept method will not be called\n            // so we need to notify listeners the open state\n            // is changing.\n            if (!notify) {\n              this.$emit('change', false)\n            }\n            this.foundation.accept(notify)\n          }\n        })\n      } else {\n        this.foundation.accept(true)\n      }\n    },\n    show() {\n      this.foundation.open()\n    },\n    close() {\n      this.foundation.close()\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcDialog from './mdc-dialog.vue'\n\nexport { mdcDialog }\n\nexport default BasePlugin({\n  mdcDialog\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-drawer',\n  DISMISSIBLE: 'mdc-drawer--dismissible',\n  MODAL: 'mdc-drawer--modal',\n  OPEN: 'mdc-drawer--open',\n  ANIMATE: 'mdc-drawer--animate',\n  OPENING: 'mdc-drawer--opening',\n  CLOSING: 'mdc-drawer--closing',\n};\n\n/** @enum {string} */\nconst strings = {\n  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n  SCRIM_SELECTOR: '.mdc-drawer-scrim',\n  CLOSE_EVENT: 'MDCDrawer:closed',\n  OPEN_EVENT: 'MDCDrawer:opened',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from '../constants';\n\n/**\n * @extends {MDCFoundation<!MDCDrawerAdapter>}\n */\nclass MDCDismissibleDrawerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get defaultAdapter() {\n    return /** @type {!MDCDrawerAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      elementHasClass: (/* element: !Element, className: string */) => {},\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      focusActiveNavigationItem: () => {},\n      trapFocus: () => {},\n      releaseFocus: () => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDismissibleDrawerFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n  }\n\n  destroy() {\n    if (this.animationFrame_) {\n      cancelAnimationFrame(this.animationFrame_);\n    }\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n    }\n  }\n\n  /**\n   * Function to open the drawer.\n   */\n  open() {\n    if (this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.OPEN);\n    this.adapter_.addClass(cssClasses.ANIMATE);\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(cssClasses.OPENING);\n    });\n\n    this.adapter_.saveFocus();\n  }\n\n  /**\n   * Function to close the drawer.\n   */\n  close() {\n    if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n      return;\n    }\n\n    this.adapter_.addClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Extension point for when drawer finishes open animation.\n   * @protected\n   */\n  opened() {}\n\n  /**\n   * Extension point for when drawer finishes close animation.\n   * @protected\n   */\n  closed() {}\n\n  /**\n   * Returns true if drawer is in open state.\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.adapter_.hasClass(cssClasses.OPEN);\n  }\n\n  /**\n   * Returns true if drawer is animating open.\n   * @return {boolean}\n   */\n  isOpening() {\n    return this.adapter_.hasClass(cssClasses.OPENING) || this.adapter_.hasClass(cssClasses.ANIMATE);\n  }\n\n  /**\n   * Returns true if drawer is animating closed.\n   * @return {boolean}\n   */\n  isClosing() {\n    return this.adapter_.hasClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Keydown handler to close drawer when key is escape.\n   * @param evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    if (isEscape) {\n      this.close();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    const {OPENING, CLOSING, OPEN, ANIMATE, ROOT} = cssClasses;\n\n    // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n    const isElement = evt.target instanceof Element;\n    if (!isElement || !this.adapter_.elementHasClass(/** @type {!Element} */ (evt.target), ROOT)) {\n      return;\n    }\n\n    if (this.isClosing()) {\n      this.adapter_.removeClass(OPEN);\n      this.adapter_.restoreFocus();\n      this.closed();\n      this.adapter_.notifyClose();\n    } else {\n      this.adapter_.focusActiveNavigationItem();\n      this.opened();\n      this.adapter_.notifyOpen();\n    }\n\n    this.adapter_.removeClass(ANIMATE);\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCDismissibleDrawerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCDrawerAdapter from '../adapter';\nimport MDCDismissibleDrawerFoundation from '../dismissible/foundation';\n\n/**\n * @extends {MDCDismissibleDrawerFoundation}\n */\nclass MDCModalDrawerFoundation extends MDCDismissibleDrawerFoundation {\n  /**\n   * Called when drawer finishes open animation.\n   * @override\n   */\n  opened() {\n    this.adapter_.trapFocus();\n  }\n\n  /**\n   * Called when drawer finishes close animation.\n   * @override\n   */\n  closed() {\n    this.adapter_.releaseFocus();\n  }\n\n  /**\n   * Handles click event on scrim.\n   */\n  handleScrimClick() {\n    this.close();\n  }\n}\n\nexport default MDCModalDrawerFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-list',\n  LIST_ITEM_CLASS: 'mdc-list-item',\n  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_ORIENTATION: 'aria-orientation',\n  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_CHECKED: 'aria-checked',\n  ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n  ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n  ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n  RADIO_SELECTOR: 'input[type=\"radio\"]:not(:disabled)',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled)',\n  CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"]:not(:disabled), input[type=\"radio\"]:not(:disabled)',\n  CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} a`,\n  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a,\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"radio\"]:not(:disabled),\n  .${cssClasses.LIST_ITEM_CLASS} input[type=\"checkbox\"]:not(:disabled)`,\n  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)',\n};\n\n/** @typedef {number|!Array<number>} */\nlet Index;\n\nexport {strings, cssClasses, Index};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCListAdapter from './adapter';\nimport {strings, cssClasses, Index} from './constants'; // eslint-disable-line no-unused-vars\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nclass MDCListFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCListAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCListAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCListAdapter} */ ({\n      getListItemCount: () => {},\n      getFocusedElementIndex: () => {},\n      setAttributeForElementIndex: () => {},\n      removeAttributeForElementIndex: () => {},\n      addClassForElementIndex: () => {},\n      removeClassForElementIndex: () => {},\n      focusItemAtIndex: () => {},\n      setTabIndexForListItemChildren: () => {},\n      followHref: () => {},\n      hasRadioAtIndex: () => {},\n      hasCheckboxAtIndex: () => {},\n      isCheckboxCheckedAtIndex: () => {},\n      setCheckedCheckboxOrRadioAtIndex: () => {},\n      isFocusInsideList: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCListAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));\n    /** @private {boolean} */\n    this.wrapFocus_ = false;\n\n    /** @private {boolean} */\n    this.isVertical_ = true;\n\n    /** @private {boolean} */\n    this.isSingleSelectionList_ = false;\n\n    /** @private {!Index} */\n    this.selectedIndex_ = -1;\n\n    /** @private {number} */\n    this.focusedItemIndex_ = -1;\n\n    /** @private {boolean} */\n    this.useActivatedClass_ = false;\n\n    /** @private {boolean} */\n    this.isCheckboxList_ = false;\n\n    /** @private {boolean} */\n    this.isRadioList_ = false;\n  }\n\n  layout() {\n    if (this.adapter_.getListItemCount() === 0) return;\n\n    if (this.adapter_.hasCheckboxAtIndex(0)) {\n      this.isCheckboxList_ = true;\n    } else if (this.adapter_.hasRadioAtIndex(0)) {\n      this.isRadioList_ = true;\n    }\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n  setWrapFocus(value) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   * @param {boolean} value\n   */\n  setVerticalOrientation(value) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the isSingleSelectionList_ private variable.\n   * @param {boolean} value\n   */\n  setSingleSelection(value) {\n    this.isSingleSelectionList_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   * @param {boolean} useActivated\n   */\n  setUseActivatedClass(useActivated) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  /** @return {!Index} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /** @param {!Index} index */\n  setSelectedIndex(index) {\n    if (!this.isIndexValid_(index)) return;\n\n    if (this.isCheckboxList_) {\n      this.setCheckboxAtIndex_(/** @type {!Array<number>} */ (index));\n    } else if (this.isRadioList_) {\n      this.setRadioAtIndex_(/** @type {number} */ (index));\n    } else {\n      this.setSingleSelectionAtIndex_(/** @type {number} */ (index));\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   * @param evt\n   * @param {number} listItemIndex\n   */\n  handleFocusIn(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   * @param {Event} evt\n   * @param {number} listItemIndex\n   */\n  handleFocusOut(evt, listItemIndex) {\n    if (listItemIndex >= 0) {\n      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus\n     * is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter_.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   * @param {Event} evt\n   * @param {boolean} isRootListItem\n   * @param {number} listItemIndex\n   */\n  handleKeydown(evt, isRootListItem, listItemIndex) {\n    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n    const isHome = evt.key === 'Home' || evt.keyCode === 36;\n    const isEnd = evt.key === 'End' || evt.keyCode === 35;\n    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    const isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n    let currentIndex = this.adapter_.getFocusedElementIndex();\n    let nextIndex = -1;\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-list-item ancestor from the\n        // current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    if ((this.isVertical_ && arrowDown) || (!this.isVertical_ && arrowRight)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if ((this.isVertical_ && arrowUp) || (!this.isVertical_ && arrowLeft)) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent_(evt);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        if (this.isSelectableList_()) {\n          this.setSelectedIndexOnAction_(currentIndex);\n          this.preventDefaultEvent_(evt);\n        }\n\n        // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n        this.adapter_.followHref(currentIndex);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex >= 0) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   */\n  handleClick(index, toggleCheckbox) {\n    if (index === -1) return;\n\n    if (this.isSelectableList_()) {\n      this.setSelectedIndexOnAction_(index, toggleCheckbox);\n    }\n\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const tagName = `${evt.target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * Focuses the next element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusNextElement(index) {\n    const count = this.adapter_.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   * @param {number} index\n   * @return {number}\n   */\n  focusPrevElement(index) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter_.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter_.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusFirstElement() {\n    this.adapter_.focusItemAtIndex(0);\n    return 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  focusLastElement() {\n    const lastIndex = this.adapter_.getListItemCount() - 1;\n    this.adapter_.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setSingleSelectionAtIndex_(index) {\n    let selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n    if (this.useActivatedClass_) {\n      selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n    }\n\n    if (this.selectedIndex_ >= 0 && this.selectedIndex_ !== index) {\n      this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_SELECTED, 'false');\n    }\n\n    this.adapter_.addClassForElementIndex(index, selectedClassName);\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_SELECTED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.\n   * @param {number} index\n   * @private\n   */\n  setRadioAtIndex_(index) {\n    this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);\n\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings.ARIA_CHECKED, 'false');\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, 'true');\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {!Array<number>} index\n   * @private\n   */\n  setCheckboxAtIndex_(index) {\n    for (let i = 0; i < this.adapter_.getListItemCount(); i++) {\n      let isChecked = false;\n      if (index.indexOf(i) >= 0) {\n        isChecked = true;\n      }\n\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n      this.adapter_.setAttributeForElementIndex(i, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n    }\n\n    this.selectedIndex_ = index;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  setTabindexAtIndex_(index) {\n    if (this.focusedItemIndex_ === -1 && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no preselected items.\n      this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n    } else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', -1);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, 'tabindex', 0);\n  }\n\n  /**\n   * @return {boolean} Return true if it is single selectin list, checkbox list or radio list.\n   * @private\n   */\n  isSelectableList_() {\n    return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;\n  }\n\n  /** @private */\n  setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (this.isSelectableList_()) {\n      if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== -1) {\n        targetIndex = this.selectedIndex_;\n      } else if (this.selectedIndex_ instanceof Array && this.selectedIndex_.length > 0) {\n        targetIndex = this.selectedIndex_.reduce((currentIndex, minIndex) => Math.min(currentIndex, minIndex));\n      }\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexValid_(index) {\n    if (index instanceof Array) {\n      if (!this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.length === 0) {\n        return true;\n      } else {\n        return index.some((i) => this.isIndexInRange_(i));\n      }\n    } else if (typeof index === 'number') {\n      if (this.isCheckboxList_) {\n        throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);\n      }\n      return this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {boolean}\n   * @private\n   */\n  isIndexInRange_(index) {\n    const listSize = this.adapter_.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean=} toggleCheckbox\n   * @private\n   */\n  setSelectedIndexOnAction_(index, toggleCheckbox = true) {\n    if (this.isCheckboxList_) {\n      this.toggleCheckboxAtIndex_(index, toggleCheckbox);\n    } else {\n      this.setSelectedIndex(index);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @param {boolean} toggleCheckbox\n   * @private\n   */\n  toggleCheckboxAtIndex_(index, toggleCheckbox) {\n    let isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);\n\n    if (toggleCheckbox) {\n      isChecked = !isChecked;\n      this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n    }\n\n    this.adapter_.setAttributeForElementIndex(index, strings.ARIA_CHECKED, isChecked ? 'true' : 'false');\n\n    // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.\n    if (this.selectedIndex_ === -1) {\n      this.selectedIndex_ = [];\n    }\n\n    if (isChecked) {\n      this.selectedIndex_.push(index);\n    } else {\n      this.selectedIndex_ = this.selectedIndex_.filter((i) => i !== index);\n    }\n  }\n}\n\nexport default MDCListFoundation;\n","<template>\n  <div>\n    <aside ref=\"drawer\" :class=\"classes\" class=\"mdc-drawer mdc-drawer--modal\">\n      <slot v-if=\"$slots['header']\" name=\"header\"></slot>\n      <!-- <div v-if=\"$slots['header']\" class=\"mdc-drawer__header\"><</div> -->\n      <div class=\"mdc-drawer__content\"><slot></slot></div>\n    </aside>\n    <div class=\"mdc-drawer-scrim\"></div>\n\n    <div v-if=\"toolbarSpacer\" class=\"mdc-top-app-bar--fixed-adjust\" />\n  </div>\n</template>\n\n<script>\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation'\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation'\nimport { MDCList } from '@material/list/index'\nimport MDCListFoundation from '@material/list/foundation'\nimport createFocusTrap from 'focus-trap'\n\nconst media = new class {\n  get small() {\n    return (\n      this._small || (this._small = window.matchMedia('(max-width: 839px)'))\n    )\n  }\n\n  get large() {\n    return (\n      this._large || (this._large = window.matchMedia('(min-width: 1200px)'))\n    )\n  }\n}()\n\nexport default {\n  name: 'mdc-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    modal: Boolean,\n    open: Boolean,\n    toolbarSpacer: Boolean,\n    toggleOn: String,\n    toggleOnSource: {\n      type: Object,\n      required: false\n    },\n    openOn: String,\n    openOnSource: {\n      type: Object,\n      required: false\n    },\n    closeOn: String,\n    closeOnSource: {\n      type: Object,\n      required: false\n    }\n  },\n  provide() {\n    return { mdcDrawer: this }\n  },\n  data() {\n    return {\n      // open_: false,\n      classes: {}\n    }\n  },\n  computed: {\n    type() {},\n    isModal() {\n      return this.modal\n    }\n  },\n  watch: {\n    open: 'onOpen_'\n  },\n  mounted() {\n    this.drawer_ = this.$refs.drawer\n    const adapter = {\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.drawer_.classList.contains(className),\n      elementHasClass: (element, className) =>\n        element.classList.contains(className),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement\n      },\n      restoreFocus: () => {\n        const previousFocus = this.previousFocus_ && this.previousFocus_.focus\n        if (this.drawer_.contains(document.activeElement) && previousFocus) {\n          this.previousFocus_.focus()\n        }\n      },\n      focusActiveNavigationItem: () => {\n        const activeNavItemEl = this.drawer_.querySelector(\n          `.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}`\n        )\n        if (activeNavItemEl) {\n          activeNavItemEl.focus()\n        }\n      },\n      notifyClose: () => {\n        this.$emit('change', false)\n        this.$emit('close')\n      },\n      notifyOpen: () => {\n        this.$emit('change', true)\n        this.$emit('open')\n      },\n      trapFocus: () => this.focusTrap_.activate(),\n      releaseFocus: () => this.focusTrap_.deactivate()\n    }\n\n    const { DISMISSIBLE, MODAL } = MDCDismissibleDrawerFoundation.cssClasses\n    if (this.drawer_.classList.contains(DISMISSIBLE)) {\n      this.foundation = new MDCDismissibleDrawerFoundation(adapter)\n    } else if (this.drawer_.classList.contains(MODAL)) {\n      this.foundation = new MDCModalDrawerFoundation(adapter)\n    } else {\n      throw new Error(\n        `MDCDrawer: Failed to instantiate component. Supported variants are ${DISMISSIBLE} and ${MODAL}.`\n      )\n    }\n    this.foundation && this.foundation.init()\n    this.initialSyncWithDOM()\n\n    if (this.toggleOn) {\n      this.toggleOnEventSource = this.toggleOnSource || this.$root\n      this.toggleOnEventSource.$on(this.toggleOn, this.toggle)\n    }\n    if (this.openOn) {\n      this.openOnEventSource = this.openOnSource || this.$root\n      this.openOnEventSource.$on(this.openOn, this.show)\n    }\n    if (this.closeOn) {\n      this.closeOnEventSource = this.closeOnSource || this.$root\n      this.closeOnEventSource.$on(this.closeOn, this.close)\n    }\n    // media.small.addListener(this.refreshMedia)\n    // media.large.addListener(this.refreshMedia)\n    // this.$nextTick(() => this.refreshMedia())\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n    // media.small.removeListener(this.refreshMedia)\n    // media.large.removeListener(this.refreshMedia)\n\n    if (this.toggleOnEventSource) {\n      this.toggleOnEventSource.$off(this.toggleOn, this.toggle)\n    }\n    if (this.openOnEventSource) {\n      this.openOnEventSource.$off(this.openOn, this.show)\n    }\n    if (this.closeOnEventSource) {\n      this.closeOnEventSource.$off(this.closeOn, this.close)\n    }\n  },\n  methods: {\n    initialSyncWithDOM() {\n      const { MODAL } = MDCDismissibleDrawerFoundation.cssClasses\n\n      if (this.drawer_.classList.contains(MODAL)) {\n        const { SCRIM_SELECTOR } = MDCDismissibleDrawerFoundation.strings\n        this.scrim_ = this.drawer_.parentElement.querySelector(SCRIM_SELECTOR)\n        this.handleScrimClick_ = () => this.foundation.handleScrimClick()\n        this.scrim_.addEventListener('click', this.handleScrimClick_)\n        this.focusTrap_ = createFocusTrapInstance(\n          this.drawer_,\n          this.focusTrapFactory_\n        )\n      }\n\n      this.handleKeydown_ = evt => this.foundation.handleKeydown(evt)\n      this.handleTransitionEnd_ = evt =>\n        this.foundation.handleTransitionEnd(evt)\n\n      this.$el.addEventListener('keydown', this.handleKeydown_)\n      this.$el.addEventListener('transitionend', this.handleTransitionEnd_)\n    },\n    onOpen_(value) {\n      if (this.open) {\n        this.foundation && this.foundation.open()\n      } else {\n        this.foundation && this.foundation.close()\n      }\n    },\n    onChange(event) {\n      this.$emit('change', event)\n      this.$root.$emit('vma:layout')\n    },\n    show() {\n      this.foundation.open()\n    },\n    close() {\n      this.foundation.close()\n    },\n    toggle() {\n      this.foundation.isOpen()\n        ? this.foundation.close()\n        : this.foundation.open()\n    },\n    isOpen() {\n      return this.foundation.isOpen()\n    },\n    refreshMedia() {\n      // this.small = media.small.matches\n      // this.large = media.large.matches\n      // if (this.isResponsive) {\n      //   if (this.large) {\n      //     this.show()\n      //   } else {\n      //     this.close()\n      //   }\n      // }\n    }\n  }\n}\n\nfunction createFocusTrapInstance(\n  surfaceEl,\n  focusTrapFactory = createFocusTrap\n) {\n  return focusTrapFactory(surfaceEl, {\n    clickOutsideDeactivates: true,\n    initialFocus: false, // Navigation drawer handles focusing on active nav item.\n    escapeDeactivates: false, // Navigation drawer handles ESC.\n    returnFocusOnDeactivate: false // Navigation drawer handles restore focus.\n  })\n}\n</script>\n","<template>\n  <div class=\"mdc-drawer-header mdc-drawer__header\">\n      <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-header'\n}\n</script>\n","<template>\n  <nav \n    :class=\"classes\" \n    class=\"mdc-drawer-list mdc-list\">\n    <slot/>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-list',\n  props: {\n    dense: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-list--dense': this.dense\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <custom-link\n    :link=\"link\"\n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\"\n    class=\"mdc-drawer-item mdc-list-item\"\n    v-on=\"mylisteners\"\n  >\n    <span v-if=\"hasStartDetail\" class=\"mdc-list-item__graphic\">\n      <slot name=\"start-detail\">\n        <i class=\"material-icons\" aria-hidden=\"true\">{{ startIcon }}</i>\n      </slot>\n    </span>\n    <slot />\n  </custom-link>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomLinkMixin } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-drawer-item',\n  inject: ['mdcDrawer'],\n  mixins: [DispatchEventMixin, CustomLinkMixin],\n  props: {\n    startIcon: String,\n    modalClose: {\n      type: Boolean,\n      default: true\n    },\n    activated: Boolean,\n    exactActiveClass: {\n      type: String,\n      default: 'mdc-list-item--activated'\n    }\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    mylisteners() {\n      return {\n        ...this.$listeners,\n        click: e => {\n          this.mdcDrawer.isModal && this.modalClose && this.mdcDrawer.close()\n          this.dispatchEvent(e)\n        }\n      }\n    },\n    itemClasses() {\n      return {\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    hasStartDetail() {\n      return this.startIcon || this.$slots['start-detail']\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple && this.ripple.destroy()\n    this.ripple = null\n  }\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-divider'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcDrawer from './mdc-drawer.vue'\nimport mdcDrawerHeader from './mdc-drawer-header.vue'\nimport mdcDrawerList from './mdc-drawer-list.vue'\nimport mdcDrawerItem from './mdc-drawer-item.vue'\nimport mdcDrawerDivider from './mdc-drawer-divider.vue'\n\nexport {\n  mdcDrawer,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n}\n\nexport default BasePlugin({\n  mdcDrawer,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n})\n","<template>\n  <div\n    :class=\"classes\"\n    class=\"mdc-elevation\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-elevation',\n  props: {\n    z: {\n      type: [Number, String],\n      default() {\n        return 1\n      }\n    }\n  },\n  data() {\n    let elevationClasses = {}\n    elevationClasses[`mdc-elevation--z${this.z}`] = true\n\n    return {\n      classes: elevationClasses\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcElevation from './mdc-elevation.vue'\n\nexport { mdcElevation }\n\nexport default BasePlugin({\n  mdcElevation\n})\n","<template>\n  <custom-button \n    :class=\"classes\" \n    :style=\"styles\" \n    :href=\"href\"\n    :link=\"link\" \n    class=\"mdc-fab\" \n    v-on=\"listeners\" >\n    <span class=\"mdc-fab__icon\">\n      <slot>{{ icon }}</slot>\n    </span>\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-fab',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  props: {\n    icon: String,\n    mini: Boolean,\n    absolute: Boolean,\n    fixed: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'material-icons': this.icon,\n        'mdc-fab--mini': this.mini,\n        'mdc-fab--absolute': this.absolute,\n        'mdc-fab--fixed': this.fixed\n      },\n      styles: {}\n    }\n  },\n  watch: {\n    icon() {\n      this.$set(this.classes, 'material-icons', this.icon)\n    },\n    mini() {\n      this.$set(this.classes, 'mdc-fab--mini', this.mini)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcFAB from './mdc-fab.vue'\n\nexport { mdcFAB }\n\nexport default BasePlugin({\n  mdcFAB\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n  ROOT: 'mdc-floating-label',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\n  <label :class=\"labelClasses\"> <slot /> </label>\n</template>\n\n<script>\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\n\nexport default {\n  name: 'mdc-floating-label',\n  data() {\n    return {\n      labelClasses: { 'mdc-floating-label': true }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCFloatingLabelFoundation({\n      addClass: className => {\n        this.$set(this.labelClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.labelClasses, className)\n      },\n      getWidth: () => this.$el.scrollWidth,\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  },\n\n  methods: {\n    getWidth() {\n      return this.foundation.getWidth()\n    },\n\n    float(shouldFloat) {\n      this.foundation.float(shouldFloat)\n    },\n\n    shake(shouldShake) {\n      this.foundation.shake(shouldShake)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcFloatingLabel from './mdc-floating-label.vue'\n\nexport { mdcFloatingLabel }\n\nexport default BasePlugin({\n  mdcFloatingLabel\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","<template>\n  <div class=\"mdc-grid-list\">\n    <ul \n      :class=\"classes\" \n      :style=\"styles\" \n      class=\"mdc-grid-list__tiles\">\n      <slot/>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MDCGridListFoundation from '@material/grid-list/foundation'\n\nexport default {\n  name: 'mdc-grid-list',\n  props: {\n    width: [String, Number],\n    ratio: String,\n    'narrow-gutter': Boolean,\n    'header-caption': Boolean,\n    'icon-align-start': Boolean,\n    'icon-align-end': Boolean,\n    'with-support-text': Boolean,\n    interactive: Boolean\n  },\n  provide() {\n    return { mdcGrid: this }\n  },\n  computed: {\n    classes() {\n      let classes = {}\n\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter\n      classes['mdc-grid-list--header-caption'] = this.headerCaption\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText\n      classes['mdc-grid-list--non-interactive'] = !this.interactive\n\n      return classes\n    },\n    styles() {\n      var defaultWidth = 200\n      return {\n        '--mdc-grid-list-tile-width': `${this.width || defaultWidth}px`\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCGridListFoundation({\n      getOffsetWidth: () => {\n        return this.$el.offsetWidth\n      },\n      getNumberOfTiles: () => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR\n        ).length\n      },\n      getOffsetWidthForTileAtIndex: index => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR\n        )[index].offsetWidth\n      },\n      setStyleForTilesElement: (property, value) => {\n        this.$el.querySelector(\n          MDCGridListFoundation.strings.TILES_SELECTOR\n        ).style[property] = value\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\" \n    :tabindex=\"isInteractive ? '0' : undefined\"\n    class=\"mdc-grid-tile\"\n    v-on=\"isInteractive ? listeners : clickListener\">\n    <div \n      v-if=\"cover\" \n      class=\"mdc-grid-tile__primary\">\n      <div \n        :style=\"{ backgroundImage: 'url(' + src + ')' }\"\n        class=\"mdc-grid-tile__primary-content\"/>\n    </div>\n    <div \n      v-else \n      class=\"mdc-grid-tile__primary\">\n      <img \n        :src=\"src\" \n        class=\"mdc-grid-tile__primary-content\" >\n    </div>\n    <span \n      v-if=\"title || supportText\" \n      class=\"mdc-grid-tile__secondary\">\n      <i \n        v-if=\"icon\" \n        class=\"mdc-grid-tile__icon material-icons\">{{ icon }}</i>\n      <span \n        v-if=\"title\" \n        class=\"mdc-grid-tile__title\">{{ title }}</span>\n      <span \n        v-if=\"supportText\" \n        class=\"mdc-grid-tile__support-text\">{{ supportText }}</span>\n    </span>\n  </li>\n</template>\n\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-grid-tile',\n  inject: ['mdcGrid'],\n  mixins: [DispatchEventMixin],\n  props: {\n    src: String,\n    cover: Boolean,\n    icon: String,\n    title: String,\n    'support-text': String,\n    selected: Boolean,\n    activated: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    clickListener() {\n      return { click: e => this.dispatchEvent(e) }\n    },\n    itemClasses() {\n      return {\n        'mdc-grid-tile--selected': this.selected,\n        'mdc-grid-tile--activated': this.activated\n      }\n    },\n    isInteractive() {\n      return this.mdcGrid && this.mdcGrid.interactive\n    },\n    hasStartDetail() {\n      return this.startIcon || this.$slots['start-detail']\n    },\n    hasEndDetail() {\n      return this.endIcon || this.$slots['end-detail']\n    }\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  mounted() {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy() {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcGridList from './mdc-grid-list.vue'\nimport mdcGridTile from './mdc-grid-tile.vue'\n\nexport { mdcGridList, mdcGridTile }\n\nexport default BasePlugin({\n  mdcGridList,\n  mdcGridTile\n})\n","<template>\n  <span \n    :class=\"{'material-icons':!!icon}\" \n    class=\"mdc-icon mdc-icon--material\">\n    <slot>{{ icon }}</slot>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-icon',\n  props: {\n    icon: String\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\r\nimport mdcIcon from './mdc-icon.vue'\r\n\r\nexport { mdcIcon }\r\n\r\nexport default BasePlugin({\r\n  mdcIcon\r\n})\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-button',\n  ICON_BUTTON_ON: 'mdc-icon-button--on',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_PRESSED: 'aria-pressed',\n  CHANGE_EVENT: 'MDCIconButtonToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconButtonToggleAdapter, IconButtonToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconButtonToggleAdapter>}\n */\nclass MDCIconButtonToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      notifyChange: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconButtonToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n  }\n\n  init() {\n    this.adapter_.setAttr(strings.ARIA_PRESSED, `${this.isOn()}`);\n  }\n\n  handleClick() {\n    this.toggle();\n    this.adapter_.notifyChange(/** @type {!IconButtonToggleEvent} */ ({isOn: this.isOn()}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.adapter_.hasClass(cssClasses.ICON_BUTTON_ON);\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.isOn()) {\n    if (isOn) {\n      this.adapter_.addClass(cssClasses.ICON_BUTTON_ON);\n    } else {\n      this.adapter_.removeClass(cssClasses.ICON_BUTTON_ON);\n    }\n\n    this.adapter_.setAttr(strings.ARIA_PRESSED, `${isOn}`);\n  }\n}\n\n/** @record */\nclass IconButtonToggleState {}\n\nexport default MDCIconButtonToggleFoundation;\n","<template>\n  <a\n    :class=\"classes\"\n    :style=\"styles\"\n    class=\"mdc-icon-button material-icons\"\n    @click=\"onClick\"\n    v-if=\"isLink\"\n    v-bind=\"$attrs\"\n    aria-pressed=\"false\"\n  >\n    <slot />\n  </a>\n  <button\n    :class=\"classes\"\n    :style=\"styles\"\n    class=\"mdc-icon-button material-icons\"\n    @click=\"onClick\"\n    v-bind=\"$attrs\"\n    aria-pressed=\"false\"\n    v-else\n  >\n    <slot />\n  </button>\n</template>\n\n<script>\nimport MDCIconButtonToggleFoundation from '@material/icon-button/foundation'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-icon-button',\n  model: {\n    prop: 'isOn',\n    event: 'change'\n  },\n  props: {\n    isOn: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n\n  watch: {\n    isOn: 'onOn_'\n  },\n  mounted() {\n    this.foundation = new MDCIconButtonToggleFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => Boolean(this.classes[className]),\n      setAttr: (attrName, attrValue) =>\n        this.$el.setAttribute(attrName, attrValue),\n      notifyChange: evtData => {\n        this.$emit(MDCIconButtonToggleFoundation.strings.CHANGE_EVENT, evtData)\n\n        this.$emit('change', evtData.isOn)\n      }\n    })\n    this.foundation.init()\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true\n    })\n    this.ripple.init()\n\n    this.foundation.toggle(this.isOn)\n  },\n\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    onOn_(isOn) {\n      if (this.isOn !== isOn) {\n        this.foundation.toggle(isOn)\n      }\n    },\n\n    onClick(evt) {\n      this.foundation.handleClick(evt)\n    }\n  },\n\n  computed: {\n    isLink() {\n      return this.$el && Boolean(this.$el.getAttribute('href'))\n    }\n  }\n}\n</script>\n","<template>\n  <div :class=\"classes\"><slot /></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    isOn: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-icon-button__icon': true,\n        'mdc-icon-button__icon--on': this.isOn\n      }\n    }\n  },\n  mounted() {},\n\n  beforeDestroy() {},\n  methods: {},\n\n  computed: {}\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcIconButton from './mdc-icon-button.vue'\nimport mdcIconToggle from './mdc-icon-toggle.vue'\n\nexport { mdcIconButton, mdcIconToggle }\n\nexport default BasePlugin({\n  mdcIconButton,\n  mdcIconToggle\n})\n","<template>\n  <div class=\"mdc-layout-app\">\n    <div class=\"mdc-layout-app--topappbar-wrapper\">\n      <slot name=\"topappbar\" />\n    </div>\n\n    <div class=\"mdc-layout-app--main-container\">\n      <div class=\"mdc-layout-app--drawer-wrapper\"><slot name=\"drawer\" /></div>\n\n      <div class=\"mdc-layout-app--content-wrapper\"><slot /></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-app'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLayoutApp from './mdc-layout-app.vue'\n\nexport { mdcLayoutApp }\n\nexport default BasePlugin({\n  mdcLayoutApp\n})\n","<template>\n  <div :class=\"classes\">\n    <div class=\"mdc-layout-grid__inner\">\n      <slot/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-grid',\n  props: {\n    'fixed-column-width': Boolean,\n    'align-left': Boolean,\n    'align-right': Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-layout-grid': true,\n        'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth,\n        'mdc-layout-grid--align-left': this.alignLeft,\n        'mdc-layout-grid--align-right': this.alignRight\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div \n    :class=\"classes\" \n    class=\"mdc-layout-cell mdc-layout-grid__cell\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nconst spanOptions = {\n  type: [String, Number],\n  default: null,\n  validator: function(value) {\n    var num = Number(value)\n    return isFinite(num) && num <= 12 && num > 0\n  }\n}\n\nexport default {\n  name: 'mdc-layout-cell',\n  props: {\n    span: spanOptions,\n    order: spanOptions,\n    phone: spanOptions,\n    tablet: spanOptions,\n    desktop: spanOptions,\n    align: {\n      type: String,\n      validator: function(value) {\n        return ['top', 'bottom', 'middle'].indexOf(value) !== -1\n      }\n    }\n  },\n  computed: {\n    classes() {\n      let classes = []\n\n      if (this.span) {\n        classes.push(`mdc-layout-grid__cell--span-${this.span}`)\n      }\n\n      if (this.order) {\n        classes.push(`mdc-layout-grid__cell--order-${this.order}`)\n      }\n\n      if (this.phone) {\n        classes.push(`mdc-layout-grid__cell--span-${this.phone}-phone`)\n      }\n\n      if (this.tablet) {\n        classes.push(`mdc-layout-grid__cell--span-${this.tablet}-tablet`)\n      }\n\n      if (this.desktop) {\n        classes.push(`mdc-layout-grid__cell--span-${this.desktop}-desktop`)\n      }\n\n      if (this.align) {\n        classes.push(`mdc-layout-grid__cell--align-${this.align}`)\n      }\n\n      return classes\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-layout-inner-grid mdc-layout-grid__inner\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-inner-grid'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\nimport mdcLayoutCell from './mdc-layout-cell.vue'\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\n\nexport { mdcLayoutGrid, mdcLayoutCell, mdcLayoutInnerGrid }\n\nexport default BasePlugin({\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n})\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n};\n\nexport const strings = {\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n  BUFFER_SELECTOR: '.mdc-linear-progress__buffer',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {transformStyleProperties} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCLinearProgressFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      getPrimaryBar: () => /* el: Element */ {},\n      getBuffer: () => /* el: Element */ {},\n      hasClass: (/* className: string */) => false,\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* el: Element, styleProperty: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));\n  }\n\n  init() {\n    this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress_ = 0;\n  }\n\n  setDeterminate(isDeterminate) {\n    this.determinate_ = isDeterminate;\n    if (this.determinate_) {\n      this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n    } else {\n      this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), 1);\n      this.setScale_(this.adapter_.getBuffer(), 1);\n    }\n  }\n\n  setProgress(value) {\n    this.progress_ = value;\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getPrimaryBar(), value);\n    }\n  }\n\n  setBuffer(value) {\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getBuffer(), value);\n    }\n  }\n\n  setReverse(isReversed) {\n    this.reverse_ = isReversed;\n    if (this.reverse_) {\n      this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n    } else {\n      this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n    }\n  }\n\n  open() {\n    this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n  }\n\n  close() {\n    this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n  }\n\n  setScale_(el, scaleValue) {\n    const value = 'scaleX(' + scaleValue + ')';\n    transformStyleProperties.forEach((transformStyleProperty) => {\n      this.adapter_.setStyle(el, transformStyleProperty, value);\n    });\n  }\n}\n","<template>\n  <div \n    :class=\"classes\" \n    :style=\"styles\" \n    role=\"progressbar\" \n    class=\"mdc-linear-progress\">\n    <div class=\"mdc-linear-progress__buffering-dots\"/>\n    <div \n      ref=\"buffer\" \n      class=\"mdc-linear-progress__buffer\"/>\n    <div \n      ref=\"primary\" \n      class=\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"/>\n    </div>\n    <div class=\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"/>\n    </div>\n  </div>  \n</template>\n\n<script>\nimport MDCLinearProgressFoundation from '@material/linear-progress/foundation'\n\nconst ProgressPropType = {\n  type: [Number, String],\n  validator(value) {\n    return Number(value) >= 0 && Number(value) <= 1\n  }\n}\n\nexport default {\n  name: 'mdc-linear-progress',\n  props: {\n    open: { type: Boolean, default: true },\n    indeterminate: Boolean,\n    reverse: Boolean,\n    accent: Boolean,\n    progress: ProgressPropType,\n    buffer: ProgressPropType\n  },\n  data() {\n    return {\n      classes: { 'mdc-linear-progress--accent': this.accent },\n      styles: {}\n    }\n  },\n  watch: {\n    open() {\n      if (this.open) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    progress() {\n      this.foundation.setProgress(Number(this.progress))\n    },\n    buffer() {\n      this.foundation.setBuffer(Number(this.buffer))\n    },\n    indeterminate() {\n      this.foundation.setDeterminate(!this.indeterminate)\n    },\n    reverse() {\n      this.foundation.setReverse(this.reverse)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLinearProgressFoundation({\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      getPrimaryBar: () => /* el: Element */ {\n        return this.$refs.primary\n      },\n      getBuffer: () => /* el: Element */ {\n        return this.$refs.buffer\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className)\n      },\n      setStyle: (el, styleProperty, value) => {\n        el.style[styleProperty] = value\n      }\n    })\n    this.foundation.init()\n\n    this.foundation.setReverse(this.reverse)\n    this.foundation.setProgress(Number(this.progress))\n    this.foundation.setBuffer(Number(this.buffer))\n    this.foundation.setDeterminate(!this.indeterminate)\n    if (this.open) {\n      this.foundation.open()\n    } else {\n      this.foundation.close()\n    }\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLinearProgress from './mdc-linear-progress.vue'\n\nexport { mdcLinearProgress }\n\nexport default BasePlugin({\n  mdcLinearProgress\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\n  <div :class=\"lineClasses\" :style=\"lineStyles\" class=\"mdc-line-ripple\" />\n</template>\n\n<script>\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\n\nexport default {\n  name: 'mdc-line-ripple',\n\n  props: {\n    rippleCenter: { type: [Number, String], default: 0 },\n    active: Boolean\n  },\n  data() {\n    return {\n      lineClasses: {},\n      lineStyles: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLineRippleFoundation(\n      Object.assign({\n        addClass: className => {\n          this.$set(this.lineClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.lineClasses, className)\n        },\n        hasClass: className => {\n          return Boolean(this.lineClasses[className])\n        },\n        setStyle: (name, value) => {\n          this.$set(this.lineStyles, name, value)\n        },\n        registerEventHandler: (evtType, handler) => {\n          this.$el.addEventListener(evtType, handler)\n        },\n        deregisterEventHandler: (evtType, handler) => {\n          this.$el.removeEventListener(evtType, handler)\n        }\n      })\n    )\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  },\n\n  methods: {\n    setRippleCenter(xCoordinate) {\n      this.foundation.setRippleCenter(xCoordinate)\n    },\n    activate() {\n      this.foundation_.activate()\n    },\n\n    deactivate() {\n      this.foundation.deactivate()\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLineRipple from './mdc-line-ripple.vue'\n\nexport { mdcLineRipple }\n\nexport default BasePlugin({\n  mdcLineRipple\n})\n","<template>\n  <ul\n    :class=\"classes\"\n    class=\"mdc-list\"\n    :aria-orientation=\"orientation\"\n    @click=\"handleClickEvent\"\n    @keydown=\"handleKeydownEvent\"\n    @focusin=\"handleFocusInEvent\"\n    @focusout=\"handleFocusOutEvent\"\n  >\n    <slot />\n  </ul>\n</template>\n\n<script>\nimport MDCListFoundation from '@material/list/foundation'\nimport { matches } from '@material/dom/ponyfill'\n\nexport default {\n  name: 'mdc-list',\n  props: {\n    dense: Boolean,\n    avatarList: Boolean,\n    twoLine: Boolean,\n    bordered: Boolean,\n    interactive: { type: Boolean, default: true },\n    singleSelection: Boolean,\n    vertical: { type: Boolean, default: true }\n  },\n  provide() {\n    return { mdcList: this }\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list--dense': this.dense,\n        'mdc-list--avatar-list': this.avatarList,\n        'mdc-list--two-line': this.twoLine,\n        'mdc-list--bordered': this.bordered,\n        'mdc-list--non-interactive': !this.interactive\n      }\n    },\n\n    orientation() {\n      return this.vertical ? 'vertical' : 'horizontal'\n    },\n\n    listElements() {\n      return [].slice.call(\n        this.$el.querySelectorAll(\n          MDCListFoundation.strings.ENABLED_ITEMS_SELECTOR\n        )\n      )\n    }\n  },\n  methods: {\n    handleFocusInEvent(evt) {\n      const index = this.getListItemIndex(evt)\n      this.foundation.handleFocusIn(evt, index)\n    },\n    handleFocusOutEvent(evt) {\n      const index = this.getListItemIndex(evt)\n      this.foundation.handleFocusOut(evt, index)\n    },\n\n    handleKeydownEvent(evt) {\n      const index = this.getListItemIndex(evt)\n\n      if (index >= 0) {\n        this.foundation.handleKeydown(\n          evt,\n          evt.target.classList.contains(\n            MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n          ),\n          index\n        )\n      }\n    },\n    handleClickEvent(evt) {\n      const index = this.getListItemIndex(evt)\n\n      // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.\n      const toggleCheckbox = !matches(\n        evt.target,\n        MDCListFoundation.strings.CHECKBOX_RADIO_SELECTOR\n      )\n      this.foundation.handleClick(index, toggleCheckbox)\n    },\n\n    layout() {\n      // List items need to have at least tabindex=-1 to be focusable.\n      ;[].slice\n        .call(this.$el.querySelectorAll('.mdc-list-item:not([tabindex])'))\n        .forEach(ele => {\n          ele.setAttribute('tabindex', -1)\n        })\n\n      // Child button/a elements are not tabbable until the list item is focused.\n      ;[].slice\n        .call(\n          this.$el.querySelectorAll(\n            MDCListFoundation.strings.FOCUSABLE_CHILD_ELEMENTS\n          )\n        )\n        .forEach(ele => ele.setAttribute('tabindex', -1))\n    },\n\n    initializeListType() {\n      // Automatically set single selection if selected/activated classes are present.\n      const preselectedElement = this.$el.querySelector(\n        `.${MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS}, .${\n          MDCListFoundation.cssClasses.LIST_ITEM_SELECTED_CLASS\n        }`\n      )\n\n      if (preselectedElement) {\n        if (\n          preselectedElement.classList.contains(\n            MDCListFoundation.cssClasses.LIST_ITEM_ACTIVATED_CLASS\n          )\n        ) {\n          this.foundation.setUseActivatedClass(true)\n        }\n\n        this.singleSelection = true\n        this.selectedIndex = this.listElements.indexOf(preselectedElement)\n      }\n    },\n\n    getListItemIndex(evt) {\n      let eventTarget = evt.target\n      let index = -1\n\n      // Find the first ancestor that is a list item or the list.\n      while (\n        !eventTarget.classList.contains(\n          MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n        ) &&\n        !eventTarget.classList.contains(MDCListFoundation.cssClasses.ROOT)\n      ) {\n        eventTarget = eventTarget.parentElement\n      }\n\n      // Get the index of the element if it is a list item.\n      if (\n        eventTarget.classList.contains(\n          MDCListFoundation.cssClasses.LIST_ITEM_CLASS\n        )\n      ) {\n        index = this.listElements.indexOf(eventTarget)\n      }\n\n      return index\n    }\n  },\n  mounted() {\n    this.foundation = new MDCListFoundation({\n      getListItemCount: () => this.listElements.length,\n      getFocusedElementIndex: () =>\n        this.listElements.indexOf(document.activeElement),\n      setAttributeForElementIndex: (index, attr, value) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.setAttribute(attr, value)\n        }\n      },\n      removeAttributeForElementIndex: (index, attr) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.removeAttribute(attr)\n        }\n      },\n      addClassForElementIndex: (index, className) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.classList.add(className)\n        }\n      },\n      removeClassForElementIndex: (index, className) => {\n        const element = this.listElements[index]\n        if (element) {\n          element.classList.remove(className)\n        }\n      },\n      focusItemAtIndex: index => {\n        const element = this.listElements[index]\n        if (element) {\n          element.focus()\n        }\n      },\n      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {\n        const element = this.listElements[listItemIndex]\n        const listItemChildren = [].slice.call(\n          element.querySelectorAll(\n            MDCListFoundation.strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX\n          )\n        )\n        listItemChildren.forEach(ele =>\n          ele.setAttribute('tabindex', tabIndexValue)\n        )\n      },\n      followHref: index => {\n        const listItem = this.listElements[index]\n        if (listItem && listItem.href) {\n          listItem.click()\n        }\n      },\n      hasCheckboxAtIndex: index => {\n        const listItem = this.listElements[index]\n        return !!listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_SELECTOR\n        )\n      },\n      hasRadioAtIndex: index => {\n        const listItem = this.listElements[index]\n        return !!listItem.querySelector(\n          MDCListFoundation.strings.RADIO_SELECTOR\n        )\n      },\n      isCheckboxCheckedAtIndex: index => {\n        const listItem = this.listElements[index]\n        const toggleEl = listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_SELECTOR\n        )\n        return toggleEl.checked\n      },\n      setCheckedCheckboxOrRadioAtIndex: (index, isChecked) => {\n        const listItem = this.listElements[index]\n        const toggleEl = listItem.querySelector(\n          MDCListFoundation.strings.CHECKBOX_RADIO_SELECTOR\n        )\n        toggleEl.checked = isChecked\n\n        const event = document.createEvent('Event')\n        event.initEvent('change', true, true)\n        toggleEl.dispatchEvent(event)\n      },\n      isFocusInsideList: () => {\n        return this.$el.contains(document.activeElement)\n      }\n    })\n\n    this.foundation.init()\n\n    this.foundation.setSingleSelection(this.singleSelection)\n\n    this.foundation.setVerticalOrientation(this.vertical)\n\n    this.layout()\n  }\n}\n</script>\n","<template>\n  <li\n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\"\n    :tabindex=\"isInteractive ? '0' : undefined\"\n    class=\"mdc-list-item\"\n    v-on=\"isInteractive ? $listeners : {}\"\n  >\n    <!-- <span v-if=\"hasStartDetail\" class=\"mdc-list-item__graphic\"> -->\n    <slot name=\"start-detail\" />\n    <!-- </span> -->\n\n    <span class=\"mdc-list-item__text\" v-if=\"hasSecondary\"\n      ><span class=\"mdc-list-item__primary-text\"> <slot /></span>\n      <span class=\"mdc-list-item__secondary-text\" v-if=\"hasSecondary\">\n        <slot name=\"secondary\" />\n      </span>\n    </span>\n\n    <span class=\"mdc-list-item__text\" v-else> <slot /> </span>\n\n    <!-- <span v-if=\"hasEndDetail\" class=\"mdc-list-item__meta\"> -->\n    <slot name=\"end-detail\" />\n    <!-- </span> -->\n  </li>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-list-item',\n  inject: ['mdcList'],\n  props: {\n    selected: Boolean,\n    activated: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    itemClasses() {\n      return {\n        'mdc-list-item--selected': this.selected,\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    isInteractive() {\n      return this.mdcList && this.mdcList.interactive\n    },\n    hasSecondary() {\n      return this.$slots['secondary'] && (this.mdcList && this.mdcList.twoLine)\n    },\n    hasEndDetail() {\n      return !!this.$slots['end-detail']\n    },\n    hasStartDetail() {\n      return !!this.$slots['start-detail']\n    }\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  mounted() {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy() {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"classes\" \n    role=\"separator\" \n    class=\"mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-divider',\n  props: {\n    inset: Boolean,\n    padded: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list-divider--inset': this.inset,\n        'mdc-list-divider--padded': this.padded\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-list-group\"><slot/></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group'\n}\n</script>\n","<template>\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot/></h3>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-header'\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-divider'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcList from './mdc-list.vue'\nimport mdcListItem from './mdc-list-item.vue'\nimport mdcListDivider from './mdc-list-divider.vue'\nimport mdcListGroup from './mdc-list-group.vue'\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\n\nexport {\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n}\n\nexport default BasePlugin({\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n})\n","<template>\n  <i :class=\"classes\" v-on=\"$listeners\" :style=\"styles\"> {{ icon }} </i>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-material-icon',\n  // model: {\n  //   prop: 'isOn',\n  //   event: 'change'\n  // },\n  props: {\n    hasRipple: Boolean,\n\n    icon: String\n  },\n  data() {\n    return {\n      classes: {\n        'material-icons': true,\n        'material-icons--ripple-surface': this.hasRipple\n      },\n      styles: {}\n    }\n  },\n\n  mounted() {\n    if (this.hasRipple) {\n      this.ripple = new RippleBase(this, {\n        isUnbounded: () => true\n      })\n      this.ripple.init()\n    }\n  },\n\n  beforeDestroy() {\n    if (this.ripple) {\n      this.ripple.destroy()\n    }\n  },\n  methods: {},\n\n  computed: {}\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcMaterialIcon from './mdc-material-icon.vue'\n\nexport { mdcMaterialIcon }\n\nexport default BasePlugin({\n  mdcMaterialIcon\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',\n  MENU_SELECTION_GROUP: 'mdc-menu__selection-group',\n};\n\n/** @enum {string} */\nconst strings = {\n  SELECTED_EVENT: 'MDCMenu:selected',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n  LIST_SELECTOR: '.mdc-list',\n  CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANCHOR: 'mdc-menu-surface--anchor',\n  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',\n  FIXED: 'mdc-menu-surface--fixed',\n  OPEN: 'mdc-menu-surface--open',\n  ROOT: 'mdc-menu-surface',\n};\n\n/** @enum {string} */\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled=\"true\"]), input:not(:disabled), ' +\n  'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Total duration of menu-surface open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu-surface close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   surfaceHeight: number,\n *   surfaceWidth: number,\n *   bodyDimensions,\n *   windowScroll,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuSurfaceAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}\n */\nclass MDCMenuSurfaceFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuSurfaceAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuSurfaceAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasAnchor: () => false,\n      notifyClose: () => {},\n      notifyOpen: () => {},\n      isElementInContainer: () => false,\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      isFocused: () => false,\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFirstElementFocused: () => {},\n      isLastElementFocused: () => {},\n      focusFirstElement: () => {},\n      focusLastElement: () => {},\n      getInnerDimensions: () => ({}),\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getBodyDimensions: () => ({}),\n      getWindowScroll: () => ({}),\n      setPosition: () => {},\n      setMaxHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuSurfaceAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {!Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {!AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n    /** @private {boolean} */\n    this.hoistedElement_ = false;\n    /** @private {boolean} */\n    this.isFixedPosition_ = false;\n    /** @private {!{x: number, y: number}} */\n    this.position_ = {x: 0, y: 0};\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuSurfaceFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin set of margin values from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /**\n   * Used to indicate if the menu-surface is hoisted to the body.\n   * @param {boolean} isHoisted\n   */\n  setIsHoisted(isHoisted) {\n    this.hoistedElement_ = isHoisted;\n  }\n\n  /**\n   * Used to set the menu-surface calculations based on a fixed position menu.\n   * @param {boolean} isFixedPosition\n   */\n  setFixedPosition(isFixedPosition) {\n    this.isFixedPosition_ = isFixedPosition;\n  }\n\n  /**\n   * Sets the menu-surface position on the page.\n   * @param {number} x\n   * @param {number} y\n   */\n  setAbsolutePosition(x, y) {\n    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;\n    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * Handle clicks and close if not within menu-surface element.\n   * @param {!Event} evt\n   */\n  handleBodyClick(evt) {\n    const el = evt.target;\n\n    if (this.adapter_.isElementInContainer(el)) {\n      return;\n    }\n\n    this.close();\n  };\n\n  /**\n   * Handle keys that close the surface.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {keyCode, key, shiftKey} = evt;\n\n    const isEscape = key === 'Escape' || keyCode === 27;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isEscape) {\n      this.close();\n    } else if (isTab) {\n      if (this.adapter_.isLastElementFocused() && !shiftKey) {\n        this.adapter_.focusFirstElement();\n        evt.preventDefault();\n      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {\n        this.adapter_.focusLastElement();\n        evt.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.\n   */\n  getAutoLayoutMeasurements_() {\n    let anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n    const bodyDimensions = this.adapter_.getBodyDimensions();\n    const windowScroll = this.adapter_.getWindowScroll();\n\n    if (!anchorRect) {\n      anchorRect = /** @type {ClientRect} */ ({\n        x: this.position_.x,\n        y: this.position_.y,\n        top: this.position_.y,\n        bottom: this.position_.y,\n        left: this.position_.x,\n        right: this.position_.x,\n        height: 0,\n        width: 0,\n      });\n    }\n\n    return {\n      viewport,\n      bodyDimensions,\n      windowScroll,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      surfaceHeight: this.dimensions_.height,\n      surfaceWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu surface.\n   * @return {!Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, surfaceHeight, surfaceWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = surfaceHeight - availableTop;\n    const bottomOverflow = surfaceHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = surfaceWidth - availableLeft;\n    const rightOverflow = surfaceWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return /** @type {Corner} */ (corner);\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    // isRightAligned corresponds to using the 'right' property on the surface.\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n\n      // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so\n      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,\n      // the right property is correct.\n      if (this.hoistedElement_ || this.isFixedPosition_) {\n        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);\n      }\n\n      return rightOffset;\n    }\n\n    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {anchorHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n    }\n    return y;\n  }\n\n  /**\n   * @param {!Corner} corner Origin corner of the menu surface.\n   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuSurfaceMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuSurfaceFoundation.numbers;\n\n    // When maximum height is not specified, it is handled from css.\n    if (isBottomAligned) {\n      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;\n      if (!(this.anchorCorner_ & CornerBit.BOTTOM)) {\n        maxHeight += this.measures_.anchorHeight;\n      }\n    } else {\n      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;\n      if (this.anchorCorner_ & CornerBit.BOTTOM) {\n        maxHeight -= this.measures_.anchorHeight;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);\n    const verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    let position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset : '0',\n    };\n    const {anchorWidth, surfaceWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.\n    if (anchorWidth / surfaceWidth > numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element\n    if (this.hoistedElement_ || this.isFixedPosition_) {\n      position = this.adjustPositionForHoistedElement_(position);\n    }\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop) && position[prop] !== '0') {\n        position[prop] = `${parseInt(position[prop], 10)}px`;\n      }\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Calculates the offsets for positioning the menu-surface when the menu-surface has been\n   * hoisted to the body.\n   * @param {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @return {!{\n   *   top: (string|undefined),\n   *   right: (string|undefined),\n   *   bottom: (string|undefined),\n   *   left: (string|undefined)\n   * }} position\n   * @private\n   */\n  adjustPositionForHoistedElement_(position) {\n    const {windowScroll, viewportDistance} = this.measures_;\n\n    for (const prop in position) {\n      if (position.hasOwnProperty(prop)) {\n        // Hoisted surfaces need to have the anchor elements location on the page added to the\n        // position properties for proper alignment on the body.\n        if (viewportDistance.hasOwnProperty(prop)) {\n          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];\n        }\n\n        // Surfaces that are absolutely positioned need to have additional calculations for scroll\n        // and bottom positioning.\n        if (!this.isFixedPosition_) {\n          if (prop === 'top') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.y;\n          } else if (prop === 'bottom') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.y;\n          } else if (prop === 'left') {\n            position[prop] = parseInt(position[prop], 10) + windowScroll.x;\n          } else if (prop === 'right') {\n            position[prop] = parseInt(position[prop], 10) - windowScroll.x;\n          }\n        }\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Open the menu surface.\n   */\n  open() {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      if (this.quickOpen_) {\n        this.adapter_.notifyOpen();\n      } else {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);\n          this.adapter_.notifyOpen();\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu surface.\n   */\n  close() {\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);\n      if (this.quickOpen_) {\n        this.adapter_.notifyClose();\n      } else {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);\n          this.adapter_.notifyClose();\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n\n    this.isOpen_ = false;\n    this.maybeRestoreFocus_();\n  }\n\n  /**\n   * The last focused element when the menu surface was opened should regain focus, if the user is\n   * focused on or within the menu surface when it is closed.\n   * @private\n   */\n  maybeRestoreFocus_() {\n    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {\n      this.adapter_.restoreFocus();\n    }\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * isFinite that doesn't force conversion to number type.\n   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.\n   * @param {number} num\n   * @return {boolean}\n   * @private\n   */\n  typeCheckisFinite_(num) {\n    return typeof num === 'number' && isFinite(num);\n  }\n}\n\nexport {MDCMenuSurfaceFoundation, AnchorMargin};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuSurfaceFoundation} from '@material/menu-surface/foundation';\nimport MDCListFoundation from '@material/list/foundation';\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select', 'a'];\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClassToElementAtIndex: () => {},\n      removeClassFromElementAtIndex: () => {},\n      addAttributeToElementAtIndex: () => {},\n      removeAttributeFromElementAtIndex: () => {},\n      elementContainsClass: () => {},\n      closeSurface: () => {},\n      getElementIndex: () => {},\n      getParentElement: () => {},\n      getSelectedElementIndex: () => {},\n      notifySelected: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @type {number} */\n    this.closeAnimationEndTimerId_ = 0;\n  }\n\n  destroy() {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter_.closeSurface();\n  }\n\n  /**\n   * Handler function for the keydown events.\n   * @param {!Event} evt\n   */\n  handleKeydown(evt) {\n    const {key, keyCode} = evt;\n\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isTab = key === 'Tab' || keyCode === 9;\n\n    if (isSpace || isEnter) {\n      this.handleAction_(evt);\n    } else if (isTab) {\n      this.adapter_.closeSurface();\n    }\n  }\n\n  /**\n   * Handler function for the click events.\n   * @param {!Event} evt\n   */\n  handleClick(evt) {\n    this.handleAction_(evt);\n  }\n\n  /**\n   * Combined action handling for click/keypress events.\n   * @param {!Event} evt\n   * @private\n   */\n  handleAction_(evt) {\n    const listItem = this.getListItem_(/** @type {HTMLElement} */ (evt.target));\n    if (listItem) {\n      this.handleSelection(listItem);\n      this.preventDefaultEvent_(evt);\n    }\n  }\n\n  /**\n   * Handler for a selected list item.\n   * @param {?HTMLElement} listItem\n   */\n  handleSelection(listItem) {\n    const index = this.adapter_.getElementIndex(listItem);\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter_.notifySelected({index});\n    this.adapter_.closeSurface();\n\n    // Wait for the menu to close before adding/removing classes that affect styles.\n    this.closeAnimationEndTimerId_ = setTimeout(() => {\n      const selectionGroup = this.getSelectionGroup_(listItem);\n\n      if (selectionGroup !== null) {\n        this.handleSelectionGroup_(/** @type {!HTMLElement} */ (selectionGroup), index);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  }\n\n  /**\n   * Handles toggling the selected classes in a selection group when a\n   * selection is made.\n   * @param {!HTMLElement} selectionGroup\n   * @param {number} index The selected index value\n   * @private\n   */\n  handleSelectionGroup_(selectionGroup, index) {\n    // De-select the previous selection in this group.\n    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);\n    if (selectedIndex >= 0) {\n      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, strings.ARIA_SELECTED_ATTR);\n      this.adapter_.removeClassFromElementAtIndex(selectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n    // Select the new list item in this group.\n    this.adapter_.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter_.addAttributeToElementAtIndex(index, strings.ARIA_SELECTED_ATTR, 'true');\n  }\n\n  /**\n   * Returns the parent selection group of an element if one exists.\n   * @param listItem\n   * @return {?HTMLElement} parent selection group element or null.\n   * @private\n   */\n  getSelectionGroup_(listItem) {\n    let parent = this.adapter_.getParentElement(listItem);\n    let isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n\n    // Iterate through ancestors until we find the group or get to the list.\n    while (!isGroup && !this.adapter_.elementContainsClass(parent, MDCListFoundation.cssClasses.ROOT)) {\n      parent = this.adapter_.getParentElement(parent);\n      isGroup = this.adapter_.elementContainsClass(parent, cssClasses.MENU_SELECTION_GROUP);\n    }\n\n    if (isGroup) {\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Find the first ancestor with the mdc-list-item class.\n   * @param {?HTMLElement} target\n   * @return {?HTMLElement}\n   * @private\n   */\n  getListItem_(target) {\n    let isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n\n    while (!isListItem) {\n      target = this.adapter_.getParentElement(target);\n      if (target) {\n        isListItem = this.adapter_.elementContainsClass(target, MDCListFoundation.cssClasses.LIST_ITEM_CLASS);\n      } else { // target has no parent element.\n        return null;\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element doesn't\n   * consume the event, and it will cause an unintended scroll.\n   * @param {!Event} evt\n   * @private\n   */\n  preventDefaultEvent_(evt) {\n    const target = /** @type {!HTMLElement} */ (evt.target);\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n}\n\nexport {MDCMenuFoundation};\n","<template>\n  <mdc-menu-surface\n    ref=\"root\"\n    :quick-open=\"quickOpen\"\n    :open=\"open\"\n    @change=\"onChange\"\n    @click.native=\"handleClick\"\n  >\n    <mdc-list ref=\"list\"> <slot /> </mdc-list>\n  </mdc-menu-surface>\n</template>\n\n<script>\nimport { MDCMenuFoundation } from '@material/menu/foundation'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-menu',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: [Boolean, Object],\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  provide() {\n    return { mdcMenu: this }\n  },\n  watch: {\n    // anchorCorner(nv) {\n    //   this.foundation.setAnchorCorner(Number(nv))\n    // },\n    // anchorMargin(nv) {\n    //   this.foundation.setAnchorMargin(nv)\n    // }\n  },\n  mounted() {\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuFoundation({\n      addClassToElementAtIndex: (index, className) => {\n        const list = this.items\n        list[index].classList.add(className)\n      },\n      removeClassFromElementAtIndex: (index, className) => {\n        const list = this.items\n        list[index].classList.remove(className)\n      },\n      addAttributeToElementAtIndex: (index, attr, value) => {\n        const list = this.items\n        list[index].setAttribute(attr, value)\n      },\n      removeAttributeFromElementAtIndex: (index, attr) => {\n        const list = this.items\n        list[index].removeAttribute(attr)\n      },\n      elementContainsClass: (element, className) =>\n        element.classList.contains(className),\n      closeSurface: () => {\n        this.$emit('change', false)\n      },\n      getElementIndex: element => {\n        return this.items.indexOf(element)\n      },\n      getParentElement: element => element.parentElement,\n      getSelectedElementIndex: selectionGroup => {\n        const idx = this.items.indexOf(\n          selectionGroup.querySelector(\n            `.${MDCMenuFoundation.cssClasses.MENU_SELECTED_LIST_ITEM}`\n          )\n        )\n        return idx\n      },\n      notifySelected: evtData => {\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.SELECTED_EVENT, {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        })\n\n        this.$emit('select', {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        })\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this._previousFocus = null\n    this.foundation.destroy()\n  },\n\n  computed: {\n    items() {\n      return this.$refs.list.listElements\n    }\n  },\n\n  methods: {\n    handleClick(evt) {\n      this.foundation.handleClick(evt)\n    },\n    onChange(item) {\n      this.$emit('change', item)\n    }\n    // onOpen_(value) {\n    //   if (value) {\n    //     this.foundation.open(typeof value === 'object' ? value : void 0)\n    //   } else {\n    //     this.foundation.close()\n    //   }\n    // },\n    // show(options) {\n    //   this.foundation.open(options)\n    // },\n    // hide() {\n    //   this.foundation.close()\n    // },\n    // isOpen() {\n    //   return this.foundation ? this.foundation.isOpen() : false\n    // }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\nexport {getTransformPropertyName};\n","<template>\n  <div\n    :class=\"classes\"\n    class=\"mdc-menu mdc-menu-surface\"\n    @keydown=\"handleKeydown\"\n    @MDCMenuSurface:opened=\"registerBodyClickListener\"\n    @MDCMenuSurface:closed=\"deregisterBodyClickListener\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nimport { MDCMenuSurfaceFoundation } from '@material/menu-surface/foundation'\nimport { emitCustomEvent } from '../base'\nimport * as util from '@material/menu-surface/util'\n\nexport default {\n  name: 'mdc-menu-surface',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: [Boolean, Object],\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  provide() {\n    return { mdcMenu: this }\n  },\n  watch: {\n    open: 'onOpen_',\n    quickOpen(nv) {\n      this.foundation.setQuickOpen(nv)\n    }\n  },\n  mounted() {\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuSurfaceFoundation(\n      Object.assign(\n        {\n          addClass: className => this.$set(this.classes, className, true),\n          removeClass: className => this.$delete(this.classes, className),\n          hasClass: className => this.$el.classList.contains(className),\n          hasAnchor: () => !!this.anchorElement,\n          notifyClose: () => {\n            emitCustomEvent(\n              this.$el,\n              MDCMenuSurfaceFoundation.strings.CLOSED_EVENT,\n              {}\n            )\n\n            this.$emit('change', false)\n          },\n          notifyOpen: () => {\n            emitCustomEvent(\n              this.$el,\n              MDCMenuSurfaceFoundation.strings.OPENED_EVENT,\n              {}\n            )\n\n            this.$emit('change', true)\n          },\n          isElementInContainer: el => this.$el === el || this.$el.contains(el),\n          isRtl: () =>\n            getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl',\n          setTransformOrigin: origin => {\n            this.$el.style[\n              `${util.getTransformPropertyName(window)}-origin`\n            ] = origin\n          }\n        },\n        this.getFocusAdapterMethods(),\n        this.getDimensionAdapterMethods()\n      )\n    )\n\n    if (\n      this.$el.parentElement &&\n      this.$el.parentElement.classList.contains(\n        MDCMenuSurfaceFoundation.cssClasses.ANCHOR\n      )\n    ) {\n      this.anchorElement = this.$el.parentElement\n    }\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this._previousFocus = null\n\n    this.foundation.destroy()\n  },\n\n  methods: {\n    handleBodyClick(evt) {\n      this.foundation.handleBodyClick(evt)\n    },\n\n    registerBodyClickListener() {\n      document.body.addEventListener('click', this.handleBodyClick)\n    },\n    deregisterBodyClickListener() {\n      document.body.removeEventListener('click', this.handleBodyClick)\n    },\n    handleKeydown(evt) {\n      this.foundation.handleKeydown(evt)\n    },\n    getFocusAdapterMethods() {\n      return {\n        isFocused: () => document.activeElement === this.$el,\n        saveFocus: () => {\n          this.previousFocus_ = document.activeElement\n        },\n        restoreFocus: () => {\n          if (this.$el.contains(document.activeElement)) {\n            if (this.previousFocus_ && this.previousFocus_.focus) {\n              this.previousFocus_.focus()\n            }\n          }\n        },\n        isFirstElementFocused: () =>\n          this.firstFocusableElement_ &&\n          this.firstFocusableElement_ === document.activeElement,\n        isLastElementFocused: () =>\n          this.lastFocusableElement_ &&\n          this.lastFocusableElement_ === document.activeElement,\n        focusFirstElement: () =>\n          this.firstFocusableElement_ &&\n          this.firstFocusableElement_.focus &&\n          this.firstFocusableElement_.focus(),\n        focusLastElement: () =>\n          this.lastFocusableElement_ &&\n          this.lastFocusableElement_.focus &&\n          this.lastFocusableElement_.focus()\n      }\n    },\n    getDimensionAdapterMethods() {\n      return {\n        getInnerDimensions: () => {\n          return {\n            width: this.$el.offsetWidth,\n            height: this.$el.offsetHeight\n          }\n        },\n        getAnchorDimensions: () =>\n          this.anchorElement && this.anchorElement.getBoundingClientRect(),\n        getWindowDimensions: () => {\n          return { width: window.innerWidth, height: window.innerHeight }\n        },\n        getBodyDimensions: () => {\n          return {\n            width: document.body.clientWidth,\n            height: document.body.clientHeight\n          }\n        },\n        getWindowScroll: () => {\n          return { x: window.pageXOffset, y: window.pageYOffset }\n        },\n        setPosition: position => {\n          this.$el.style.left = 'left' in position ? position.left : null\n          this.$el.style.right = 'right' in position ? position.right : null\n          this.$el.style.top = 'top' in position ? position.top : null\n          this.$el.style.bottom = 'bottom' in position ? position.bottom : null\n        },\n        setMaxHeight: height => {\n          this.$el.style.maxHeight = height\n        }\n      }\n    },\n\n    onOpen_(value) {\n      if (value) {\n        const focusableElements = this.$el.querySelectorAll(\n          MDCMenuSurfaceFoundation.strings.FOCUSABLE_ELEMENTS\n        )\n        this.firstFocusableElement_ =\n          focusableElements.length > 0 ? focusableElements[0] : null\n        this.lastFocusableElement_ =\n          focusableElements.length > 0\n            ? focusableElements[focusableElements.length - 1]\n            : null\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    hoistMenuToBody() {\n      document.body.appendChild(this.$el.parentElement.removeChild(this.$el))\n      this.setIsHoisted(true)\n    },\n    setIsHoisted(isHoisted) {\n      this.foundation.setIsHoisted(isHoisted)\n    },\n    setMenuSurfaceAnchorElement(element) {\n      this.anchorElement = element\n    },\n    setFixedPosition(isFixed) {\n      if (isFixed) {\n        this.$el.classList.add(cssClasses.FIXED)\n      } else {\n        this.$el.classList.remove(cssClasses.FIXED)\n      }\n\n      this.foundation.setFixedPosition(isFixed)\n    },\n    setAbsolutePosition(x, y) {\n      this.foundation.setAbsolutePosition(x, y)\n      this.setIsHoisted(true)\n    },\n    setAnchorCorner(corner) {\n      this.foundation.setAnchorCorner(corner)\n    },\n    setAnchorMargin(margin) {\n      this.foundation.setAnchorMargin(margin)\n    },\n    show(options) {\n      this.foundation.open(options)\n    },\n    hide() {\n      this.foundation.close()\n    },\n    isOpen() {\n      return this.foundation ? this.foundation.isOpen() : false\n    }\n  }\n}\n</script>\n","<template>\n  <li\n    :tabindex=\"disabled ? '-1' : '0'\"\n    :aria-disabled=\"disabled\"\n    class=\"mdc-menu-item mdc-list-item\"\n    role=\"menuitem\"\n  >\n    <slot />\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-item',\n  props: {\n    disabled: Boolean\n  },\n  inject: ['mdcMenu'],\n\n  mounted() {\n    console.dir(this.mdcMenu)\n    this.mdcMenu.items.push(this.$el)\n  }\n}\n</script>\n","<template>\n  <li \n    role=\"separator\" \n    class=\"mdc-menu-divider mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-divider'\n}\n</script>\n","<template>\n  <div class=\"mdc-menu-surface--anchor\"><slot /></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-anchor'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcMenu from './mdc-menu.vue'\nimport mdcMenuSurface from './mdc-menu-surface.vue'\nimport mdcMenuItem from './mdc-menu-item.vue'\nimport mdcMenuDivider from './mdc-menu-divider.vue'\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\n\nexport { mdcMenu, mdcMenuItem, mdcMenuDivider, mdcMenuAnchor }\n\nexport default BasePlugin({\n  mdcMenu,\n  mdcMenuSurface,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // This should stay in sync with $mdc-notched-outline-padding * 2.\n  NOTCH_ELEMENT_PADDING: 8,\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n  OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',\n  NO_LABEL: 'mdc-notched-outline--no-label',\n};\n\nexport {cssClasses, numbers, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      setNotchWidthProperty: () => {},\n      removeNotchWidthProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth.\n   * @param {number} notchWidth\n   */\n  notch(notchWidth) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n\n    if (notchWidth > 0) {\n      notchWidth += numbers.NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n    }\n\n    this.adapter_.setNotchWidthProperty(notchWidth);\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n    this.adapter_.removeNotchWidthProperty();\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div ref=\"outlined\" :class=\"outlinedClasses\">\n    <div class=\"mdc-notched-outline__leading\"></div>\n    <div ref=\"notchEl\" class=\"mdc-notched-outline__notch\">\n      <mdc-floating-label v-if=\"$slots.default\" ref=\"labelEl\"\n        ><slot\n      /></mdc-floating-label>\n    </div>\n    <div class=\"mdc-notched-outline__trailing\"></div>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-notched-outline',\n  data() {\n    return {\n      outlinedClasses: { 'mdc-notched-outline': true }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundation({\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n\n      setNotchWidthProperty: width =>\n        this.$refs.notchEl.style.setProperty('width', width + 'px'),\n      removeNotchWidthProperty: () =>\n        this.$refs.notchEl.style.removeProperty('width')\n    })\n    this.foundation.init()\n\n    if (this.$slots.default) {\n      // this.$refs.labelEl.style.transitionDuration = '0s'\n\n      this.$set(\n        this.outlinedClasses,\n        MDCnotchedOutlineFoundation.cssClasses.OUTLINE_UPGRADED,\n        true\n      )\n      // requestAnimationFrame(() => {\n      //   this.$refs.labelEl.style.transitionDuration = ''\n      // })\n    } else {\n      this.$set(\n        this.outlinedClasses,\n        MDCnotchedOutlineFoundation.cssClasses.NO_LABEL,\n        true\n      )\n    }\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  },\n\n  methods: {\n    notch(notchWidth) {\n      this.foundation.notch(notchWidth)\n    },\n\n    closeNotch() {\n      this.foundation.closeNotch()\n    },\n    float(shouldFloat) {\n      this.$refs.labelEl && this.$refs.labelEl.float(shouldFloat)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcNotchedOutline from './mdc-notched-outline.vue'\n\nexport { mdcNotchedOutline }\n\nexport default BasePlugin({\n  mdcNotchedOutline\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n}\n\nexport default MDCRadioFoundation;\n","<template>\n  <div :class=\"formFieldClasses\" class=\"mdc-radio-wrapper\">\n    <div ref=\"root\" :class=\"classes\" :style=\"styles\" class=\"mdc-radio\">\n      <input\n        ref=\"control\"\n        :id=\"vma_uid_\"\n        :name=\"name\"\n        type=\"radio\"\n        class=\"mdc-radio__native-control\"\n        @change=\"sync\"\n      />\n\n      <div class=\"mdc-radio__background\">\n        <div class=\"mdc-radio__outer-circle\" />\n        <div class=\"mdc-radio__inner-circle\" />\n      </div>\n    </div>\n    <label ref=\"label\" :for=\"vma_uid_\"\n      ><slot>{{ label }}</slot></label\n    >\n  </div>\n</template>\n\n<script>\nimport MDCRadioFoundation from '@material/radio/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\nimport { RippleBase } from '../ripple'\nimport { applyPassive } from '../base'\n\nexport default {\n  name: 'mdc-radio',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'picked',\n    event: 'change'\n  },\n  props: {\n    name: { type: String, required: true },\n    value: String,\n    picked: String,\n    checked: Boolean,\n    label: String,\n    'align-end': Boolean,\n    disabled: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {},\n      formFieldClasses: {\n        'mdc-form-field': this.label,\n        'mdc-form-field--align-end': this.label && this.alignEnd\n      }\n    }\n  },\n  watch: {\n    checked: 'setChecked',\n    picked: 'onPicked',\n    disabled(value) {\n      this.foundation.setDisabled(value)\n    }\n  },\n  mounted() {\n    // add foundation\n    this.foundation = new MDCRadioFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n\n      setNativeControlDisabled: disabled =>\n        (this.$refs.control.disabled = disabled)\n    })\n\n    // add ripple\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n\n      // Radio buttons technically go \"active\" whenever there is *any* keyboard interaction. This is not the\n      // UI we desire.\n      isSurfaceActive: () => false,\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler, applyPassive())\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      }\n    })\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.control.value = this.value || this.label\n\n    this.setChecked(this.checked || this.picked == this.$refs.control.value)\n\n    // refresh model\n    this.checked && this.sync()\n  },\n  beforeDestroy() {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    onPicked(nv) {\n      this.setChecked(this.picked == this.$refs.control.value)\n    },\n    setChecked(checked) {\n      this.$refs.control.checked = checked\n    },\n    isChecked() {\n      return this.$refs.control.checked\n    },\n    sync(evt) {\n      this.$emit('change', this.$refs.control.value)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcRadio from './mdc-radio.vue'\n\nexport { mdcRadio }\n\nexport default BasePlugin({\n  mdcRadio\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n  FOCUSED: 'mdc-select--focused',\n  SELECTED_ITEM_CLASS: 'mdc-list-item--selected',\n  WITH_LEADING_ICON: 'mdc-select--with-leading-icon',\n  INVALID: 'mdc-select--invalid',\n  REQUIRED: 'mdc-select--required',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  CHANGE_EVENT: 'MDCSelect:change',\n  SELECTED_ITEM_SELECTOR: `.${cssClasses.SELECTED_ITEM_CLASS}`,\n  LEADING_ICON_SELECTOR: '.mdc-select__icon',\n  SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',\n  HIDDEN_INPUT_SELECTOR: 'input[type=\"hidden\"]',\n  MENU_SELECTOR: '.mdc-select__menu',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  ENHANCED_VALUE_ATTR: 'data-value',\n  ARIA_SELECTED_ATTR: 'aria-selected',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectAdapter, FoundationMapType} from './adapter';\nimport {MDCSelectIconFoundation} from './icon/index';\nimport {MDCSelectHelperTextFoundation} from './helper-text/index';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectAdapter>}\n * @final\n */\nclass MDCSelectFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      setValue: () => {},\n      getValue: () => {},\n      floatLabel: (/* value: boolean */) => {},\n      getLabelWidth: () => {},\n      hasOutline: () => false,\n      notchOutline: (/* labelWidth: number, */) => {},\n      closeOutline: () => {},\n      openMenu: () => {},\n      closeMenu: () => {},\n      isMenuOpen: () => {},\n      setSelectedIndex: () => {},\n      setDisabled: () => {},\n      setRippleCenter: () => {},\n      notifyChange: () => {},\n      checkValidity: () => {},\n      setValid: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCSelectIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCSelectHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.closeMenu();\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    const didChange = true;\n    this.handleChange(didChange);\n  }\n\n  getValue() {\n    return this.adapter_.getValue();\n  }\n\n  setDisabled(isDisabled) {\n    isDisabled ? this.adapter_.addClass(cssClasses.DISABLED) : this.adapter_.removeClass(cssClasses.DISABLED);\n    this.adapter_.setDisabled(isDisabled);\n    this.adapter_.closeMenu();\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  layout() {\n    const openNotch = this.getValue().length > 0;\n    this.notchOutline(openNotch);\n  }\n\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n  handleChange(didChange = true) {\n    const value = this.getValue();\n    const optionHasValue = value.length > 0;\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    this.notchOutline(optionHasValue);\n\n    if (!this.adapter_.hasClass(cssClasses.FOCUSED)) {\n      this.adapter_.floatLabel(optionHasValue);\n    }\n\n    if (didChange) {\n      this.adapter_.notifyChange(value);\n\n      if (isRequired) {\n        this.setValid(this.isValid());\n        if (this.helperText_) {\n          this.helperText_.setValidity(this.isValid());\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles focus events from select element.\n   */\n  handleFocus() {\n    this.adapter_.addClass(cssClasses.FOCUSED);\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Handles blur events from select element.\n   */\n  handleBlur() {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.removeClass(cssClasses.FOCUSED);\n    this.handleChange(false);\n    this.adapter_.deactivateBottomLine();\n\n    const isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    if (isRequired) {\n      this.setValid(this.isValid());\n      if (this.helperText_) {\n        this.helperText_.setValidity(this.isValid());\n      }\n    }\n  }\n\n  handleClick(normalizedX) {\n    if (this.adapter_.isMenuOpen()) return;\n    this.adapter_.setRippleCenter(normalizedX);\n\n    this.adapter_.openMenu();\n  }\n\n  handleKeydown(event) {\n    if (this.adapter_.isMenuOpen()) return;\n\n    const isEnter = event.key === 'Enter' || event.keyCode === 13;\n    const isSpace = event.key === 'Space' || event.keyCode === 32;\n    const arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n    const arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n    if (this.adapter_.hasClass(cssClasses.FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {\n      this.adapter_.openMenu();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n    const isFocused = this.adapter_.hasClass(cssClasses.FOCUSED);\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else if (!isFocused) {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  setValid(isValid) {\n    this.adapter_.setValid(isValid);\n  }\n\n  isValid() {\n    return this.adapter_.checkValidity();\n  }\n}\n\nexport default MDCSelectFoundation;\n","<template>\n  <div :id=\"id\" :class=\"rootClasses\" :style=\"styles\">\n    <i class=\"mdc-select__dropdown-icon\"></i>\n    <select\n      ref=\"native_control\"\n      :disabled=\"disabled\"\n      v-bind=\"$attrs\"\n      class=\"mdc-select__native-control\"\n      v-on=\"listeners\"\n    >\n      <option v-if=\"!value\" class=\"mdc-option\" value=\"\" disabled selected />\n      <slot />\n    </select>\n    <mdc-floating-label v-if=\"!outlined\" ref=\"labelEl\">{{\n      label\n    }}</mdc-floating-label>\n    <mdc-line-ripple v-if=\"!outlined\" ref=\"lineRippleEl\" />\n    <mdc-notched-outline v-if=\"outlined\" ref=\"outlineEl\">{{\n      label\n    }}</mdc-notched-outline>\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\n\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-select',\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select': true,\n        'mdc-select--outlined': this.outlined,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.handleChange(event),\n        blur: event => this.handleBlur(event),\n        focus: event => this.handleFocus(event),\n        mousedown: event => this.handleClick(event),\n        touchstart: event => this.handleClick(event)\n      }\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.updateDisabledStyle(value)\n    },\n    value: 'refreshIndex'\n  },\n\n  mounted() {\n    this.foundation = new MDCSelectFoundation({\n      // common methods\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => Boolean(this.classes[className]),\n      setRippleCenter: normalizedX =>\n        this.$refs.lineRippleEl &&\n        this.$refs.lineRippleEl.setRippleCenter(normalizedX),\n      activateBottomLine: () => {\n        if (this.$refs.lineRippleEl) {\n          this.$refs.lineRippleEl.foundation.activate()\n        }\n      },\n      deactivateBottomLine: () => {\n        if (this.$refs.lineRippleEl) {\n          this.$refs.lineRippleEl.foundation.deactivate()\n        }\n      },\n\n      notifyChange: value => {\n        const index = this.selectedIndex\n        emitCustomEvent(\n          this.$el,\n          MDCSelectFoundation.strings.CHANGE_EVENT,\n          { value, index },\n          true /* shouldBubble  */\n        )\n\n        this.$emit('change', value)\n      },\n\n      // native methods\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n      openMenu: () => {},\n      closeMenu: () => {},\n      isMenuOpen: () => false,\n      setSelectedIndex: index => {\n        this.$refs.native_control.selectedIndex = index\n      },\n      setDisabled: isDisabled =>\n        (this.$refs.native_control.disabled = isDisabled),\n      setValid: isValid => {\n        isValid\n          ? this.$delete(this.classes, MDCSelectFoundation.cssClasses.INVALID)\n          : this.set(this.classes, MDCSelectFoundation.cssClasses.INVALID)\n      },\n      checkValidity: () => this.$refs.native_control.checkValidity(),\n\n      // outline methods\n\n      hasOutline: () => this.outlined,\n      notchOutline: labelWidth => {\n        if (this.$refs.outlineEl) {\n          this.$refs.outlineEl.notch(labelWidth)\n        }\n      },\n      closeOutline: () => {\n        if (this.$refs.outlineEl) {\n          this.$refs.outlineEl.closeNotch()\n        }\n      },\n\n      // label methods\n      floatLabel: value => {\n        if (this.$refs.labelEl) {\n          this.$refs.labelEl.float(value)\n        } else {\n          this.$refs.outlineEl.float(value)\n        }\n      },\n\n      getLabelWidth: () => {\n        if (this.$refs.labelEl) {\n          return this.$refs.labelEl.getWidth()\n        }\n      }\n    })\n\n    this.foundation.init()\n    this.foundation.handleChange(false)\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n\n  methods: {\n    handleChange() {\n      this.foundation.handleChange(true)\n    },\n\n    handleFocus() {\n      this.foundation.handleFocus()\n    },\n\n    handleBlur() {\n      this.foundation.handleBlur()\n    },\n\n    handleClick(evt) {\n      this.foundation.handleClick(this.getNormalizedXCoordinate(evt))\n    },\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.$refs.native_control.selectedIndex = idx\n        this.foundation.handleChange(false)\n      }\n    },\n\n    getNormalizedXCoordinate(evt) {\n      const targetClientRect = evt.target.getBoundingClientRect()\n      const xCoordinate = evt.clientX\n      return xCoordinate - targetClientRect.left\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSelect from './mdc-select.vue'\n\nexport { mdcSelect }\n\nexport default BasePlugin({\n  mdcSelect\n})\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","<template>\n  <div\n    :class=\"classes\"\n    class=\"mdc-slider\"\n    tabindex=\"0\"\n    role=\"slider\">\n    <div class=\"mdc-slider__track-container\">\n      <div\n        :style=\"trackStyles\"\n        class=\"mdc-slider__track\"/>\n      <div\n        v-if=\"hasMarkers\"\n        class=\"mdc-slider__track-marker-container\">\n        <div\n          v-for=\"markerNum in numMarkers\"\n          :key=\"markerNum\"\n          :style=\"(markerNum == numMarkers) ? lastTrackMarkersStyles : {}\"\n          class=\"mdc-slider__track-marker\"\n        />\n      </div>\n    </div>\n    <div\n      ref=\"thumbContainer\"\n      :style=\"thumbStyles\"\n      class=\"mdc-slider__thumb-container\">\n      <div\n        v-if=\"isDiscrete\"\n        class=\"mdc-slider__pin\">\n        <span class=\"mdc-slider__pin-value-marker\">{{ markerValue }}</span>\n      </div>\n      <svg\n        class=\"mdc-slider__thumb\"\n        width=\"21\"\n        height=\"21\">\n        <circle\n          cx=\"10.5\"\n          cy=\"10.5\"\n          r=\"7.875\"/>\n      </svg>\n      <div class=\"mdc-slider__focus-ring\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSliderFoundation from '@material/slider/foundation'\nimport { DispatchFocusMixin, applyPassive } from '../base'\n\nexport default {\n  name: 'mdc-slider',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: [Number, String],\n    min: { type: [Number, String], default: 0 },\n    max: { type: [Number, String], default: 100 },\n    step: { type: [Number, String], default: 0 },\n    displayMarkers: Boolean,\n    disabled: Boolean,\n    layoutOn: String,\n    layoutOnSource: { type: Object, required: false }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-slider--discrete': !!this.step,\n        'mdc-slider--display-markers': this.displayMarkers\n      },\n      trackStyles: {},\n      lastTrackMarkersStyles: {},\n      thumbStyles: {},\n      markerValue: '',\n      numMarkers: 0\n    }\n  },\n  computed: {\n    isDiscrete() {\n      return !!this.step\n    },\n    hasMarkers() {\n      return !!this.step && this.displayMarkers && this.numMarkers\n    }\n  },\n  watch: {\n    value() {\n      if (this.foundation.getValue() !== Number(this.value)) {\n        this.foundation.setValue(this.value)\n      }\n    },\n    min() {\n      this.foundation.setMin(Number(this.min))\n    },\n    max() {\n      this.foundation.setMax(Number(this.max))\n    },\n    step() {\n      this.foundation.setStep(Number(this.step))\n    },\n    disabled() {\n      this.foundation.setDisabled(this.disabled)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCSliderFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className, true)\n      },\n      getAttribute: name => this.$el.getAttribute(name),\n      setAttribute: (name, value) => this.$el.setAttribute(name, value),\n      removeAttribute: name => this.$el.removeAttribute(name),\n      computeBoundingRect: () => this.$el.getBoundingClientRect(),\n      getTabIndex: () => this.$el.tabIndex,\n      registerInteractionHandler: (type, handler) => {\n        this.$el.addEventListener(type, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$el.removeEventListener(type, handler, applyPassive())\n      },\n      registerThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.addEventListener(\n          type,\n          handler,\n          applyPassive()\n        )\n      },\n      deregisterThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.removeEventListener(\n          type,\n          handler,\n          applyPassive()\n        )\n      },\n      registerBodyInteractionHandler: (type, handler) => {\n        document.body.addEventListener(type, handler)\n      },\n      deregisterBodyInteractionHandler: (type, handler) => {\n        document.body.removeEventListener(type, handler)\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      },\n      notifyInput: () => {\n        this.$emit('input', this.foundation.getValue())\n      },\n      notifyChange: () => {\n        this.$emit('change', this.foundation.getValue())\n      },\n      setThumbContainerStyleProperty: (propertyName, value) => {\n        this.$set(this.thumbStyles, propertyName, value)\n      },\n      setTrackStyleProperty: (propertyName, value) => {\n        this.$set(this.trackStyles, propertyName, value)\n      },\n      setMarkerValue: value => {\n        this.markerValue = value\n      },\n      appendTrackMarkers: numMarkers => {\n        this.numMarkers = numMarkers\n      },\n      removeTrackMarkers: () => {\n        this.numMarkers = 0\n      },\n      setLastTrackMarkersStyleProperty: (propertyName, value) => {\n        this.$set(this.lastTrackMarkersStyles, propertyName, value)\n      },\n      isRTL: () => false\n    })\n\n    this.foundation.init()\n    this.foundation.setDisabled(this.disabled)\n    if (Number(this.min) <= this.foundation.getMax()) {\n      this.foundation.setMin(Number(this.min))\n      this.foundation.setMax(Number(this.max))\n    } else {\n      this.foundation.setMax(Number(this.max))\n      this.foundation.setMin(Number(this.min))\n    }\n    this.foundation.setStep(Number(this.step))\n    this.foundation.setValue(Number(this.value))\n    if (this.hasMarkers) {\n      this.foundation.setupTrackMarker()\n    }\n\n    this.$root.$on('vma:layout', this.layout)\n\n    if (this.layoutOn) {\n      this.layoutOnEventSource = this.layoutOnSource || this.$root\n      this.layoutOnEventSource.$on(this.layoutOn, this.layout)\n    }\n  },\n  beforeDestroy() {\n    this.$root.$off('vma:layout', this.layout)\n    if (this.layoutOnEventSource) {\n      this.layoutOnEventSource.$off(this.layoutOn, this.layout)\n    }\n    this.foundation.destroy()\n  },\n  methods: {\n    layout() {\n      this.$nextTick(() => {\n        this.foundation && this.foundation.layout()\n      })\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSlider from './mdc-slider.vue'\n\nexport { mdcSlider }\n\nexport default BasePlugin({\n  mdcSlider\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  OPENING: 'mdc-snackbar--opening',\n  OPEN: 'mdc-snackbar--open',\n  CLOSING: 'mdc-snackbar--closing',\n};\n\nconst strings = {\n  SURFACE_SELECTOR: '.mdc-snackbar__surface',\n  LABEL_SELECTOR: '.mdc-snackbar__label',\n  ACTION_SELECTOR: '.mdc-snackbar__action',\n  DISMISS_SELECTOR: '.mdc-snackbar__dismiss',\n\n  OPENING_EVENT: 'MDCSnackbar:opening',\n  OPENED_EVENT: 'MDCSnackbar:opened',\n  CLOSING_EVENT: 'MDCSnackbar:closing',\n  CLOSED_EVENT: 'MDCSnackbar:closed',\n\n  REASON_ACTION: 'action',\n  REASON_DISMISS: 'dismiss',\n\n  ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text',\n};\n\nconst numbers = {\n  MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,\n  MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,\n  DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,\n\n  // These variables need to be kept in sync with the values in _variables.scss.\n  SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,\n  SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,\n\n  /**\n   * Number of milliseconds to wait between temporarily clearing the label text\n   * in the DOM and subsequently restoring it. This is necessary to force IE 11\n   * to pick up the `aria-live` content change and announce it to the user.\n   */\n  ARIA_LIVE_DELAY_MS: 1000,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [\"error\", {\"argsIgnorePattern\": \"evt\", \"varsIgnorePattern\": \"Adapter$\"}] */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSnackbarAdapter from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\n\nconst {OPENING, OPEN, CLOSING} = cssClasses;\nconst {REASON_ACTION, REASON_DISMISS} = strings;\n\nclass MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @return {!MDCSnackbarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSnackbarAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      announce: () => {},\n      notifyOpening: () => {},\n      notifyOpened: () => {},\n      notifyClosing: (/* reason: string */) => {},\n      notifyClosed: (/* reason: string */) => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSnackbarAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.isOpen_ = false;\n\n    /** @private {number} */\n    this.animationFrame_ = 0;\n\n    /** @private {number} */\n    this.animationTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimer_ = 0;\n\n    /** @private {number} */\n    this.autoDismissTimeoutMs_ = numbers.DEFAULT_AUTO_DISMISS_TIMEOUT_MS;\n\n    /** @private {boolean} */\n    this.closeOnEscape_ = true;\n  }\n\n  destroy() {\n    this.clearAutoDismissTimer_();\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(OPENING);\n    this.adapter_.removeClass(OPEN);\n    this.adapter_.removeClass(CLOSING);\n  }\n\n  open() {\n    this.clearAutoDismissTimer_();\n    this.isOpen_ = true;\n    this.adapter_.notifyOpening();\n    this.adapter_.removeClass(CLOSING);\n    this.adapter_.addClass(OPENING);\n    this.adapter_.announce();\n\n    // Wait a frame once display is no longer \"none\", to establish basis for animation\n    this.runNextAnimationFrame_(() => {\n      this.adapter_.addClass(OPEN);\n\n      this.animationTimer_ = setTimeout(() => {\n        this.handleAnimationTimerEnd_();\n        this.adapter_.notifyOpened();\n        this.autoDismissTimer_ = setTimeout(() => {\n          this.close(REASON_DISMISS);\n        }, this.getTimeoutMs());\n      }, numbers.SNACKBAR_ANIMATION_OPEN_TIME_MS);\n    });\n  }\n\n  /**\n   * @param {string=} reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n   *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n   *     client-specific values may also be used if desired.\n   */\n  close(reason = '') {\n    if (!this.isOpen_) {\n      // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed\n      return;\n    }\n\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    this.clearAutoDismissTimer_();\n\n    this.isOpen_ = false;\n    this.adapter_.notifyClosing(reason);\n    this.adapter_.addClass(cssClasses.CLOSING);\n    this.adapter_.removeClass(cssClasses.OPEN);\n    this.adapter_.removeClass(cssClasses.OPENING);\n\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = setTimeout(() => {\n      this.handleAnimationTimerEnd_();\n      this.adapter_.notifyClosed(reason);\n    }, numbers.SNACKBAR_ANIMATION_CLOSE_TIME_MS);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   * @return {number}\n   */\n  getTimeoutMs() {\n    return this.autoDismissTimeoutMs_;\n  }\n\n  /**\n   * @param {number} timeoutMs\n   */\n  setTimeoutMs(timeoutMs) {\n    // Use shorter variable names to make the code more readable\n    const minValue = numbers.MIN_AUTO_DISMISS_TIMEOUT_MS;\n    const maxValue = numbers.MAX_AUTO_DISMISS_TIMEOUT_MS;\n\n    if (timeoutMs <= maxValue && timeoutMs >= minValue) {\n      this.autoDismissTimeoutMs_ = timeoutMs;\n    } else {\n      throw new Error(`timeoutMs must be an integer in the range ${minValue}–${maxValue}, but got '${timeoutMs}'`);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getCloseOnEscape() {\n    return this.closeOnEscape_;\n  }\n\n  /**\n   * @param {boolean} closeOnEscape\n   */\n  setCloseOnEscape(closeOnEscape) {\n    this.closeOnEscape_ = closeOnEscape;\n  }\n\n  /**\n   * @param {!KeyboardEvent} evt\n   */\n  handleKeyDown(evt) {\n    if (this.getCloseOnEscape() && (evt.key === 'Escape' || evt.keyCode === 27)) {\n      this.close(REASON_DISMISS);\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionButtonClick(evt) {\n    this.close(REASON_ACTION);\n  }\n\n  /**\n   * @param {!MouseEvent} evt\n   */\n  handleActionIconClick(evt) {\n    this.close(REASON_DISMISS);\n  }\n\n  /** @private */\n  clearAutoDismissTimer_() {\n    clearTimeout(this.autoDismissTimer_);\n    this.autoDismissTimer_ = 0;\n  }\n\n  /** @private */\n  handleAnimationTimerEnd_() {\n    this.animationTimer_ = 0;\n    this.adapter_.removeClass(cssClasses.OPENING);\n    this.adapter_.removeClass(cssClasses.CLOSING);\n  }\n\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   * @param {Function} callback\n   * @private\n   */\n  runNextAnimationFrame_(callback) {\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(() => {\n      this.animationFrame_ = 0;\n      clearTimeout(this.animationTimer_);\n      this.animationTimer_ = setTimeout(callback, 0);\n    });\n  }\n}\n\nexport default MDCSnackbarFoundation;\n","<template>\n  <div ref=\"root\" :class=\"classes\" class=\"mdc-snackbar\">\n    <div class=\"mdc-snackbar__surface\" @click=\"surfaceClickHandler\">\n      <div\n        ref=\"labelEl\"\n        class=\"mdc-snackbar__label\"\n        role=\"status\"\n        aria-live=\"polite\"\n      >\n        <template v-if=\"showLabelText\">\n          {{ labelText }}\n        </template>\n        <span style=\"display: inline-block; width: 0; height: 1px;\" v-else\n          >&nbsp;</span\n        >\n      </div>\n      <div class=\"mdc-snackbar__actions\">\n        <button\n          ref=\"actionEl\"\n          type=\"button\"\n          class=\"mdc-button mdc-snackbar__action\"\n          v-on=\"$listeners\"\n        >\n          {{ actionText }}\n        </button>\n\n        <button\n          class=\"mdc-icon-button mdc-snackbar__dismiss material-icons\"\n          title=\"Dismiss\"\n          v-if=\"showDismissAction\"\n        >\n          close\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation'\nimport { getCorrectEventName } from '@material/animation/index'\nimport * as ponyfill from '@material/dom/ponyfill'\n\nexport default {\n  name: 'mdc-snackbar',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: Boolean,\n    stacked: Boolean,\n    leading: Boolean,\n    labelText: String,\n    actionText: String,\n    timeoutMs: [String, Number],\n\n    dismissAction: { type: [String, Boolean], default: true }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-snackbar--leading': this.leading,\n\n        'mdc-snackbar--stacked': this.stacked\n      },\n      hidden: false,\n      actionHidden: false,\n      showLabelText: true\n    }\n  },\n  watch: {\n    open: 'onOpen_',\n\n    timeoutMs: 'onTimeoutMs_'\n  },\n  mounted() {\n    window.addEventListener('keydown', this.handleKeydownEvent)\n\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      announce: () => this.announce(this.$refs.labelEl),\n      notifyOpening: () =>\n        this.$emit(MDCSnackbarFoundation.strings.OPENING_EVENT, {}),\n      notifyOpened: () => {\n        this.$emit(MDCSnackbarFoundation.strings.OPENED_EVENT, {})\n        this.$emit('change', true)\n        this.$emit('show', {})\n      },\n      notifyClosing: reason =>\n        this.$emit(\n          MDCSnackbarFoundation.strings.CLOSING_EVENT,\n          reason ? { reason } : {}\n        ),\n      notifyClosed: reason => {\n        this.$emit(\n          MDCSnackbarFoundation.strings.CLOSED_EVENT,\n          reason ? { reason } : {}\n        )\n        this.$emit('change', false)\n        this.$emit('hide')\n      }\n    })\n    this.foundation.init()\n\n    if (this.timeoutMs !== void 0) {\n      this.foundation.setTimeoutMs(this.timeoutMs)\n    }\n  },\n  computed: {\n    showDismissAction() {\n      return typeof this.dismissAction === 'string'\n        ? this.dismissAction != 'false'\n        : this.dismissAction\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('keydown', this.handleKeydownEvent)\n    this.foundation.destroy()\n  },\n  methods: {\n    onTimeoutMs_(value) {\n      if (value !== void 0) {\n        this.foundation.setTimeoutMs(value)\n      }\n    },\n    onOpen_(value) {\n      if (value) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    surfaceClickHandler(evt) {\n      if (this.isActionButton_(evt.target)) {\n        this.foundation.handleActionButtonClick(evt)\n      } else if (this.isActionIcon_(evt.target)) {\n        this.foundation.handleActionIconClick(evt)\n      }\n    },\n\n    handleKeydownEvent(evt) {\n      this.foundation.handleKeyDown(evt)\n    },\n\n    isActionButton_(target) {\n      return Boolean(\n        ponyfill.closest(target, MDCSnackbarFoundation.strings.ACTION_SELECTOR)\n      )\n    },\n\n    isActionIcon_(target) {\n      return Boolean(\n        ponyfill.closest(target, MDCSnackbarFoundation.strings.DISMISS_SELECTOR)\n      )\n    },\n\n    announce(ariaEl, labelEl = ariaEl) {\n      const priority = ariaEl.getAttribute('aria-live')\n\n      const text = this.labelText\n      if (!text) {\n        return\n      }\n\n      // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.\n      ariaEl.setAttribute('aria-live', 'off')\n\n      // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.\n      // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars\n      // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.\n      // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,\n      // so screen readers won't announce the second message unless we first clear `textContent`.\n      //\n      // We have to clear the label text two different ways to make it work in all browsers and screen readers:\n      //\n      //   1. `textContent = ''` is required for IE11 + JAWS\n      //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA\n      //\n      // All other browser/screen reader combinations support both methods.\n      //\n      // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.\n      // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.\n      //\n      // This technique has been tested in:\n      //\n      //   * JAWS 2019:\n      //       - Chrome 70\n      //       - Firefox 60 (ESR)\n      //       - IE 11\n      //   * NVDA 2018:\n      //       - Chrome 70\n      //       - Firefox 60 (ESR)\n      //       - IE 11\n      //   * ChromeVox 53\n      this.showLabelText = false\n\n      // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.\n      // CSS generated content is normally announced by screen readers\n      // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);\n      // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.\n      labelEl.setAttribute(\n        MDCSnackbarFoundation.strings.ARIA_LIVE_LABEL_TEXT_ATTR,\n        this.labelText\n      )\n\n      setTimeout(() => {\n        // Allow screen readers to announce changes to the DOM again.\n        ariaEl.setAttribute('aria-live', priority)\n\n        // Remove the message from the ::before pseudo-element.\n        labelEl.removeAttribute(\n          MDCSnackbarFoundation.strings.ARIA_LIVE_LABEL_TEXT_ATTR\n        )\n\n        // Restore the original label text, which will be announced by screen readers.\n        this.showLabelText = true\n      }, MDCSnackbarFoundation.numbers.ARIA_LIVE_DELAY_MS)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSnackbar from './mdc-snackbar.vue'\n\nexport { mdcSnackbar }\n\nexport default BasePlugin({\n  mdcSnackbar\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKED: 'mdc-switch--checked',\n  DISABLED: 'mdc-switch--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',\n  RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay',\n};\n\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSwitchAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSwitchAdapter>}\n */\nclass MDCSwitchFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return {!MDCSwitchAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSwitchAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlChecked: (/* checked: boolean */) => {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSwitchFoundation.defaultAdapter, adapter));\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.adapter_.setNativeControlChecked(checked);\n    this.updateCheckedStyling_(checked);\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the change event for the switch native control.\n   * @param {!Event} evt\n   */\n  handleChange(evt) {\n    this.updateCheckedStyling_(evt.target.checked);\n  }\n\n  /**\n   * Updates the styling of the switch based on its checked state.\n   * @param {boolean} checked\n   * @private\n   */\n  updateCheckedStyling_(checked) {\n    if (checked) {\n      this.adapter_.addClass(cssClasses.CHECKED);\n    } else {\n      this.adapter_.removeClass(cssClasses.CHECKED);\n    }\n  }\n}\n\nexport default MDCSwitchFoundation;\n","<template>\n  <div\n    :class=\"{\n      'mdc-form-field': hasLabel,\n      'mdc-form-field--align-end': hasLabel && alignEnd\n    }\"\n    class=\"mdc-switch-wrapper\" >\n\n    <div\n      :class=\"classes\"\n      :styles=\"styles\"\n      class=\"mdc-switch\">\n      <div class=\"mdc-switch__track\" />\n      <div class=\"mdc-switch__thumb-underlay\">\n        <div class=\"mdc-switch__thumb\">\n          <input\n            ref=\"control\"\n            :name=\"name\"\n            :id=\"vma_uid_\"\n            :value=\"value\"\n            type=\"checkbox\"\n            role=\"switch\"\n            class=\"mdc-switch__native-control\"\n            @change=\"onChanged\" >\n\n        </div>\n      </div>\n    </div>\n\n    <label\n      v-if=\"hasLabel\"\n      :for=\"vma_uid_\"\n      class=\"mdc-switch-label\">\n      <slot>{{ label }}</slot>\n    </label>\n\n  </div>\n</template>\n\n<script>\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\nimport { RippleBase } from '../ripple'\nimport MDCSwitchFoundation from '@material/switch/foundation'\n\nexport default {\n  name: 'mdc-switch',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    checked: Boolean,\n    disabled: Boolean,\n    value: String,\n    label: String,\n    alignEnd: Boolean,\n    name: String\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default\n    }\n  },\n  watch: {\n    checked(value) {\n      this.foundation && this.foundation.setChecked(value)\n    },\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value)\n    }\n  },\n\n  mounted() {\n    this.foundation = new MDCSwitchFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setNativeControlChecked: checked =>\n        (this.$refs.control.checked = checked),\n      setNativeControlDisabled: disabled =>\n        (this.$refs.control.disabled = disabled)\n    })\n    this.foundation.init()\n    this.foundation.setChecked(this.checked)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    onChanged(event) {\n      this.foundation && this.foundation.handleChange(event)\n      this.$emit('change', event.target.checked)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSwitch from './mdc-switch.vue'\n\nexport { mdcSwitch }\n\nexport default BasePlugin({\n  mdcSwitch\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\n/** @enum {string} */\nconst strings = {\n  ARIA_SELECTED: 'aria-selected',\n  RIPPLE_SELECTOR: '.mdc-tab__ripple',\n  CONTENT_SELECTOR: '.mdc-tab__content',\n  TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n  TABINDEX: 'tabIndex',\n  INTERACTED_EVENT: 'MDCTab:interacted',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabAdapter, MDCTabDimensions} from './adapter';\n/* eslint-enable no-unused-vars */\n\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabAdapter>}\n * @final\n */\nclass MDCTabFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabAdapter for typing information\n   * @return {!MDCTabAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      activateIndicator: () => {},\n      deactivateIndicator: () => {},\n      notifyInteracted: () => {},\n      getOffsetLeft: () => {},\n      getOffsetWidth: () => {},\n      getContentOffsetLeft: () => {},\n      getContentOffsetWidth: () => {},\n      focus: () => {},\n    });\n  }\n\n  /** @param {!MDCTabAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.focusOnActivate_ = true;\n  }\n\n  /**\n   * Handles the \"click\" event\n   */\n  handleClick() {\n    // It's up to the parent component to keep track of the active Tab and\n    // ensure we don't activate a Tab that's already active.\n    this.adapter_.notifyInteracted();\n  }\n\n  /**\n   * Returns the Tab's active state\n   * @return {boolean}\n   */\n  isActive() {\n    return this.adapter_.hasClass(cssClasses.ACTIVE);\n  }\n\n  /**\n   * Sets whether the tab should focus itself when activated\n   * @param {boolean} focusOnActivate\n   */\n  setFocusOnActivate(focusOnActivate) {\n    this.focusOnActivate_ = focusOnActivate;\n  }\n\n  /**\n   * Activates the Tab\n   * @param {!ClientRect=} previousIndicatorClientRect\n   */\n  activate(previousIndicatorClientRect) {\n    this.adapter_.addClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'true');\n    this.adapter_.setAttr(strings.TABINDEX, '0');\n    this.adapter_.activateIndicator(previousIndicatorClientRect);\n    if (this.focusOnActivate_) {\n      this.adapter_.focus();\n    }\n  }\n\n  /**\n   * Deactivates the Tab\n   */\n  deactivate() {\n    // Early exit\n    if (!this.isActive()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.ACTIVE);\n    this.adapter_.setAttr(strings.ARIA_SELECTED, 'false');\n    this.adapter_.setAttr(strings.TABINDEX, '-1');\n    this.adapter_.deactivateIndicator();\n  }\n\n  /**\n   * Returns the dimensions of the Tab\n   * @return {!MDCTabDimensions}\n   */\n  computeDimensions() {\n    const rootWidth = this.adapter_.getOffsetWidth();\n    const rootLeft = this.adapter_.getOffsetLeft();\n    const contentWidth = this.adapter_.getContentOffsetWidth();\n    const contentLeft = this.adapter_.getContentOffsetLeft();\n\n    return {\n      rootLeft,\n      rootRight: rootLeft + rootWidth,\n      contentLeft: rootLeft + contentLeft,\n      contentRight: rootLeft + contentLeft + contentWidth,\n    };\n  }\n}\n\nexport default MDCTabFoundation;\n","<template>\r\n  <custom-link\r\n    :class=\"classes\"\r\n    :style=\"styles\"\r\n    :link=\"link\"\r\n    class=\"mdc-tab\"\r\n    @click=\"handleClick\"\r\n    role=\"tab\"\r\n    aria-selected=\"false\"\r\n    tabindex=\"-1\"\r\n  >\r\n    <span ref=\"content\" class=\"mdc-tab__content\">\r\n      <i\r\n        v-if=\"!!hasIcon\"\r\n        ref=\"icon\"\r\n        :class=\"hasIcon.classes\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-tab__icon\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n      </i>\r\n\r\n      <span v-if=\"hasText\" class=\"mdc-tab__text-label\"> <slot /> </span>\r\n    </span>\r\n\r\n    <mdc-tab-indicator ref=\"tabIndicator\"></mdc-tab-indicator>\r\n    <mdc-tab-ripple></mdc-tab-ripple>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tab/foundation'\r\nimport {\r\n  CustomLinkMixin,\r\n  DispatchEventMixin,\r\n  emitCustomEvent,\r\n  extractIconProp\r\n} from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object],\r\n    stacked: Boolean,\r\n    minWidth: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-tab--stacked': this.stacked,\r\n        'mdc-tab--min-width': this.minWidth\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n\r\n  inject: ['mdcTabBar'],\r\n  computed: {\r\n    hasIcon() {\r\n      if (this.icon || this.$slots.icon) {\r\n        return this.icon ? extractIconProp(this.icon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasText() {\r\n      return !!this.$slots.default\r\n    }\r\n  },\r\n  watch: {\r\n    active(value) {}\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCTabFoundation({\r\n      setAttr: (attr, value) => this.$el.setAttribute(attr, value),\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      hasClass: className => this.$el.classList.contains(className),\r\n      activateIndicator: previousIndicatorClientRect => {\r\n        this.$refs.tabIndicator.activate(previousIndicatorClientRect)\r\n      },\r\n      deactivateIndicator: () => {\r\n        this.$refs.tabIndicator.deactivate()\r\n      },\r\n      notifyInteracted: () =>\r\n        emitCustomEvent(\r\n          this.$el,\r\n          MDCTabFoundation.strings.INTERACTED_EVENT,\r\n          { tab: this },\r\n          true /* bubble */\r\n        ),\r\n      getOffsetLeft: () => this.$el.offsetLeft,\r\n      getOffsetWidth: () => this.$el.offsetWidth,\r\n      getContentOffsetLeft: () => this.$refs.content.offsetLeft,\r\n      getContentOffsetWidth: () => this.$refs.content.offsetWidth,\r\n      focus: () => this.$el.focus()\r\n    })\r\n    this.foundation.init()\r\n\r\n    // console.log('tab mounted')\r\n\r\n    this.mdcTabBar.tabList.push(this)\r\n\r\n    // this.setActive(this.active)\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy()\r\n  },\r\n  methods: {\r\n    activate(computeIndicatorClientRect) {\r\n      this.foundation.activate(computeIndicatorClientRect)\r\n    },\r\n\r\n    deactivate() {\r\n      this.foundation.deactivate()\r\n    },\r\n    handleClick(evt) {\r\n      this.foundation.handleClick(evt)\r\n    },\r\n    isActive() {\r\n      return this.foundation.isActive()\r\n    },\r\n    setActive(isActive) {\r\n      if (isActive) {\r\n        this.$set(this.classes, 'mdc-tab--active', true),\r\n          this.$refs.tabIndicator.activate()\r\n      }\r\n    },\r\n    computeIndicatorClientRect() {\r\n      return this.$refs.tabIndicator.computeContentClientRect()\r\n    },\r\n\r\n    computeDimensions() {\r\n      return this.foundation.computeDimensions()\r\n    },\r\n\r\n    focus() {\r\n      this.$el.focus()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n  TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n  TAB_SELECTOR: '.mdc-tab',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  END_KEY: 'End',\n  HOME_KEY: 'Home',\n  ENTER_KEY: 'Enter',\n  SPACE_KEY: 'Space',\n};\n\n/** @enum {number} */\nconst numbers = {\n  EXTRA_SCROLL_AMOUNT: 20,\n  ARROW_LEFT_KEYCODE: 37,\n  ARROW_RIGHT_KEYCODE: 39,\n  END_KEYCODE: 35,\n  HOME_KEYCODE: 36,\n  ENTER_KEYCODE: 13,\n  SPACE_KEYCODE: 32,\n};\n\nexport {\n  numbers,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n\nimport {strings, numbers} from './constants';\nimport MDCTabBarAdapter from './adapter';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabDimensions} from '@material/tab/adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @type {Set<string>}\n */\nconst ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\n\n/**\n * @type {Map<number, string>}\n */\nconst KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\n\n/**\n * @extends {MDCFoundation<!MDCTabBarAdapter>}\n * @final\n */\nclass MDCTabBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * @see MDCTabBarAdapter for typing information\n   * @return {!MDCTabBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabBarAdapter} */ ({\n      scrollTo: () => {},\n      incrementScroll: () => {},\n      getScrollPosition: () => {},\n      getScrollContentWidth: () => {},\n      getOffsetWidth: () => {},\n      isRTL: () => {},\n      setActiveTab: () => {},\n      activateTabAtIndex: () => {},\n      deactivateTabAtIndex: () => {},\n      focusTabAtIndex: () => {},\n      getTabIndicatorClientRectAtIndex: () => {},\n      getTabDimensionsAtIndex: () => {},\n      getPreviousActiveTabIndex: () => {},\n      getFocusedTabIndex: () => {},\n      getIndexOfTabById: () => {},\n      getTabListLength: () => {},\n      notifyTabActivated: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTabBarAdapter} adapter\n   * */\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.useAutomaticActivation_ = false;\n  }\n\n  /**\n   * Switches between automatic and manual activation modes.\n   * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n   * @param {boolean} useAutomaticActivation\n   */\n  setUseAutomaticActivation(useAutomaticActivation) {\n    this.useAutomaticActivation_ = useAutomaticActivation;\n  }\n\n  /**\n   * Activates the tab at the given index\n   * @param {number} index\n   */\n  activateTab(index) {\n    const previousActiveIndex = this.adapter_.getPreviousActiveTabIndex();\n    if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n      return;\n    }\n\n    this.adapter_.deactivateTabAtIndex(previousActiveIndex);\n    this.adapter_.activateTabAtIndex(index, this.adapter_.getTabIndicatorClientRectAtIndex(previousActiveIndex));\n    this.scrollIntoView(index);\n\n    this.adapter_.notifyTabActivated(index);\n  }\n\n  /**\n   * Handles the keydown event\n   * @param {!Event} evt\n   */\n  handleKeyDown(evt) {\n    // Get the key from the event\n    const key = this.getKeyFromEvent_(evt);\n\n    // Early exit if the event key isn't one of the keyboard navigation keys\n    if (key === undefined) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n    if (!this.isActivationKey_(key)) {\n      evt.preventDefault();\n    }\n\n    if (this.useAutomaticActivation_) {\n      if (this.isActivationKey_(key)) {\n        return;\n      }\n\n      const index = this.determineTargetFromKey_(this.adapter_.getPreviousActiveTabIndex(), key);\n      this.adapter_.setActiveTab(index);\n      this.scrollIntoView(index);\n    } else {\n      const focusedTabIndex = this.adapter_.getFocusedTabIndex();\n      if (this.isActivationKey_(key)) {\n        this.adapter_.setActiveTab(focusedTabIndex);\n      } else {\n        const index = this.determineTargetFromKey_(focusedTabIndex, key);\n        this.adapter_.focusTabAtIndex(index);\n        this.scrollIntoView(index);\n      }\n    }\n  }\n\n  /**\n   * Handles the MDCTab:interacted event\n   * @param {!Event} evt\n   */\n  handleTabInteraction(evt) {\n    this.adapter_.setActiveTab(this.adapter_.getIndexOfTabById(evt.detail.tabId));\n  }\n\n  /**\n   * Scrolls the tab at the given index into view\n   * @param {number} index The tab index to make visible\n   */\n  scrollIntoView(index) {\n    // Early exit if the index is out of range\n    if (!this.indexIsInRange_(index)) {\n      return;\n    }\n\n    // Always scroll to 0 if scrolling to the 0th index\n    if (index === 0) {\n      return this.adapter_.scrollTo(0);\n    }\n\n    // Always scroll to the max value if scrolling to the Nth index\n    // MDCTabScroller.scrollTo() will never scroll past the max possible value\n    if (index === this.adapter_.getTabListLength() - 1) {\n      return this.adapter_.scrollTo(this.adapter_.getScrollContentWidth());\n    }\n\n    if (this.isRTL_()) {\n      return this.scrollIntoViewRTL_(index);\n    }\n\n    this.scrollIntoView_(index);\n  }\n\n  /**\n   * Private method for determining the index of the destination tab based on what key was pressed\n   * @param {number} origin The original index from which to determine the destination\n   * @param {string} key The name of the key\n   * @return {number}\n   * @private\n   */\n  determineTargetFromKey_(origin, key) {\n    const isRTL = this.isRTL_();\n    const maxIndex = this.adapter_.getTabListLength() - 1;\n    const shouldGoToEnd = key === strings.END_KEY;\n    const shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n    const shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n    let index = origin;\n\n    if (shouldGoToEnd) {\n      index = maxIndex;\n    } else if (shouldDecrement) {\n      index -= 1;\n    } else if (shouldIncrement) {\n      index += 1;\n    } else {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = maxIndex;\n    } else if (index > maxIndex) {\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n    const relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n    const leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex < index) {\n      return Math.min(leftIncrement, 0);\n    }\n\n    return Math.max(rightIncrement, 0);\n  }\n\n  /**\n   * Calculates the scroll increment that will make the tab at the given index visible in RTL\n   * @param {number} index The index of the tab\n   * @param {number} nextIndex The index of the next tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the Tab Bar\n   * @param {number} scrollContentWidth The width of the scroll content\n   * @return {number}\n   * @private\n   */\n  calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n    const nextTabDimensions = this.adapter_.getTabDimensionsAtIndex(nextIndex);\n    const relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n    const relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n    const leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n    const rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n\n    if (nextIndex > index) {\n      return Math.max(leftIncrement, 0);\n    }\n\n    return Math.min(rightIncrement, 0);\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth) {\n    /**\n     * Tabs are laid out in the Tab Scroller like this:\n     *\n     *    Scroll Position\n     *    +---+\n     *    |   |   Bar Width\n     *    |   +-----------------------------------+\n     *    |   |                                   |\n     *    |   V                                   V\n     *    |   +-----------------------------------+\n     *    V   |             Tab Scroller          |\n     *    +------------+--------------+-------------------+\n     *    |    Tab     |      Tab     |        Tab        |\n     *    +------------+--------------+-------------------+\n     *        |                                   |\n     *        +-----------------------------------+\n     *\n     * To determine the next adjacent index, we look at the Tab root left and\n     * Tab root right, both relative to the scroll position. If the Tab root\n     * left is less than 0, then we know it's out of view to the left. If the\n     * Tab root right minus the bar width is greater than 0, we know the Tab is\n     * out of view to the right. From there, we either increment or decrement\n     * the index.\n     */\n    const relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n    const relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n    const relativeRootDelta = relativeRootLeft + relativeRootRight;\n    const leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n    const rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n\n    if (leftEdgeIsCloser) {\n      return index - 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index + 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n   * @param {number} index The index of the tab\n   * @param {!MDCTabDimensions} tabDimensions The dimensions of the tab\n   * @param {number} scrollPosition The current scroll position\n   * @param {number} barWidth The width of the tab bar\n   * @param {number} scrollContentWidth The width of the scroller content\n   * @return {number}\n   * @private\n   */\n  findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n    const rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n    const rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n    const rootDelta = rootLeft + rootRight;\n    const leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n    const rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n\n    if (leftEdgeIsCloser) {\n      return index + 1;\n    }\n\n    if (rightEdgeIsCloser) {\n      return index - 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Returns the key associated with a keydown event\n   * @param {!Event} evt The keydown event\n   * @return {string}\n   * @private\n   */\n  getKeyFromEvent_(evt) {\n    if (ACCEPTABLE_KEYS.has(evt.key)) {\n      return evt.key;\n    }\n\n    return KEYCODE_MAP.get(evt.keyCode);\n  }\n\n  isActivationKey_(key) {\n    return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n  }\n\n  /**\n   * Returns whether a given index is inclusively between the ends\n   * @param {number} index The index to test\n   * @private\n   */\n  indexIsInRange_(index) {\n    return index >= 0 && index < this.adapter_.getTabListLength();\n  }\n\n  /**\n   * Returns the view's RTL property\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.isRTL();\n  }\n\n  /**\n   * Scrolls the tab at the given index into view for left-to-right useragents\n   * @param {number} index The index of the tab to scroll into view\n   * @private\n   */\n  scrollIntoView_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n\n  /**\n   * Scrolls the tab at the given index into view in RTL\n   * @param {number} index The tab index to make visible\n   * @private\n   */\n  scrollIntoViewRTL_(index) {\n    const scrollPosition = this.adapter_.getScrollPosition();\n    const barWidth = this.adapter_.getOffsetWidth();\n    const tabDimensions = this.adapter_.getTabDimensionsAtIndex(index);\n    const scrollWidth = this.adapter_.getScrollContentWidth();\n    const nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(\n      index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n\n    if (!this.indexIsInRange_(nextIndex)) {\n      return;\n    }\n\n    const scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n    this.adapter_.incrementScroll(scrollIncrement);\n  }\n}\n\nexport default MDCTabBarFoundation;\n","<template>\n  <div :class=\"classes\" class=\"mdc-tab-bar\" v-on=\"listeners\" role=\"tablist\">\n    <mdc-tab-scroller ref=\"scroller\"> <slot></slot> </mdc-tab-scroller>\n  </div>\n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tab-bar/foundation'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-tab-bar',\n  data() {\n    return {\n      classes: {},\n      indicatorStyles: {},\n      tabList: []\n    }\n  },\n  props: { activeTabIndex: [Number, String] },\n  provide() {\n    return { mdcTabBar: this }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabBarFoundation({\n      scrollTo: scrollX => this.$refs.scroller.scrollTo(scrollX),\n      incrementScroll: scrollXIncrement =>\n        this.$refs.scroller.incrementScroll(scrollXIncrement),\n      getScrollPosition: () => this.$refs.scroller.getScrollPosition(),\n      getScrollContentWidth: () => this.$refs.scroller.getScrollContentWidth(),\n      getOffsetWidth: () => this.$el.offsetWidth,\n      isRTL: () =>\n        window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n        'rtl',\n      setActiveTab: index => {\n        this.foundation.activateTab(index)\n      },\n      activateTabAtIndex: (index, clientRect) => {\n        this.tabList[index].activate(clientRect)\n      },\n      deactivateTabAtIndex: index => {\n        this.tabList[index] && this.tabList[index].deactivate()\n      },\n      focusTabAtIndex: index => this.tabList[index].focus(),\n      getTabIndicatorClientRectAtIndex: index => {\n        return (\n          this.tabList[index] &&\n          this.tabList[index].computeIndicatorClientRect()\n        )\n      },\n      getTabDimensionsAtIndex: index => {\n        return this.tabList[index].computeDimensions()\n      },\n      getPreviousActiveTabIndex: () => {\n        for (let i = 0; i < this.tabList.length; i++) {\n          if (this.tabList[i].isActive()) {\n            return i\n          }\n        }\n        return -1\n      },\n      getFocusedTabIndex: () => {\n        const tabElements = this.getTabElements_()\n        const activeElement = document.activeElement\n        return tabElements.indexOf(activeElement)\n      },\n      getIndexOfTab: tabToFind => this.tabList.indexOf(tabToFind),\n      getTabListLength: () => this.tabList.length,\n      notifyTabActivated: index => {\n        emitCustomEvent(\n          this.$el,\n          MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT,\n          { index },\n          true\n        )\n\n        this.$emit('change', index)\n      }\n    })\n    this.foundation.init()\n    // ensure active tab\n    this.foundation.activateTab(this.activeTabIndex || 0)\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        'MDCTab:interacted': event => this.handleInteraction(event)\n      }\n    }\n  },\n  methods: {\n    handleInteraction(evt) {\n      this.foundation.handleTabInteraction(evt)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from './constants';\n\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n * @private {number|undefined}\n */\nlet horizontalScrollbarHeight_;\n\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n * @param {!Document} documentObj\n * @param {boolean=} shouldCacheResult\n * @return {number}\n */\nfunction computeHorizontalScrollbarHeight(documentObj, shouldCacheResult = true) {\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  const el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n\n  const horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n  return horizontalScrollbarHeight;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\nexport {computeHorizontalScrollbarHeight, getMatchesProperty};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ANIMATING: 'mdc-tab-scroller--animating',\n  SCROLL_TEST: 'mdc-tab-scroller__test',\n  SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n};\n\n/** @enum {string} */\nconst strings = {\n  AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n  CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAdapter, MDCTabScrollerAnimation} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @abstract\n */\nclass MDCTabScrollerRTL {\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    /** @private */\n    this.adapter_ = adapter;\n  }\n\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getScrollPositionRTL(translateX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  scrollToRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   * @abstract\n   */\n  incrementScrollRTL(scrollX) {}\n\n  /**\n   * @param {number} scrollX The current scrollX position\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   * @abstract\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {}\n}\n\nexport default MDCTabScrollerRTL;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLDefault extends MDCTabScrollerRTL {\n  /**\n   * @return {number}\n   */\n  getScrollPositionRTL() {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const {right} = this.calculateScrollEdges_();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(right - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX) {\n    return scrollX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n}\n\nexport default MDCTabScrollerRTLDefault;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLNegative extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX The current translateX position\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @param {number} translateX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX - translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: rootWidth - contentWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLNegative;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabScrollerRTL from './rtl-scroller';\n\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges} from './adapter';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCTabScrollerRTL}\n * @final\n */\nclass MDCTabScrollerRTLReverse extends MDCTabScrollerRTL {\n  /**\n   * @param {number} translateX\n   * @return {number}\n   */\n  getScrollPositionRTL(translateX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    // Scroll values on most browsers are ints instead of floats so we round\n    return Math.round(currentScrollLeft - translateX);\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  scrollToRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {!MDCTabScrollerAnimation}\n   */\n  incrementScrollRTL(scrollX) {\n    const currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    const clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n    return /** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: currentScrollLeft - clampedScrollLeft,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   */\n  getAnimatingScrollPosition(scrollX, translateX) {\n    return scrollX + translateX;\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: contentWidth - rootWidth,\n      right: 0,\n    });\n  }\n\n  /**\n   * @param {number} scrollX\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.right, scrollX), edges.left);\n  }\n}\n\nexport default MDCTabScrollerRTLReverse;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n/* eslint-disable no-unused-vars */\nimport {MDCTabScrollerAnimation, MDCTabScrollerHorizontalEdges, MDCTabScrollerAdapter} from './adapter';\nimport MDCTabScrollerRTL from './rtl-scroller';\n/* eslint-enable no-unused-vars */\nimport MDCTabScrollerRTLDefault from './rtl-default-scroller';\nimport MDCTabScrollerRTLNegative from './rtl-negative-scroller';\nimport MDCTabScrollerRTLReverse from './rtl-reverse-scroller';\n\n/**\n * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n * @final\n */\nclass MDCTabScrollerFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabScrollerAdapter for typing information\n   * @return {!MDCTabScrollerAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabScrollerAdapter} */ ({\n      eventTargetMatchesSelector: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      addScrollAreaClass: () => {},\n      setScrollAreaStyleProperty: () => {},\n      setScrollContentStyleProperty: () => {},\n      getScrollContentStyleValue: () => {},\n      setScrollAreaScrollLeft: () => {},\n      getScrollAreaScrollLeft: () => {},\n      getScrollContentOffsetWidth: () => {},\n      getScrollAreaOffsetWidth: () => {},\n      computeScrollAreaClientRect: () => {},\n      computeScrollContentClientRect: () => {},\n      computeHorizontalScrollbarHeight: () => {},\n    });\n  }\n\n  /** @param {!MDCTabScrollerAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabScrollerFoundation.defaultAdapter, adapter));\n\n    /**\n     * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n     * @private {boolean}\n     */\n    this.isAnimating_ = false;\n\n    /**\n     * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n     * of RTL scrolling in it's own class.\n     * @private {?MDCTabScrollerRTL}\n     */\n    this.rtlScrollerInstance_;\n  }\n\n  init() {\n    // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n    // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n    const horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n    this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n    this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n  }\n\n  /**\n   * Computes the current visual scroll position\n   * @return {number}\n   */\n  getScrollPosition() {\n    if (this.isRTL_()) {\n      return this.computeCurrentScrollPositionRTL_();\n    }\n\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Handles interaction events that occur during transition\n   */\n  handleInteraction() {\n    // Early exit if we aren't animating\n    if (!this.isAnimating_) {\n      return;\n    }\n\n    // Prevent other event listeners from handling this event\n    this.stopScrollAnimation_();\n  }\n\n  /**\n   * Handles the transitionend event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Early exit if we aren't animating or the event was triggered by a different element.\n    if (!this.isAnimating_\n      || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n      return;\n    }\n\n    this.isAnimating_ = false;\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n  }\n\n  /**\n   * Increment the scroll value by the scrollXIncrement\n   * @param {number} scrollXIncrement The value by which to increment the scroll position\n   */\n  incrementScroll(scrollXIncrement) {\n    // Early exit for non-operational increment values\n    if (scrollXIncrement === 0) {\n      return;\n    }\n\n    if (this.isRTL_()) {\n      return this.incrementScrollRTL_(scrollXIncrement);\n    }\n\n    this.incrementScroll_(scrollXIncrement);\n  }\n\n  /**\n   * Scrolls to the given scrollX value\n   * @param {number} scrollX\n   */\n  scrollTo(scrollX) {\n    if (this.isRTL_()) {\n      return this.scrollToRTL_(scrollX);\n    }\n\n    this.scrollTo_(scrollX);\n  }\n\n  /**\n   * Returns the appropriate version of the MDCTabScrollerRTL\n   * @return {!MDCTabScrollerRTL}\n   */\n  getRTLScroller() {\n    if (!this.rtlScrollerInstance_) {\n      this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n    }\n\n    return this.rtlScrollerInstance_;\n  }\n\n  /**\n   * Returns the translateX value from a CSS matrix transform function string\n   * @return {number}\n   * @private\n   */\n  calculateCurrentTranslateX_() {\n    const transformValue = this.adapter_.getScrollContentStyleValue('transform');\n    // Early exit if no transform is present\n    if (transformValue === 'none') {\n      return 0;\n    }\n\n    // The transform value comes back as a matrix transformation in the form\n    // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n    // we're going to grab all the parenthesized values, strip out tx, and\n    // parse it.\n    const results = /\\((.+)\\)/.exec(transformValue)[1];\n    const parts = results.split(',');\n    return parseFloat(parts[4]);\n  }\n\n  /**\n   * Calculates a safe scroll value that is > 0 and < the max scroll value\n   * @param {number} scrollX The distance to scroll\n   * @return {number}\n   * @private\n   */\n  clampScrollValue_(scrollX) {\n    const edges = this.calculateScrollEdges_();\n    return Math.min(Math.max(edges.left, scrollX), edges.right);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  computeCurrentScrollPositionRTL_() {\n    const translateX = this.calculateCurrentTranslateX_();\n    return this.getRTLScroller().getScrollPositionRTL(translateX);\n  }\n\n  /**\n   * @return {!MDCTabScrollerHorizontalEdges}\n   * @private\n   */\n  calculateScrollEdges_() {\n    const contentWidth = this.adapter_.getScrollContentOffsetWidth();\n    const rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n    return /** @type {!MDCTabScrollerHorizontalEdges} */ ({\n      left: 0,\n      right: contentWidth - rootWidth,\n    });\n  }\n\n  /**\n   * Internal scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollTo_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const safeScrollX = this.clampScrollValue_(scrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal RTL scroll method\n   * @param {number} scrollX The new scroll position\n   * @private\n   */\n  scrollToRTL_(scrollX) {\n    const animation = this.getRTLScroller().scrollToRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Internal increment scroll method\n   * @param {number} scrollX The new scroll position increment\n   * @private\n   */\n  incrementScroll_(scrollX) {\n    const currentScrollX = this.getScrollPosition();\n    const targetScrollX = scrollX + currentScrollX;\n    const safeScrollX = this.clampScrollValue_(targetScrollX);\n    const scrollDelta = safeScrollX - currentScrollX;\n    this.animate_(/** @type {!MDCTabScrollerAnimation} */ ({\n      finalScrollPosition: safeScrollX,\n      scrollDelta: scrollDelta,\n    }));\n  }\n\n  /**\n   * Internal incremenet scroll RTL method\n   * @param {number} scrollX The new scroll position RTL increment\n   * @private\n   */\n  incrementScrollRTL_(scrollX) {\n    const animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n    this.animate_(animation);\n  }\n\n  /**\n   * Animates the tab scrolling\n   * @param {!MDCTabScrollerAnimation} animation The animation to apply\n   * @private\n   */\n  animate_(animation) {\n    // Early exit if translateX is 0, which means there's no animation to perform\n    if (animation.scrollDelta === 0) {\n      return;\n    }\n\n    this.stopScrollAnimation_();\n    // This animation uses the FLIP approach.\n    // Read more here: https://aerotwist.com/blog/flip-your-animations/\n    this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n    this.adapter_.setScrollContentStyleProperty('transform', `translateX(${animation.scrollDelta}px)`);\n    // Force repaint\n    this.adapter_.computeScrollAreaClientRect();\n\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n      this.adapter_.setScrollContentStyleProperty('transform', 'none');\n    });\n\n    this.isAnimating_ = true;\n  }\n\n  /**\n   * Stops scroll animation\n   * @private\n   */\n  stopScrollAnimation_() {\n    this.isAnimating_ = false;\n    const currentScrollPosition = this.getAnimatingScrollPosition_();\n    this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n    this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n  }\n\n  /**\n   * Gets the current scroll position during animation\n   * @return {number}\n   * @private\n   */\n  getAnimatingScrollPosition_() {\n    const currentTranslateX = this.calculateCurrentTranslateX_();\n    const scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    if (this.isRTL_()) {\n      return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n    }\n\n    return scrollLeft - currentTranslateX;\n  }\n\n  /**\n   * Determines the RTL Scroller to use\n   * @return {!MDCTabScrollerRTL}\n   * @private\n   */\n  rtlScrollerFactory_() {\n    // Browsers have three different implementations of scrollLeft in RTL mode,\n    // dependent on the browser. The behavior is based off the max LTR\n    // scrollleft value and 0.\n    //\n    // * Default scrolling in RTL *\n    //    - Left-most value: 0\n    //    - Right-most value: Max LTR scrollLeft value\n    //\n    // * Negative scrolling in RTL *\n    //    - Left-most value: Negated max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // * Reverse scrolling in RTL *\n    //    - Left-most value: Max LTR scrollLeft value\n    //    - Right-most value: 0\n    //\n    // We use those principles below to determine which RTL scrollLeft\n    // behavior is implemented in the current browser.\n    const initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n    const newScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n    // If the newScrollLeft value is negative,then we know that the browser has\n    // implemented negative RTL scrolling, since all other implementations have\n    // only positive values.\n    if (newScrollLeft < 0) {\n      // Undo the scrollLeft test check\n      this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n      return new MDCTabScrollerRTLNegative(this.adapter_);\n    }\n\n    const rootClientRect = this.adapter_.computeScrollAreaClientRect();\n    const contentClientRect = this.adapter_.computeScrollContentClientRect();\n    const rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n    // Undo the scrollLeft test check\n    this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n\n    // By calculating the clientRect of the root element and the clientRect of\n    // the content element, we can determine how much the scroll value changed\n    // when we performed the scrollLeft subtraction above.\n    if (rightEdgeDelta === newScrollLeft) {\n      return new MDCTabScrollerRTLReverse(this.adapter_);\n    }\n\n    return new MDCTabScrollerRTLDefault(this.adapter_);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isRTL_() {\n    return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n  }\n}\n\nexport default MDCTabScrollerFoundation;\n","<template>\n  <div class=\"mdc-tab-scroller\" :class=\"classes\">\n    <div\n      ref=\"area\"\n      class=\"mdc-tab-scroller__scroll-area\"\n      @mousedown=\"handleInteraction\"\n      @wheel=\"handleInteraction\"\n      @pointerdown=\"handleInteraction\"\n      @touchstart=\"handleInteraction\"\n      @keydown=\"handleInteraction\"\n      :class=\"areaClasses\"\n      :style=\"areaStyles\"\n    >\n      <div\n        ref=\"content\"\n        class=\"mdc-tab-scroller__scroll-content\"\n        :style=\"contentStyles\"\n        @transitionend=\"handleTransitionEnd\"\n      >\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCTabScrollerFoundation from '@material/tab-scroller/foundation'\nimport * as util from '@material/tab-scroller/util'\n\nexport default {\n  name: 'mdc-tab-scroller',\n  data() {\n    return { classes: {}, areaClasses: {}, areaStyles: {}, contentStyles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCTabScrollerFoundation({\n      eventTargetMatchesSelector: (evtTarget, selector) => {\n        const MATCHES = util.getMatchesProperty(HTMLElement.prototype)\n        return evtTarget[MATCHES](selector)\n      },\n      addClass: className => this.$set(this.classes, className, true),\n\n      removeClass: className => this.$delete(this.classes, className),\n      addScrollAreaClass: className =>\n        this.$set(this.areaClasses, className, true),\n      setScrollAreaStyleProperty: (prop, value) =>\n        this.$set(this.areaStyles, prop, value),\n      setScrollContentStyleProperty: (prop, value) =>\n        this.$set(this.contentStyles, prop, value),\n      getScrollContentStyleValue: propName =>\n        window.getComputedStyle(this.$refs.content).getPropertyValue(propName),\n      setScrollAreaScrollLeft: scrollX =>\n        (this.$refs.area.scrollLeft = scrollX),\n      getScrollAreaScrollLeft: () => this.$refs.area.scrollLeft,\n      getScrollContentOffsetWidth: () => this.$refs.content.offsetWidth,\n      getScrollAreaOffsetWidth: () => this.$refs.area.offsetWidth,\n      computeScrollAreaClientRect: () =>\n        this.$refs.area.getBoundingClientRect(),\n      computeScrollContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      computeHorizontalScrollbarHeight: () =>\n        util.computeHorizontalScrollbarHeight(document)\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    handleTransitionEnd(evt) {\n      this.foundation.handleTransitionEnd(evt)\n    },\n    handleInteraction(evt) {\n      this.foundation.handleInteraction(evt)\n    },\n    getScrollPosition() {\n      return this.foundation.getScrollPosition()\n    },\n    getScrollContentWidth() {\n      return this.$refs.content.offsetWidth\n    },\n    incrementScroll(scrollXIncrement) {\n      this.foundation.incrementScroll(scrollXIncrement)\n    },\n    scrollTo(scrollX) {\n      this.foundation.scrollTo(scrollX)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-tab-indicator--active',\n  FADE: 'mdc-tab-indicator--fade',\n  NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\n\n/** @enum {string} */\nconst strings = {\n  CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\n\nexport {\n  cssClasses,\n  strings,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTabIndicatorAdapter from './adapter';\nimport {\n  cssClasses,\n  strings,\n} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTabIndicatorAdapter>}\n * @abstract\n */\nclass MDCTabIndicatorFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * @see MDCTabIndicatorAdapter for typing information\n   * @return {!MDCTabIndicatorAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTabIndicatorAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      computeContentClientRect: () => {},\n      setContentStyleProperty: () => {},\n    });\n  }\n\n  /** @param {!MDCTabIndicatorAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCTabIndicatorFoundation.defaultAdapter, adapter));\n  }\n\n  /** @return {!ClientRect} */\n  computeContentClientRect() {\n    return this.adapter_.computeContentClientRect();\n  }\n\n  /**\n   * Activates the indicator\n   * @param {!ClientRect=} previousIndicatorClientRect\n   * @abstract\n   */\n  activate(previousIndicatorClientRect) {} // eslint-disable-line no-unused-vars\n\n  /** @abstract */\n  deactivate() {}\n}\n\nexport default MDCTabIndicatorFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTabIndicatorFoundation from './foundation';\n\n/**\n * @extends {MDCTabIndicatorFoundation}\n * @final\n */\nclass MDCSlidingTabIndicatorFoundation extends MDCTabIndicatorFoundation {\n  /** @param {!ClientRect=} previousIndicatorClientRect */\n  activate(previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    }\n\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = this.computeContentClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.setContentStyleProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    this.computeContentClientRect();\n\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter_.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter_.setContentStyleProperty('transform', '');\n  }\n\n  deactivate() {\n    this.adapter_.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  }\n}\n\nexport default MDCSlidingTabIndicatorFoundation;\n","<template>\n  <span class=\"mdc-tab-indicator\" :class=\"classes\">\n    <span\n      ref=\"content\"\n      :style=\"styles\"\n      class=\"mdc-tab-indicator__content mdc-tab-indicator__content--underline\"\n    ></span>\n  </span>\n</template>\n\n<script>\nimport MDCSlidingTabIndicatorFoundation from '@material/tab-indicator/sliding-foundation'\n\nexport default {\n  name: 'mdc-tab-indicator',\n  data() {\n    return { classes: {}, styles: {} }\n  },\n\n  mounted() {\n    this.foundation = new MDCSlidingTabIndicatorFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      computeContentClientRect: () =>\n        this.$refs.content.getBoundingClientRect(),\n      setContentStyleProperty: (prop, value) => {\n        this.$set(this.styles, prop, value)\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    activate(previousIndicatorClientRect) {\n      this.foundation.activate(previousIndicatorClientRect)\n    },\n    deactivate() {\n      this.foundation.deactivate()\n    },\n    computeContentClientRect() {\n      return this.foundation.computeContentClientRect()\n    }\n  }\n}\n</script>\n","<template>\n  <span class=\"mdc-tab__ripple\" :class=\"classes\" :style=\"styles\"></span>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-tab-ripple',\n\n  data() {\n    return { classes: {}, styles: {} }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\nimport mdcTabScroller from './mdc-tab-scroller.vue'\nimport mdcTabIndicator from './mdc-tab-indicator.vue'\nimport mdcTabRipple from './mdc-tab-ripple.vue'\nexport { mdcTab, mdcTabBar, mdcTabScroller, mdcTabIndicator, mdcTabRipple }\n\nexport default BasePlugin({\n  mdcTab,\n  mdcTabBar,\n  mdcTabScroller,\n  mdcTabIndicator,\n  mdcTabRipple\n})\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  TEXTAREA: 'mdc-text-field--textarea',\n  OUTLINED: 'mdc-text-field--outlined',\n  WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n// Label should always float for these types as they show some UI even if value is empty.\nconst ALWAYS_FLOAT_TYPES = [\n  'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_ && !!this.getValue();\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  get shouldAlwaysFloat_() {\n    const type = this.getNativeInput_().type;\n    return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.trailingIcon_ = foundationMap.trailingIcon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n\n    /** @private {boolean} */\n    this.useNativeValidation_ = true;\n\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter_.floatLabel(true);\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    let targetEvent;\n    if (evt.touches) {\n      targetEvent = evt.touches[0];\n    } else {\n      targetEvent = evt;\n    }\n    const targetClientRect = targetEvent.target.getBoundingClientRect();\n    const normalizedX = targetEvent.clientX - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (!this.shouldFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n    if (this.getValue() !== value) {\n      this.getNativeInput_().value = value;\n    }\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useNativeValidation_\n      ? this.isNativeInputValid_() : this.isValid_;\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.isValid_ = isValid;\n    this.styleValidity_(isValid);\n\n    const shouldShake = !isValid && !this.isFocused_;\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(shouldShake);\n    }\n  }\n\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n   */\n  setUseNativeValidation(useNativeValidation) {\n    this.useNativeValidation_ = useNativeValidation;\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the trailing icon.\n   * @param {string} label\n   */\n  setTrailingIconAriaLabel(label) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the trailing icon.\n   * @param {string} content\n   */\n  setTrailingIconContent(content) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","<template>\n  <div\n    :style=\"{ width: fullwidth ? '100%' : undefined }\"\n    :id=\"id\"\n    class=\"mdc-textfield-wrapper\"\n  >\n    <div ref=\"root\" :class=\"rootClasses\">\n      <i\n        v-if=\"!!hasLeadingIcon\"\n        ref=\"leadingIcon\"\n        :class=\"hasLeadingIcon.classes\"\n        :tabindex=\"leadingTabindex\"\n        :role=\"leadingRole\"\n        class=\"mdc-text-field__icon\"\n      >\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\n      </i>\n\n      <!--\n        workarround for https://github.com/vuejs/rollup-plugin-vue/issues/174\n      -->\n      <!-- eslint-disable vue/html-self-closing -->\n      <textarea\n        v-if=\"multiline\"\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        :rows=\"rows\"\n        :cols=\"cols\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      ></textarea>\n\n      <input\n        v-else\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :type=\"type\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      />\n\n      <label\n        v-if=\"hasLabel\"\n        ref=\"label\"\n        :class=\"labelClassesUpgraded\"\n        :for=\"vma_uid_\"\n      >\n        {{ label }}\n      </label>\n\n      <i\n        v-if=\"!!hasTrailingIcon\"\n        ref=\"trailingIcon\"\n        :class=\"hasTrailingIcon.classes\"\n        :tabindex=\"trailingTabindex\"\n        :role=\"trailingRole\"\n        class=\"mdc-text-field__icon\"\n      >\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\n      </i>\n\n      <div\n        v-if=\"hasOutline\"\n        ref=\"outline\"\n        :class=\"outlineClasses\"\n        class=\"mdc-notched-outline\"\n      >\n        <div class=\"mdc-notched-outline__leading\"></div>\n        <div :style=\"notchStyles\" class=\"mdc-notched-outline__notch\">\n          <label\n            v-if=\"hasOutlineLabel\"\n            ref=\"label-outline\"\n            :class=\"labelClassesUpgraded\"\n            :for=\"vma_uid_\"\n          >\n            {{ label }}\n          </label>\n          <label class=\"mdc-floating-label\"></label>\n        </div>\n        <div class=\"mdc-notched-outline__trailing\"></div>\n      </div>\n      <!-- <div\n        v-if=\"hasOutline\"\n        ref=\"outlineIdle\"\n        class=\"mdc-notched-outline__idle\"\n      /> -->\n      <div\n        v-if=\"hasLineRipple\"\n        ref=\"lineRipple\"\n        :class=\"lineRippleClasses\"\n        :style=\"lineRippleStyles\"\n      />\n    </div>\n\n    <p\n      v-if=\"helptext\"\n      ref=\"help\"\n      :id=\"'help-' + vma_uid_\"\n      :class=\"helpClasses\"\n      aria-hidden=\"true\"\n    >\n      {{ helptext }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation'\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation'\n\nimport {\n  extractIconProp,\n  DispatchFocusMixin,\n  CustomElementMixin,\n  VMAUniqueIdMixin,\n  applyPassive\n} from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-textfield',\n  mixins: [CustomElementMixin, DispatchFocusMixin, VMAUniqueIdMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'model'\n  },\n  props: {\n    value: [String, Number],\n    type: {\n      type: String,\n      default: 'text',\n      validator: function(value) {\n        return (\n          [\n            'text',\n            'email',\n            'search',\n            'password',\n            'tel',\n            'url',\n            'number'\n          ].indexOf(value) !== -1\n        )\n      }\n    },\n    dense: Boolean,\n    label: String,\n    helptext: String,\n    helptextPersistent: Boolean,\n    helptextValidation: Boolean,\n    outline: Boolean,\n    disabled: Boolean,\n    required: Boolean,\n    valid: { type: Boolean, default: undefined },\n    fullwidth: Boolean,\n    multiline: Boolean,\n    leadingIcon: [String, Array, Object],\n    trailingNonInteractive: Boolean,\n    leadingNonInteractive: Boolean,\n    trailingIcon: [String, Array, Object],\n    size: { type: [Number, String], default: 20 },\n    minlength: { type: [Number, String], default: undefined },\n    maxlength: { type: [Number, String], default: undefined },\n    rows: { type: [Number, String], default: 8 },\n    cols: { type: [Number, String], default: 40 },\n    id: { type: String }\n  },\n  data: function() {\n    return {\n      text: this.value,\n      rootClasses: {\n        'mdc-textfield': true,\n        'mdc-text-field': true,\n        'mdc-text-field--upgraded': true,\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--dense': this.dense,\n        'mdc-text-field--fullwidth': this.fullwidth,\n        'mdc-text-field--textarea': this.multiline,\n        'mdc-text-field--outlined': !this.fullwidth && this.outline\n      },\n      inputClasses: {\n        'mdc-text-field__input': true\n      },\n      labelClasses: {\n        'mdc-floating-label': true\n      },\n      lineRippleClasses: {\n        'mdc-line-ripple': true\n      },\n      lineRippleStyles: {},\n      helpClasses: {\n        'mdc-text-field-helper-text': true,\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation\n      },\n      outlineClasses: {},\n      notchStyles: {}\n    }\n  },\n  computed: {\n    leadingTabindex() {\n      if (!this.leadingNonInteractive) {\n        return '0'\n      }\n    },\n\n    leadingRole() {\n      if (!this.leadingNonInteractive) {\n        return 'button'\n      }\n    },\n\n    trailingTabindex() {\n      if (!this.trailingNonInteractive) {\n        return '0'\n      }\n    },\n\n    trailingRole() {\n      if (!this.trailingNonInteractive) {\n        return 'button'\n      }\n    },\n    inputPlaceHolder() {\n      return this.fullwidth ? this.label : undefined\n    },\n    inputAriaControls() {\n      return this.help ? 'help-' + this.vma_uid_ : undefined\n    },\n    hasLabel() {\n      return !this.fullwidth && !this.outline && this.label\n    },\n\n    hasOutlineLabel() {\n      return this.hasOutline && this.label\n    },\n    hasOutline() {\n      return !this.fullwidth && this.outline\n    },\n    hasLineRipple() {\n      return !this.hasOutline && !this.multiline\n    },\n    hasLeadingIcon() {\n      if (this.leadingIcon || this.$slots['leading-icon']) {\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {}\n      }\n      return false\n    },\n    hasTrailingIcon() {\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {}\n      }\n      return false\n    },\n    labelClassesUpgraded() {\n      return Object.assign(this.labelClasses, {\n        'mdc-floating-label--float-above': this.value\n      })\n    }\n  },\n  watch: {\n    disabled() {\n      this.foundation && this.foundation.setDisabled(this.disabled)\n    },\n    required() {\n      this.$refs.input && (this.$refs.input.required = this.required)\n    },\n    valid() {\n      if (typeof this.valid !== 'undefined') {\n        this.foundation && this.foundation.setValid(this.valid)\n      }\n    },\n    dense() {\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\n    },\n    helptextPersistent() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setPersistent(this.helptextPersistent)\n    },\n    helptextValidation() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setValidation(this.helptextValidation)\n    },\n    value(value) {\n      if (this.foundation) {\n        if (value !== this.foundation.getValue()) {\n          this.foundation.setValue(value)\n        }\n      }\n    }\n  },\n  mounted() {\n    if (this.$refs.lineRipple) {\n      this.lineRippleFoundation = new MDCLineRippleFoundation({\n        addClass: className => {\n          this.$set(this.lineRippleClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.lineRippleClasses, className)\n        },\n        hasClass: className => {\n          this.$refs.lineRipple.classList.contains(className)\n        },\n        setStyle: (name, value) => {\n          this.$set(this.lineRippleStyles, name, value)\n        },\n        registerEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.addEventListener(evtType, handler)\n        },\n        deregisterEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.removeEventListener(evtType, handler)\n        }\n      })\n      this.lineRippleFoundation.init()\n    }\n\n    if (this.$refs.help) {\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\n        addClass: className => {\n          this.$set(this.helpClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.helpClasses, className)\n        },\n        hasClass: className => {\n          return this.$refs.help.classList.contains(className)\n        },\n        setAttr: (name, value) => {\n          this.$refs.help.setAttribute(name, value)\n        },\n        removeAttr: name => {\n          this.$refs.help.removeAttribute(name)\n        },\n        setContent: (/*content*/) => {\n          // help text get's updated from {{helptext}}\n          // this.$refs.help.textContent = content;\n        }\n      })\n      this.helperTextFoundation.init()\n    }\n\n    if (this.hasLeadingIcon) {\n      this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true)\n      this.leadingIconFoundation = new MDCTextFieldIconFoundation({\n        setAttr: (attr, value) =>\n          this.$refs.leadingIcon.setAttribute(attr, value),\n        getAttr: attr => this.$refs.leadingIcon.getAttribute(attr),\n        removeAttr: attr => this.$refs.leadingIcon.removeAttribute(attr),\n        setContent: (/*content*/) => {\n          // icon text get's updated from {{{{ hasTrailingIcon.content }}}}\n          // this.$refs.icon.textContent = content;\n        },\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.leadingIcon.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.leadingIcon.removeEventListener(evtType, handler)\n        },\n        notifyIconAction: () => this.$emit('leadingicon-action')\n      })\n      this.leadingIconFoundation.init()\n    }\n\n    if (this.hasTrailingIcon) {\n      this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true)\n      this.trailingIconFoundation = new MDCTextFieldIconFoundation({\n        setAttr: (attr, value) =>\n          this.$refs.trailingIcon.setAttribute(attr, value),\n        getAttr: attr => this.$refs.trailingIcon.getAttribute(attr),\n        removeAttr: attr => this.$refs.trailingIcon.removeAttribute(attr),\n        setContent: (/*content*/) => {\n          // icon text get's updated from {{{{ hasTrailingIcon.content }}}}\n          // this.$refs.icon.textContent = content;\n        },\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.trailingIcon.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.trailingIcon.removeEventListener(evtType, handler)\n        },\n        notifyIconAction: () => this.$emit('trainlingicon-action')\n      })\n      this.trailingIconFoundation.init()\n    }\n\n    if (this.$refs.label || this.$refs['label-outline']) {\n      const label = this.$refs.label || this.$refs['label-outline']\n      this.labelFoundation = new MDCFloatingLabelFoundation({\n        addClass: className => {\n          this.$set(this.labelClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.labelClasses, className)\n        },\n        getWidth: () => label.offsetWidth,\n        registerInteractionHandler: (evtType, handler) => {\n          label.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          label.removeEventListener(evtType, handler)\n        }\n      })\n      this.labelFoundation.init()\n    }\n\n    if (this.$refs.outline) {\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\n        addClass: className => {\n          this.$set(this.outlineClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.outlineClasses, className)\n        },\n        setNotchWidthProperty: width =>\n          this.$set(this.notchStyles, 'width', width > 0 ? width + 'px' : '0')\n      })\n      this.outlineFoundation.init()\n    }\n\n    this.foundation = new MDCTextfieldFoundation(\n      Object.assign(\n        {\n          addClass: className => {\n            this.$set(this.rootClasses, className, true)\n          },\n          removeClass: className => {\n            this.$delete(this.rootClasses, className)\n          },\n          hasClass: className => {\n            this.$refs.root.classList.contains(className)\n          },\n          registerTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.addEventListener(evtType, handler)\n          },\n          deregisterTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.removeEventListener(evtType, handler)\n          },\n          isFocused: () => {\n            return document.activeElement === this.$refs.input\n          },\n          isRtl: () =>\n            window\n              .getComputedStyle(this.$refs.root)\n              .getPropertyValue('direction') === 'rtl',\n\n          registerValidationAttributeChangeHandler: handler => {\n            const getAttributesList = mutationsList =>\n              mutationsList.map(mutation => mutation.attributeName)\n            const observer = new MutationObserver(mutationsList =>\n              handler(getAttributesList(mutationsList))\n            )\n            const targetNode = this.$refs.input\n            const config = { attributes: true }\n            observer.observe(targetNode, config)\n            return observer\n          },\n          deregisterValidationAttributeChangeHandler: observer => {\n            observer.disconnect()\n          }\n        },\n        this.getInputAdapterMethods(),\n        this.getLabelAdapterMethods(),\n        this.getLineRippleAdapterMethods(),\n        this.getOutlineAdapterMethods()\n      ),\n      {\n        helperText: this.helperTextFoundation,\n        leadingIcon: this.leadingIconFoundation,\n        trailingIcon: this.trailingFoundation\n      }\n    )\n\n    this.foundation.init()\n    this.foundation.setValue(this.value)\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.input && (this.$refs.input.required = this.required)\n    if (typeof this.valid !== 'undefined') {\n      this.foundation.setValid(this.valid)\n    }\n\n    if (this.textbox) {\n      this.ripple = new RippleBase(this)\n      this.ripple.init()\n    }\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.lineRippleFoundation && this.lineRippleFoundation.destroy()\n    this.helperTextFoundation && this.helperTextFoundation.destroy()\n    this.leadingIconFoundation && this.leadingIconFoundation.destroy()\n    this.trailingIconFoundation && this.trailingIconFoundation.destroy()\n    this.labelFoundation && this.labelFoundation.destroy()\n    this.outlineFoundation && this.outlineFoundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    getInputAdapterMethods() {\n      return {\n        registerInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.addEventListener(evtType, handler, applyPassive())\n        },\n        deregisterInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.removeEventListener(evtType, handler, applyPassive())\n        },\n        getNativeInput: () => {\n          return this.$refs.input\n        }\n      }\n    },\n    getLabelAdapterMethods() {\n      return {\n        shakeLabel: shouldShake => {\n          this.labelFoundation.shake(shouldShake)\n        },\n        floatLabel: shouldFloat => {\n          this.labelFoundation.float(shouldFloat)\n        },\n        hasLabel: () => {\n          return !!this.$refs.label || !!this.$refs['label-outline']\n        },\n        getLabelWidth: () => {\n          return this.labelFoundation.getWidth()\n        }\n      }\n    },\n    getLineRippleAdapterMethods() {\n      return {\n        deactivateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.deactivate()\n          }\n        },\n        activateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.activate()\n          }\n        },\n        setLineRippleTransformOrigin: normalizedX => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.setRippleCenter(normalizedX)\n          }\n        }\n      }\n    },\n    getOutlineAdapterMethods() {\n      return {\n        hasOutline: () => !!this.hasOutline,\n        notchOutline: (notchWidth, isRtl) =>\n          this.outlineFoundation.notch(notchWidth, isRtl),\n        closeOutline: () => this.outlineFoundation.closeNotch()\n      }\n    },\n    updateValue(value) {\n      this.$emit('model', value)\n    },\n    focus() {\n      this.$refs.input && this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input && this.$refs.input.blur()\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport { mdcTextField }\n\nexport default BasePlugin({\n  mdcTextField\n})\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :class=\"classes\"\n    class=\"mdc-theme\">\n    <slot />\n  </custom-element>\n</template>\n\n\n<script>\nimport { CustomElement } from '../base'\n\nconst THEME_COLORS = [\n  'primary',\n  'secondary',\n  'background',\n  'primary-light',\n  'secondary-light',\n  'secondary-dark',\n  'primary-dark'\n]\n\nconst THEME_STYLES = [\n  'text-primary',\n  'text-secondary',\n  'text-hint',\n  'text-icon',\n  'text-disabled'\n]\n\nexport default {\n  name: 'mdc-theme',\n  components: {\n    CustomElement\n  },\n  props: {\n    tag: { type: String, default: 'div' },\n    color: String,\n    background: String\n  },\n  computed: {\n    classes() {\n      let classes = {}\n\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\n        classes[`mdc-theme--${this.color}`] = true\n      }\n\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\n        classes[`mdc-theme--${this.background}-bg`] = true\n\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\n        }\n      }\n      return classes\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTheme from './mdc-theme.vue'\n\nexport { mdcTheme }\n\nexport default BasePlugin({\n  mdcTheme\n})\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","<template>\n  <header class=\"mdc-toolbar-wrapper\">\n    <!--Toolbar-->\n    <div \n      ref=\"root\" \n      :class=\"rootClasses\" \n      :style=\"rootStyles\">\n      <slot/>\n    </div>\n    <!-- Fixed Adjust Element-->\n    <div \n      v-if=\"fixed || waterfall || fixedLastrow\" \n      ref=\"fixed-adjust\" \n      :style=\"adjustStyles\"\n      class=\"mdc-toolbar-fixed-adjust\"/>\n  </header>\n</template>\n\n<script>\nimport MDCToolbarFoundation from '@material/toolbar/foundation'\n\nexport default {\n  name: 'mdc-toolbar',\n  props: {\n    fixed: Boolean,\n    waterfall: Boolean,\n    'fixed-lastrow': Boolean,\n    flexible: Boolean,\n    'flexible-default': { type: Boolean, default: true }\n  },\n  data() {\n    return {\n      rootClasses: {\n        'mdc-toolbar': true,\n        'mdc-toolbar--fixed': this.fixed || this.waterfall || this.fixedLastrow,\n        'mdc-toolbar--waterfall': this.waterfall,\n        'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,\n        'mdc-toolbar--flexible': this.flexible,\n        'mdc-toolbar--flexible-default-behavior':\n          this.flexible && this.flexibleDefault\n      },\n      rootStyles: {},\n      adjustStyles: {\n        // to avoid top margin collapse with :after el\n        // 0.1 px should be rounded to 0px\n        // TODO: find a better trick\n        // height: '0.1px'\n      },\n      foundation: null\n    }\n  },\n  mounted() {\n    this.foundation = new MDCToolbarFoundation({\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      },\n      getViewportWidth: () => {\n        return window.innerWidth\n      },\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getOffsetHeight: () => {\n        return this.$refs.root.offsetHeight\n      },\n      getFirstRowElementOffsetHeight: () => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        return el ? el.offsetHeight : undefined\n      },\n      notifyChange: evtData => {\n        this.$emit('change', evtData)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      setStyleForTitleElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.TITLE_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFlexibleRowElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFixedAdjustElement: (property, value) => {\n        this.$set(this.adjustStyles, property, value)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-toolbar-row mdc-toolbar__row\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-row'\n}\n</script>\n","<template>\n  <section \n    :class=\"classes\" \n    class=\"mdc-toolbar-section mdc-toolbar__section\">\n    <slot/>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-section',\n  props: {\n    'align-start': Boolean,\n    'align-end': Boolean,\n    'shrink-to-fit': Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-toolbar__section--align-start': this.alignStart,\n        'mdc-toolbar__section--align-end': this.alignEnd,\n        'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\"\n    class=\"mdc-toolbar-menu-icon mdc-toolbar__menu-icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-menu-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: { type: String, default: 'menu' }\n  }\n}\n</script>\n","<template>\n  <a \n    class=\"mdc-toolbar-title mdc-toolbar__title\" \n    v-on=\"listeners\">\n    <slot/>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-title',\n  mixins: [DispatchEventMixin]\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\" \n    class=\"mdc-toolbar-icon mdc-toolbar__icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: String\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcToolbar from './mdc-toolbar.vue'\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\n\nexport {\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n}\n\nexport default BasePlugin({\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n})\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n\n    this.scrollHandler_ = () => {};\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  initScrollHandler() {\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroyScrollHandler() {\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {numbers} from '../constants';\n\nconst INITIAL_VALUE = 0;\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}\n * @final\n */\nclass MDCTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /**\n     * Used for diffs of current scroll position vs previous scroll position\n     * @private {number}\n     */\n    this.lastScrollPosition_ = this.adapter_.getViewportScrollY();\n\n    /**\n     * Used to verify when the top app bar is completely showing or completely hidden\n     * @private {number}\n     */\n    this.topAppBarHeight_ = this.adapter_.getTopAppBarHeight();\n\n    /**\n     * wasDocked_ is used to indicate if the top app bar was docked in the previous\n     * scroll handler iteration.\n     * @private {boolean}\n     */\n    this.wasDocked_ = true;\n\n    /**\n     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully\n     * shown position.\n     * @private {boolean}\n     */\n    this.isDockedShowing_ = true;\n\n    /**\n     * Variable for current scroll position of the top app bar\n     * @private {number}\n     */\n    this.currentAppBarOffsetTop_ = 0;\n\n    /**\n     * Used to prevent the top app bar from being scrolled out of view during resize events\n     * @private {boolean} */\n    this.isCurrentlyBeingResized_ = false;\n\n    /**\n     * The timeout that's used to throttle the resize events\n     * @private {number}\n     */\n    this.resizeThrottleId_ = INITIAL_VALUE;\n\n    /**\n     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize\n     * @private {number}\n     */\n    this.resizeDebounceId_ = INITIAL_VALUE;\n\n    this.scrollHandler_ = () => this.topAppBarScrollHandler_();\n    this.resizeHandler_ = () => this.topAppBarResizeHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.setStyle('top', '');\n  }\n\n  /**\n   * Function to determine if the DOM needs to update.\n   * @return {boolean}\n   * @private\n   */\n  checkForUpdate_() {\n    const offscreenBoundaryTop = -this.topAppBarHeight_;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked_ = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked_) {\n        this.wasDocked_ = true;\n        return true;\n      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing_ = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  /**\n   * Function to move the top app bar if needed.\n   * @private\n   */\n  moveTopAppBar_() {\n    if (this.checkForUpdate_()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop_;\n      if (Math.abs(offset) >= this.topAppBarHeight_) {\n        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.adapter_.setStyle('top', offset + 'px');\n    }\n  }\n\n  /**\n   * Scroll handler for the default scroll behavior of the top app bar.\n   * @private\n   */\n  topAppBarScrollHandler_() {\n    const currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition_;\n    this.lastScrollPosition_ = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized_) {\n      this.currentAppBarOffsetTop_ -= diff;\n\n      if (this.currentAppBarOffsetTop_ > 0) {\n        this.currentAppBarOffsetTop_ = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {\n        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;\n      }\n\n      this.moveTopAppBar_();\n    }\n  }\n\n  /**\n   * Top app bar resize handler that throttle/debounce functions that execute updates.\n   * @private\n   */\n  topAppBarResizeHandler_() {\n    // Throttle resize events 10 p/s\n    if (!this.resizeThrottleId_) {\n      this.resizeThrottleId_ = setTimeout(() => {\n        this.resizeThrottleId_ = INITIAL_VALUE;\n        this.throttledResizeHandler_();\n      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    }\n\n    this.isCurrentlyBeingResized_ = true;\n\n    if (this.resizeDebounceId_) {\n      clearTimeout(this.resizeDebounceId_);\n    }\n\n    this.resizeDebounceId_ = setTimeout(() => {\n      this.topAppBarScrollHandler_();\n      this.isCurrentlyBeingResized_ = false;\n      this.resizeDebounceId_ = INITIAL_VALUE;\n    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n  }\n\n  /**\n   * Throttled function that updates the top app bar scrolled values if the\n   * top app bar height changes.\n   * @private\n   */\n  throttledResizeHandler_() {\n    const currentHeight = this.adapter_.getTopAppBarHeight();\n    if (this.topAppBarHeight_ !== currentHeight) {\n      this.wasDocked_ = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;\n      this.topAppBarHeight_ = currentHeight;\n    }\n    this.topAppBarScrollHandler_();\n  }\n}\n\nexport default MDCTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from '../constants';\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarFoundation from '../foundation';\n\n/**\n * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}\n * @final\n */\nclass MDCFixedTopAppBarFoundation extends MDCTopAppBarFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /** State variable for the previous scroll iteration top app bar state */\n    this.wasScrolled_ = false;\n\n    this.scrollHandler_ = () => this.fixedScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  /**\n   * Scroll handler for applying/removing the modifier class\n   * on the fixed top app bar.\n   */\n  fixedScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.wasScrolled_) {\n        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = false;\n      }\n    } else {\n      if (!this.wasScrolled_) {\n        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = true;\n      }\n    }\n  }\n}\n\nexport default MDCFixedTopAppBarFoundation;\n","<template>\n  <header ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\" v-on=\"$listeners\">\n    <div class=\"mdc-top-app-bar__row\">\n      <section\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\"\n      >\n        <button\n          v-if=\"haveNavigationIcon\"\n          ref=\"navigationIcon\"\n          :class=\"naviconClasses\"\n          v-on=\"listeners\"\n        >\n          {{ icon }}\n        </button>\n        <span v-if=\"!!title\" class=\"mdc-top-app-bar__title\">{{ title }}</span>\n      </section>\n      <section\n        v-if=\"$slots.default\"\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\"\n      >\n        <slot />\n      </section>\n    </div>\n    <slot name=\"tabs\" />\n  </header>\n</template>\n\n<script>\nimport MDCTopAppBarFoundation from '@material/top-app-bar/standard/foundation'\nimport MDCShortTopAppBarFoundation from '@material/top-app-bar/short/foundation'\nimport MDCFixedTopAppBarFoundation from '@material/top-app-bar/fixed/foundation'\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-top-app-bar',\n  mixins: [DispatchEventMixin],\n  props: {\n    short: Boolean,\n    shortCollapsed: Boolean,\n    prominent: Boolean,\n    fixed: Boolean,\n    title: String,\n    icon: {\n      type: [String, Boolean],\n      default: 'menu'\n    },\n    iconClasses: Object,\n    dense: Boolean\n  },\n  data() {\n    return {\n      rootStyles: { top: '0' },\n      rootClasses: {\n        'mdc-top-app-bar': true,\n        'mdc-top-app-bar--dense': this.dense,\n        'mdc-top-app-bar--short': this.short,\n        'mdc-top-app-bar--short-collapsed': this.shortCollapsed,\n        'mdc-top-app-bar--prominent': this.prominent,\n        'mdc-top-app-bar--fixed': this.fixed\n      },\n      foundation: null\n    }\n  },\n  computed: {\n    haveNavigationIcon() {\n      return !!this.icon || this.iconClasses\n    },\n    naviconClasses() {\n      return {\n        'mdc-top-app-bar__navigation-icon': true,\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  },\n  mounted() {\n    const adapter = {\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      getTopAppBarHeight: () => this.$el.clientHeight,\n      registerNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.addEventListener(type, handler)\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.removeEventListener(type, handler)\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.$emit('nav')\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getTotalActionItems: () =>\n        this.$refs.root.querySelectorAll(\n          MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR\n        ).length\n    }\n\n    this.foundation = this.short\n      ? new MDCShortTopAppBarFoundation(adapter)\n      : this.fixed\n      ? new MDCFixedTopAppBarFoundation(adapter)\n      : new MDCTopAppBarFoundation(adapter)\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <a\n    :class=\"actioniconClasses\"\n    href=\"#\"\n    class=\"mdc-top-app-bar-action mdc-top-app-bar--action mdc-top-app-bar__action-item\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-top-app-bar-action',\n  mixins: [DispatchEventMixin, RippleMixin],\n  props: {\n    icon: String,\n    iconClasses: Object\n  },\n  computed: {\n    actioniconClasses() {\n      return {\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTopAppBar from './mdc-top-app-bar.vue'\nimport mdcTopAppBarAction from './mdc-top-app-bar-action.vue'\n\nexport { mdcTopAppBar, mdcTopAppBarAction }\n\nexport default BasePlugin({\n  mdcTopAppBar,\n  mdcTopAppBarAction\n})\n","const typos = [\n  'headline1',\n  'headline2',\n  'headline3',\n  'headline4',\n  'headline5',\n  'headline6',\n  'subtitle1',\n  'subtitle2',\n  'body1',\n  'body2',\n  'caption',\n  'button',\n  'overline'\n]\n\nexport const mdcTypoMixin = name => {\n  return {\n    render(createElement) {\n      return createElement(\n        this.tag,\n        {\n          class: {\n            'mdc-typo': true,\n            [name]: true,\n            [`mdc-typography--${this.typo}`]: true\n          },\n          attrs: this.$attrs,\n          on: this.$listeners\n        },\n        this.$slots.default\n      )\n    }\n  }\n}\n\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\n  return {\n    props: {\n      tag: {\n        type: String,\n        default: defaultTag\n      },\n      typo: {\n        type: String,\n        default: defaultTypo,\n        validator: value => validTypos.indexOf(value) !== -1\n      }\n    }\n  }\n}\n\nexport const mdcTextSection = {\n  name: 'mdc-text-section',\n  props: {\n    tag: {\n      type: String,\n      default: 'section'\n    }\n  },\n  render(createElement) {\n    return createElement(\n      this.tag,\n      {\n        class: {\n          'mdc-typography': true,\n          'mdc-text-section': true\n        },\n        attrs: this.$attrs,\n        on: this.$listeners\n      },\n      this.$slots.default\n    )\n  }\n}\n\nexport const mdcText = {\n  name: 'mdc-text',\n  mixins: [mdcTypoMixin('mdc-text'), mdcTypoPropMixin('p', 'body1', typos)]\n}\n\nexport const mdcDisplay = {\n  name: 'mdc-display',\n  mixins: [\n    mdcTypoMixin('mdc-display'),\n    mdcTypoPropMixin('h1', 'headline4', [\n      'headline4',\n      'headline3',\n      'headline2',\n      'headline1'\n    ])\n  ]\n}\n\nexport const mdcHeadline = {\n  name: 'mdc-headline',\n  mixins: [\n    mdcTypoMixin('mdc-headline'),\n    mdcTypoPropMixin('h2', 'headline5', ['headline5'])\n  ]\n}\n\nexport const mdcTitle = {\n  name: 'mdc-title',\n  mixins: [\n    mdcTypoMixin('mdc-title'),\n    mdcTypoPropMixin('h3', 'headline6', ['headline6'])\n  ]\n}\n\nexport const mdcSubHeading = {\n  name: 'mdc-subheading',\n  mixins: [\n    mdcTypoMixin('mdc-subheading'),\n    mdcTypoPropMixin('h4', 'subtitle2', ['subtitle1', 'subtitle2'])\n  ]\n}\n\nexport const mdcBody = {\n  name: 'mdc-body',\n  mixins: [\n    mdcTypoMixin('mdc-body'),\n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])\n  ]\n}\n\nexport const mdcCaption = {\n  name: 'mdc-caption',\n  mixins: [\n    mdcTypoMixin('mdc-caption'),\n    mdcTypoPropMixin('span', 'caption', ['caption'])\n  ]\n}\n","import { BasePlugin } from '../base'\nimport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n} from './mdc-typography.js'\n\nexport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n}\n\nexport default BasePlugin({\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n})\n","//\n// vue PlugIn\n//\nimport VueMDCButton from './button'\nimport VueMDCCard from './card'\nimport VueMDCCheckbox from './checkbox'\nimport VueMDCChipSet from './chips'\nimport VueMDCDialog from './dialog'\nimport VueMDCDrawer from './drawer'\nimport VueMDCElevation from './elevation'\nimport VueMDCFab from './fab'\nimport VueMDCFloatingLabel from './floating-label'\nimport VueMDCGridList from './grid-list'\nimport VueMDCIcon from './icon'\nimport VueMDCIconButton from './icon-button'\n// import VueMDCIconToggle from './icon-toggle'\nimport VueMDCLayoutApp from './layout-app'\nimport VueMDCLayoutGrid from './layout-grid'\nimport VueMDCLinearProgress from './linear-progress'\nimport VueMDCLineRipple from './line-ripple'\nimport VueMDCList from './list'\nimport VueMDCMaterialIcon from './material-icon'\nimport VueMDCMenu from './menu'\nimport VueMDCNotchedOutline from './notched-outline'\nimport VueMDCRadio from './radio'\nimport VueMDCRipple from './ripple'\nimport VueMDCSelect from './select'\nimport VueMDCSlider from './slider'\nimport VueMDCSnackbar from './snackbar'\nimport VueMDCSwitch from './switch'\nimport VueMDCTabs from './tabs'\nimport VueMDCTextfield from './textfield'\nimport VueMDCTheme from './theme'\nimport VueMDCToolbar from './toolbar'\nimport VueMDCTopAppBar from './top-app-bar'\nimport VueMDCTypography from './typography'\n\nexport default {\n  version: '__VERSION__',\n  install(vm) {\n    vm.use(VueMDCButton)\n    vm.use(VueMDCCard)\n    vm.use(VueMDCCheckbox)\n    vm.use(VueMDCChipSet)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCDialog)\n    vm.use(VueMDCDrawer)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCFab)\n    vm.use(VueMDCFloatingLabel)\n    vm.use(VueMDCGridList)\n    vm.use(VueMDCIcon)\n    vm.use(VueMDCIconButton)\n    // vm.use(VueMDCIconToggle)\n    vm.use(VueMDCLayoutApp)\n    vm.use(VueMDCLayoutGrid)\n    vm.use(VueMDCLinearProgress)\n    vm.use(VueMDCList)\n    vm.use(VueMDCLineRipple)\n    vm.use(VueMDCMenu)\n    vm.use(VueMDCMaterialIcon)\n    vm.use(VueMDCNotchedOutline)\n    vm.use(VueMDCRadio)\n    vm.use(VueMDCRipple)\n    vm.use(VueMDCSelect)\n    vm.use(VueMDCSlider)\n    vm.use(VueMDCSnackbar)\n    vm.use(VueMDCSwitch)\n    vm.use(VueMDCTabs)\n    vm.use(VueMDCTextfield)\n    vm.use(VueMDCTheme)\n    vm.use(VueMDCToolbar)\n    vm.use(VueMDCTopAppBar)\n    vm.use(VueMDCTypography)\n  }\n}\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from './base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","version","install","vm","key","component","name","CustomElement","functional","render","createElement","context","props","is","tag","data","children","CustomElementMixin","CustomLink","type","String","default","link","Object","h","element","_extends","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","to","exact","Boolean","append","replace","activeClass","exactActiveClass","computed","this","emitCustomEvent","el","evtType","evtData","evt","shouldBubble","CustomEvent","detail","bubbles","createEvent","initCustomEvent","dispatchEvent","CustomButton","attrs","role","href","CustomButtonMixin","disabled","extractIconProp","iconProp","classes","content","Array","reduce","result","value","_typeof","className","split","textContent","supportsCssVariables_","DispatchEventMixin","event","methods","$emit","target","eventTarget","args","eventArgs","listeners","$listeners","_this","DispatchFocusMixin","hasFocus","onMouseDown","_active","onMouseUp","onFocusEvent","setTimeout","dispatchFocusEvent","onBlurEvent","_this2","$el","activeElement","contains","mounted","beforeDestroy","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","beforeCreate","vma_uid_","_uid","MDCFoundation","adapter","adapter_","cssClasses","ROOT","UNBOUNDED","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","strings","VAR_LEFT","VAR_TOP","VAR_FG_SIZE","VAR_FG_SCALE","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","numbers","PADDING","INITIAL_ORIGIN_SCALE","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","TAP_DELAY_MS","supportsCssVariables","windowObj","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","getMatchesProperty","HTMLElementPrototype","matchesMethods","method","i","length","matchesMethod","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","left","top","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isUnbounded","isSurfaceActive","isSurfaceDisabled","addClass","removeClass","containsEventTarget","registerInteractionHandler","deregisterInteractionHandler","registerDocumentInteractionHandler","deregisterDocumentInteractionHandler","registerResizeHandler","deregisterResizeHandler","updateCssVariable","computeBoundingRect","getWindowPageOffset","isActivated","hasDeactivationUXRun","wasActivatedByPointer","wasElementMadeActive","activationEvent","isProgrammatic","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","requestAnimationFrame","layoutInternal_","clearTimeout","_this3","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","forEach","_this4","_this5","_this6","_this7","keys","k","indexOf","_this8","activationState","previousActivationEvent","some","_this9","resetActivationState_","push","registerDeactivationHandlers_","checkElementMadeActive_","animateActivation_","keyCode","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","_this10","ev","pageOffset","clientRect","normalizedX","normalizedY","documentX","documentY","changedTouches","pageX","pageY","_this11","_this12","state","_this13","animateDeactivation_","cancelAnimationFrame","_this14","maxDim","max","sqrt","pow","_this15","updateLayoutCssVars_","round","unbounded","_this16","_this17","RippleCapableSurface","prototype","root_","RippleBase","options","MATCHES","$set","$delete","handler","documentElement","varName","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElement","RippleMixin","ripple","init","destroy","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","staticRenderFns","_compiled","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","shadowRoot","originalRender","existing","concat","script","mdcRipple","mdcButton","mdcCard","mdcCardPrimaryAction","mdcCardMedia","mdcCardHeader","mdcCardTitle","mdcCardSubtitle","mdcCardText","mdcCardActions","mdcCardActionButtons","mdcCardActionButton","mdcCardActionIcons","mdcCardActionIcon","UPGRADED","CHECKED","INDETERMINATE","DISABLED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","NATIVE_CONTROL_SELECTOR","TRANSITION_STATE_INIT","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","TRANSITION_STATE_INDETERMINATE","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","ANIM_END_LATCH_MS","MDCCheckboxFoundation","currentCheckState_","currentAnimationClass_","animEndLatchTimer_","enableAnimationEndHandler_","setNativeControlAttr","removeNativeControlAttr","forceLayout","isAttachedToDOM","isIndeterminate","isChecked","hasNativeControl","setNativeControlDisabled","determineCheckState_","updateAriaChecked_","transitionCheckState_","oldState","newState","getTransitionAnimationClass_","LABEL_SELECTOR","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","noPrefix","webkitPrefix","styleProperty","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","style","getJavaScriptEventName","transformStyleProperties","getCorrectEventName","getCorrectPropertyName","mdcCheckbox","ENTRY_ANIMATION_NAME","INTERACTION_EVENT","SELECTION_EVENT","TRAILING_ICON_INTERACTION_EVENT","REMOVAL_EVENT","CHECKMARK_SELECTOR","LEADING_ICON_SELECTOR","TRAILING_ICON_SELECTOR","CHECKMARK","CHIP_EXIT","HIDDEN_LEADING_ICON","LEADING_ICON","TRAILING_ICON","SELECTED","MDCChipFoundation","shouldRemoveOnTrailingIconClick_","hasClass","addClassToLeadingIcon","removeClassFromLeadingIcon","eventTargetHasClass","notifyInteraction","notifySelection","notifyTrailingIconInteraction","notifyRemoval","getComputedStyleValue","setStyleProperty","selected","shouldRemove","propertyName","chipWidth","stopPropagation","beginExit","CHIP_SELECTOR","CHOICE","FILTER","MDCChipSetFoundation","selectedChipIds_","removeChip","setSelected","chipId","deselect_","select","previouslySelectedChip","index","splice","toggleSelect_","chipIsSelected","mdcChip","mdcChipSet","OPEN","OPENING","CLOSING","SCROLLABLE","STACKED","SCROLL_LOCK","SCRIM_SELECTOR","CONTAINER_SELECTOR","SURFACE_SELECTOR","CONTENT_SELECTOR","BUTTON_SELECTOR","DEFAULT_BUTTON_SELECTOR","SUPPRESS_DEFAULT_PRESS_SELECTOR","join","OPENING_EVENT","OPENED_EVENT","CLOSING_EVENT","CLOSED_EVENT","ACTION_ATTRIBUTE","CLOSE_ACTION","DESTROY_ACTION","DIALOG_ANIMATION_OPEN_TIME_MS","DIALOG_ANIMATION_CLOSE_TIME_MS","MDCDialogFoundation","isOpen_","animationFrame_","animationTimer_","escapeKeyAction_","scrimClickAction_","autoStackButtons_","areButtonsStacked_","addBodyClass","removeBodyClass","eventTargetMatches","trapFocus","releaseFocus","isContentScrollable","areButtonsStacked","getActionFromEvent","clickDefaultButton","reverseButtons","notifyOpening","notifyOpened","notifyClosing","notifyClosed","setAutoStackButtons","close","handleAnimationTimerEnd_","runNextAnimationFrame_","action","autoStack","detectStackedButtons_","detectScrollableContent_","isClick","isEnter","callback","candidateSelectors","candidateSelector","matches","Element","msMatchesSelector","webkitMatchesSelector","tabbable","candidate","candidateTabindex","regularTabbables","orderedTabbables","untouchabilityChecker","UntouchabilityChecker","ownerDocument","candidates","querySelectorAll","includeContainer","slice","apply","unshift","isNodeMatchingSelectorTabbable","getTabindex","documentOrder","tabIndex","sort","sortOrderedTabbables","a","isNodeMatchingSelectorFocusable","isInput","isRadio","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isHiddenInput","isUntouchable","isTabbable","Error","isFocusable","focusableCandidateSelector","tabindexAttr","parseInt","getAttribute","isNaN","contentEditable","isContentEditable","b","tagName","elementDocument","doc","cache","hasDisplayNone","nodeComputedStyle","nodeType","Node","ELEMENT_NODE","cached","list","predicate","find","item","defaultView","display","parentNode","visibility","module","arguments","source","hasOwnProperty","trapQueue","activeFocusTraps","activateTrap","trap","activeTrap","pause","trapIndex","deactivateTrap","unpause","delay","fn","userOptions","container","querySelector","config","xtend","returnFocusOnDeactivate","escapeDeactivates","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","activate","activateOptions","updateTabbableNodes","onActivate","addListeners","deactivate","removeListeners","deactivateOptions","onDeactivate","returnFocus","tryFocus","getInitialFocusNode","checkFocusIn","checkPointerDown","checkClick","checkKey","getNodeForOption","optionName","optionValue","clickOutsideDeactivates","preventDefault","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","shiftKey","checkTab","tabbableNodes","focus","toLowerCase","isSelectableInput","closest","selector","parentElement","surfaceEl","createFocusTrap","initialFocus","scrollHeight","offsetHeight","els","tops","Set","offsetTop","size","mdcDialog","DISMISSIBLE","MODAL","ANIMATE","APP_CONTENT_SELECTOR","CLOSE_EVENT","OPEN_EVENT","MDCDismissibleDrawerFoundation","elementHasClass","notifyClose","notifyOpen","saveFocus","restoreFocus","focusActiveNavigationItem","isOpen","isOpening","isClosing","closed","opened","MDCModalDrawerFoundation","LIST_ITEM_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_ACTIVATED_CLASS","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_SELECTED","ARIA_CHECKED","ARIA_CHECKED_RADIO_SELECTOR","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_CHECKED_CHECKBOX_SELECTOR","RADIO_SELECTOR","CHECKBOX_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","FOCUSABLE_CHILD_ELEMENTS","ENABLED_ITEMS_SELECTOR","ELEMENTS_KEY_ALLOWED_IN","MDCListFoundation","wrapFocus_","isVertical_","isSingleSelectionList_","selectedIndex_","focusedItemIndex_","useActivatedClass_","isCheckboxList_","isRadioList_","getListItemCount","getFocusedElementIndex","setAttributeForElementIndex","removeAttributeForElementIndex","addClassForElementIndex","removeClassForElementIndex","focusItemAtIndex","setTabIndexForListItemChildren","followHref","hasRadioAtIndex","hasCheckboxAtIndex","isCheckboxCheckedAtIndex","setCheckedCheckboxOrRadioAtIndex","isFocusInsideList","useActivated","isIndexValid_","setCheckboxAtIndex_","setRadioAtIndex_","setSingleSelectionAtIndex_","listItemIndex","setTabindexToFirstSelectedItem_","isRootListItem","arrowLeft","arrowUp","arrowRight","arrowDown","isHome","isEnd","isSpace","currentIndex","nextIndex","preventDefaultEvent_","focusNextElement","focusPrevElement","focusFirstElement","focusLastElement","isSelectableList_","setSelectedIndexOnAction_","setTabindexAtIndex_","toggleCheckbox","prevIndex","lastIndex","selectedClassName","targetIndex","minIndex","min","isIndexInRange_","listSize","toggleCheckboxAtIndex_","setSelectedIndex","filter","mdcDrawer","mdcDrawerHeader","mdcDrawerList","mdcDrawerItem","mdcDrawerDivider","mdcElevation","mdcFAB","LABEL_FLOAT_ABOVE","LABEL_SHAKE","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shouldShake","shouldFloat","mdcFloatingLabel","TILES_SELECTOR","TILE_SELECTOR","MDCGridListFoundation","alignCenter","resizeFrame_","getOffsetWidth","getNumberOfTiles","getOffsetWidthForTileAtIndex","setStyleForTilesElement","alignCenter_","gridWidth","itemWidth","tilesWidth","mdcGridList","mdcGridTile","mdcIcon","ICON_BUTTON_ON","ARIA_PRESSED","CHANGE_EVENT","MDCIconButtonToggleFoundation","disabled_","setAttr","notifyChange","isOn","toggle","mdcIconButton","mdcIconToggle","mdcLayoutApp","mdcLayoutGrid","mdcLayoutCell","mdcLayoutInnerGrid","CLOSED_CLASS","INDETERMINATE_CLASS","REVERSED_CLASS","PRIMARY_BAR_SELECTOR","BUFFER_SELECTOR","MDCLinearProgressFoundation","getPrimaryBar","getBuffer","setStyle","determinate_","reverse_","progress_","isDeterminate","setScale_","isReversed","scaleValue","transformStyleProperty","mdcLinearProgress","LINE_RIPPLE_ACTIVE","LINE_RIPPLE_DEACTIVATING","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","xCoordinate","isDeactivating","mdcLineRipple","mdcList","mdcListItem","mdcListDivider","mdcListGroup","mdcListGroupHeader","mdcListGroupDivider","mdcMaterialIcon","MENU_SELECTED_LIST_ITEM","MENU_SELECTION_GROUP","SELECTED_EVENT","ARIA_SELECTED_ATTR","LIST_SELECTOR","ANCHOR","ANIMATING_CLOSED","ANIMATING_OPEN","FIXED","FOCUSABLE_ELEMENTS","TRANSITION_OPEN_DURATION","TRANSITION_CLOSE_DURATION","MARGIN_TO_EDGE","ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO","CornerBit","Corner","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_START","TOP_END","BOTTOM_START","BOTTOM_END","MDCMenuSurfaceFoundation","openAnimationEndTimerId_","closeAnimationEndTimerId_","animationRequestId_","dimensions_","anchorCorner_","anchorMargin_","right","bottom","measures_","quickOpen_","hoistedElement_","isFixedPosition_","position_","hasAnchor","isElementInContainer","isRtl","setTransformOrigin","isFocused","isFirstElementFocused","isLastElementFocused","getInnerDimensions","getAnchorDimensions","getWindowDimensions","getBodyDimensions","getWindowScroll","setPosition","setMaxHeight","corner","margin","isHoisted","isFixedPosition","typeCheckisFinite_","quickOpen","isTab","anchorRect","viewport","bodyDimensions","windowScroll","viewportDistance","anchorHeight","anchorWidth","surfaceHeight","surfaceWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","rightOffset","avoidVerticalOverlap","maxHeight","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuSurfaceHeight","getMenuSurfaceMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","position","prop","adjustPositionForHoistedElement_","autoPosition_","maybeRestoreFocus_","num","isFinite","MDCMenuFoundation","addClassToElementAtIndex","removeClassFromElementAtIndex","addAttributeToElementAtIndex","removeAttributeFromElementAtIndex","elementContainsClass","closeSurface","getElementIndex","getParentElement","getSelectedElementIndex","notifySelected","handleAction_","listItem","getListItem_","handleSelection","selectionGroup","getSelectionGroup_","handleSelectionGroup_","selectedIndex","isGroup","isListItem","storedTransformPropertyName_","transformPropertyName","mdcMenu","mdcMenuSurface","mdcMenuItem","mdcMenuDivider","mdcMenuAnchor","NOTCH_ELEMENT_SELECTOR","NOTCH_ELEMENT_PADDING","OUTLINE_NOTCHED","OUTLINE_UPGRADED","NO_LABEL","MDCNotchedOutlineFoundation","setNotchWidthProperty","removeNotchWidthProperty","notchWidth","mdcNotchedOutline","MDCRadioFoundation","mdcRadio","OUTLINED","FOCUSED","SELECTED_ITEM_CLASS","WITH_LEADING_ICON","INVALID","REQUIRED","ARIA_CONTROLS","SELECTED_ITEM_SELECTOR","SELECTED_TEXT_SELECTOR","HIDDEN_INPUT_SELECTOR","MENU_SELECTOR","LINE_RIPPLE_SELECTOR","OUTLINE_SELECTOR","ENHANCED_VALUE_ATTR","LABEL_SCALE","MDCSelectFoundation","foundationMap","leadingIcon_","leadingIcon","helperText_","helperText","activateBottomLine","deactivateBottomLine","setValue","getValue","floatLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","openMenu","closeMenu","isMenuOpen","setDisabled","setRippleCenter","checkValidity","setValid","handleChange","isDisabled","setContent","openNotch","didChange","optionHasValue","isRequired","isValid","setValidity","showToScreenReader","labelScale","labelWidth","label","setAriaLabel","mdcSelect","ACTIVE","DISCRETE","FOCUS","IN_TRANSIT","IS_DISCRETE","HAS_TRACK_MARKER","TRACK_SELECTOR","TRACK_MARKER_CONTAINER_SELECTOR","LAST_TRACK_MARKER_SELECTOR","THUMB_CONTAINER_SELECTOR","PIN_VALUE_MARKER_SELECTOR","ARIA_VALUEMIN","ARIA_VALUEMAX","ARIA_VALUENOW","ARIA_DISABLED","STEP_DATA_ATTR","INPUT_EVENT","PAGE_FACTOR","KEY_IDS","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","rect_","savedTabIndex_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","handleDown_","keydownHandler_","handleKeydown_","handleFocus_","handleBlur_","setAttribute","removeAttribute","getTabIndex","registerThumbContainerInteractionHandler","deregisterThumbContainerInteractionHandler","registerBodyInteractionHandler","deregisterBodyInteractionHandler","notifyInput","setThumbContainerStyleProperty","setTrackStyleProperty","setMarkerValue","appendTrackMarkers","removeTrackMarkers","setLastTrackMarkersStyleProperty","isRTL","evtName","getStep","getMin","getMax","step","numMarkers","indivisible","ceil","lastStepRatio","flex","updateUIForCurrentValue_","setValue_","setupTrackMarker","toggleClass_","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","setValueFromEvt_","targetTouches","getPageX_","computeValueFromPageX_","pctComplete","keyId","getKeyId_","getValueForKeyId_","kbdEvt","delta","shouldFireInput","force","valueSetToBoundary","quantize_","translatePx","transformProp","transitionendEvtName","onTransitionEnd","inTransit","shouldBePresent","mdcSlider","ACTION_SELECTOR","DISMISS_SELECTOR","REASON_ACTION","REASON_DISMISS","ARIA_LIVE_LABEL_TEXT_ATTR","MIN_AUTO_DISMISS_TIMEOUT_MS","MAX_AUTO_DISMISS_TIMEOUT_MS","DEFAULT_AUTO_DISMISS_TIMEOUT_MS","SNACKBAR_ANIMATION_OPEN_TIME_MS","SNACKBAR_ANIMATION_CLOSE_TIME_MS","ARIA_LIVE_DELAY_MS","MDCSnackbarFoundation","autoDismissTimer_","autoDismissTimeoutMs_","closeOnEscape_","announce","clearAutoDismissTimer_","getTimeoutMs","reason","timeoutMs","minValue","maxValue","closeOnEscape","getCloseOnEscape","mdcSnackbar","RIPPLE_SURFACE_SELECTOR","MDCSwitchFoundation","setNativeControlChecked","updateCheckedStyling_","mdcSwitch","RIPPLE_SELECTOR","TAB_INDICATOR_SELECTOR","TABINDEX","INTERACTED_EVENT","MDCTabFoundation","focusOnActivate_","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getContentOffsetLeft","getContentOffsetWidth","focusOnActivate","previousIndicatorClientRect","isActive","rootWidth","rootLeft","contentWidth","contentLeft","rootRight","contentRight","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","HOME_KEY","ENTER_KEY","SPACE_KEY","EXTRA_SCROLL_AMOUNT","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","HOME_KEYCODE","ENTER_KEYCODE","SPACE_KEYCODE","ACCEPTABLE_KEYS","KEYCODE_MAP","Map","set","MDCTabBarFoundation","useAutomaticActivation_","scrollTo","incrementScroll","getScrollPosition","getScrollContentWidth","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTabById","getTabListLength","notifyTabActivated","useAutomaticActivation","previousActiveIndex","indexIsInRange_","scrollIntoView","getKeyFromEvent_","isActivationKey_","determineTargetFromKey_","focusedTabIndex","tabId","isRTL_","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","leftIncrement","rightIncrement","scrollContentWidth","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","rootDelta","has","get","findAdjacentTabIndexClosestToEdge_","scrollIncrement","calculateScrollIncrement_","scrollWidth","findAdjacentTabIndexClosestToEdgeRTL_","calculateScrollIncrementRTL_","horizontalScrollbarHeight_","ANIMATING","SCROLL_TEST","SCROLL_AREA_SCROLL","AREA_SELECTOR","MDCTabScrollerRTL","translateX","scrollX","MDCTabScrollerRTLDefault","currentScrollLeft","getScrollAreaScrollLeft","calculateScrollEdges_","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","MDCTabScrollerRTLNegative","MDCTabScrollerRTLReverse","MDCTabScrollerFoundation","isAnimating_","rtlScrollerInstance_","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","horizontalScrollbarHeight","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","stopScrollAnimation_","scrollXIncrement","incrementScrollRTL_","incrementScroll_","scrollToRTL_","scrollTo_","rtlScrollerFactory_","transformValue","parts","exec","parseFloat","getRTLScroller","getScrollPositionRTL","currentScrollX","safeScrollX","animate_","animation","scrollToRTL","targetScrollX","incrementScrollRTL","currentScrollPosition","getAnimatingScrollPosition_","scrollLeft","getAnimatingScrollPosition","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","p","pop","documentObj","shouldCacheResult","classList","clientHeight","removeChild","FADE","NO_TRANSITION","MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","MDCSlidingTabIndicatorFoundation","currentClientRect","widthDelta","xPosition","mdcTab","mdcTabBar","mdcTabScroller","mdcTabIndicator","mdcTabRipple","ARIA_HIDDEN","ROLE","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCTextFieldHelperTextFoundation","removeAttr","isPersistent","isValidation","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","hide_","ICON_EVENT","ICON_ROLE","MDCTextFieldIconFoundation","interactionHandler_","handleInteraction","getAttr","notifyIconAction","INPUT_SELECTOR","ICON_SELECTOR","DENSE","TEXTAREA","DENSE_LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","MDCTextFieldFoundation","trailingIcon_","trailingIcon","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","useNativeValidation_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","getNativeInput_","shouldAlwaysFloat_","isBadInput_","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","deregisterValidationAttributeChangeHandler","getNativeInput","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","hasLabel","attributeName","styleValidity_","styleFocused_","targetEvent","targetClientRect","touches","clientX","isNativeInputValid_","useNativeValidation","styleDisabled_","validity","badInput","valid","mdcTextField","mdcTheme","FIXED_LASTROW","FIXED_AT_LAST_ROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","FLEXIBLE_MAX","FLEXIBLE_MIN","TITLE_SELECTOR","FIRST_ROW_SELECTOR","MAX_TITLE_SIZE","MIN_TITLE_SIZE","TOOLBAR_ROW_HEIGHT","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_MOBILE_BREAKPOINT","MDCToolbarFoundation","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYRatio","scrollThresholdRatio","toolbarHeight","flexibleExpansionHeight","maxTranslateYDistance","scrollThreshold","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","registerScrollHandler","deregisterScrollHandler","getViewportWidth","getViewportScrollY","getOffsetHeight","getFirstRowElementOffsetHeight","setStyleForTitleElement","setStyleForFlexibleRowElement","setStyleForFixedAdjustElement","initKeyRatio_","setKeyHeights_","scrollTop","newToolbarRowHeight","getRowHeight_","updateAdjustElementStyles","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","breakpoint","translateDistance","updateElementStylesDefaultBehavior_","maxTitleSize","minTitleSize","currentTitleSize","mdcToolbar","mdcToolbarRow","mdcToolbarSection","mdcToolbarMenuIcon","mdcToolbarTitle","mdcToolbarIcon","FIXED_CLASS","FIXED_SCROLLED_CLASS","SHORT_CLASS","SHORT_HAS_ACTION_ITEM_CLASS","SHORT_COLLAPSED_CLASS","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","MAX_TOP_APP_BAR_HEIGHT","ACTION_ITEM_SELECTOR","NAVIGATION_EVENT","NAVIGATION_ICON_SELECTOR","ROOT_SELECTOR","MDCTopAppBarBaseFoundation","navClickHandler_","notifyNavigationIconClicked","getTopAppBarHeight","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","getTotalActionItems","INITIAL_VALUE","MDCTopAppBarFoundation","lastScrollPosition_","topAppBarHeight_","wasDocked_","isDockedShowing_","currentAppBarOffsetTop_","isCurrentlyBeingResized_","resizeThrottleId_","resizeDebounceId_","topAppBarScrollHandler_","topAppBarResizeHandler_","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","checkForUpdate_","offset","abs","diff","moveTopAppBar_","throttledResizeHandler_","currentHeight","MDCShortTopAppBarFoundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","MDCFixedTopAppBarFoundation","wasScrolled_","fixedScrollHandler_","mdcTopAppBar","mdcTopAppBarAction","mdcTypoMixin","class","typo","$attrs","$slots","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","validator","mdcTextSection","mdcText","mixins","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","mdcBody","mdcCaption","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCElevation","VueMDCDialog","VueMDCDrawer","VueMDCFab","VueMDCFloatingLabel","VueMDCGridList","VueMDCIcon","VueMDCIconButton","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCLineRipple","VueMDCMenu","VueMDCMaterialIcon","VueMDCNotchedOutline","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography","plugin","_Vue","Vue","global"],"mappings":"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"}