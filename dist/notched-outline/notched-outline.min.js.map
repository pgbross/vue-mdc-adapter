{"version":3,"file":"notched-outline.min.js","sources":["../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../components/notched-outline/mdc-notched-outline.vue","../../components/base/base-plugin.js","../../components/notched-outline/index.js","../../components/base/auto-init.js","../../components/notched-outline/entry.js"],"sourcesContent":["const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // This should stay in sync with $mdc-notched-outline-padding * 2.\n  NOTCH_ELEMENT_PADDING: 8,\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n  OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',\n  NO_LABEL: 'mdc-notched-outline--no-label',\n};\n\nexport {cssClasses, numbers, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      setNotchWidthProperty: () => {},\n      removeNotchWidthProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth.\n   * @param {number} notchWidth\n   */\n  notch(notchWidth) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n\n    if (notchWidth > 0) {\n      notchWidth += numbers.NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n    }\n\n    this.adapter_.setNotchWidthProperty(notchWidth);\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n    this.adapter_.removeNotchWidthProperty();\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div ref=\"outlined\" :class=\"outlinedClasses\">\n    <div class=\"mdc-notched-outline__leading\"></div>\n    <div ref=\"notchEl\" class=\"mdc-notched-outline__notch\">\n      <mdc-floating-label v-if=\"$slots.default\" ref=\"labelEl\"\n        ><slot\n      /></mdc-floating-label>\n    </div>\n    <div class=\"mdc-notched-outline__trailing\"></div>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-notched-outline',\n  data() {\n    return {\n      outlinedClasses: { 'mdc-notched-outline': true }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundation({\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n\n      setNotchWidthProperty: width =>\n        this.$refs.notchEl.style.setProperty('width', width + 'px'),\n      removeNotchWidthProperty: () =>\n        this.$refs.notchEl.style.removeProperty('width')\n    })\n    this.foundation.init()\n\n    if (this.$slots.default) {\n      // this.$refs.labelEl.style.transitionDuration = '0s'\n\n      this.$set(\n        this.outlinedClasses,\n        MDCnotchedOutlineFoundation.cssClasses.OUTLINE_UPGRADED,\n        true\n      )\n      // requestAnimationFrame(() => {\n      //   this.$refs.labelEl.style.transitionDuration = ''\n      // })\n    } else {\n      this.$set(\n        this.outlinedClasses,\n        MDCnotchedOutlineFoundation.cssClasses.NO_LABEL,\n        true\n      )\n    }\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  },\n\n  methods: {\n    notch(notchWidth) {\n      this.foundation.notch(notchWidth)\n    },\n\n    closeNotch() {\n      this.foundation.closeNotch()\n    },\n    float(shouldFloat) {\n      this.$refs.labelEl && this.$refs.labelEl.float(shouldFloat)\n    },\n\n    shake(shouldShake) {\n      this.$refs.labelEl && this.$refs.labelEl.shake(shouldShake)\n    },\n\n    getWidth() {\n      return this.$refs.labelEl.getWidth()\n    }\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcNotchedOutline from './mdc-notched-outline.vue'\n\nexport { mdcNotchedOutline }\n\nexport default BasePlugin({\n  mdcNotchedOutline\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["Math","floor","random","toString","MDCFoundation","adapter","adapter_","strings","NOTCH_ELEMENT_SELECTOR","numbers","NOTCH_ELEMENT_PADDING","cssClasses","OUTLINE_NOTCHED","OUTLINE_UPGRADED","NO_LABEL","MDCNotchedOutlineFoundation","_extends","defaultAdapter","addClass","removeClass","setNotchWidthProperty","removeNotchWidthProperty","notchWidth","components","version","install","vm","key","component","name","mdcNotchedOutline","plugin","_Vue","window","Vue","global","use"],"mappings":";;;;;;;;;qnCACEA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,YAAaE;;;;;;;;;;;;;;;;;;;;;;KADrD,IC0BMC,8BAiCQC,yDAAU,kBAEfC,SAAWD,0DA9BT,yCAOA,yCAOA,gDAQA,sFC7BLE,EAAU,CACdC,uBAAwB,+BAIpBC,EAAU,CAEdC,sBAAuB,GAInBC,EAAa,CACjBC,gBAAiB,+BACjBC,iBAAkB,gCAClBC,SAAU,iCCPNC,yBAiCQV,0CACJW,EAAcD,EAA4BE,eAAgBZ,iPAlC1BD,kDAG/BG,4CAKAI,yCAKAF,gDAULS,SAAU,aACVC,YAAa,aACbC,sBAAuB,aACvBC,yBAA0B,mDAgBxBC,OACGV,EAAmBG,EAA4BJ,WAA/CC,gBAEHU,EAAa,IACfA,GAAcb,EAAQC,4BAGnBJ,SAASc,sBAAsBE,QAC/BhB,SAASY,SAASN,4CAOhBA,EAAmBG,EAA4BJ,WAA/CC,qBACFN,SAASa,YAAYP,QACrBN,SAASe,izBCxFlB,k6CCF2BE,+EAClB,CACLC,QAAS,cACTC,QAAS,SAAAC,OACF,IAAIC,KAAOJ,EAAY,KACtBK,EAAYL,EAAWI,GAC3BD,EAAGE,UAAUA,EAAUC,KAAMD,KAGjCL,WATuBA,ECKD,CACxBO,kBAAAA,WCNK,SAAkBC,OAEnBC,EAAO,KACW,oBAAXC,OACTD,EAAOC,OAAOC,IACa,oBAAXC,SAEhBH,EAAOG,OAAOD,KAEZF,GACFA,EAAKI,IAAIL,ICLJA"}