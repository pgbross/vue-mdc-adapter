{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-link.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/chips/chip/adapter.js","../../node_modules/@material/chips/chip/constants.js","../../node_modules/@material/chips/chip/foundation.js","../../components/chips/mdc-chip.vue","../../node_modules/@material/chips/chip-set/adapter.js","../../node_modules/@material/chips/chip-set/constants.js","../../node_modules/@material/chips/chip-set/foundation.js","../../components/chips/mdc-chip-set.vue","../../components/chips/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['RouterLink']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:selection\" event denoting the chip has been selected or deselected.\n   * @param {boolean} selected\n   */\n  notifySelection(selected) {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval() {}\n\n  /**\n   * Returns the computed property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getComputedStyleValue(propertyName) {}\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns whether the chip has a leading icon.\n   * @return {boolean}\n   */\n  hasLeadingIcon() {}\n\n  /**\n   * Returns the bounding client rect of the root element.\n   * @return {!ClientRect}\n   */\n  getRootBoundingClientRect() {}\n\n  /**\n   * Returns the bounding client rect of the checkmark element or null if it doesn't exist.\n   * @return {?ClientRect}\n   */\n  getCheckmarkBoundingClientRect() {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  SELECTION_EVENT: 'MDCChip:selection',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      notifyInteraction: () => {},\n      notifySelection: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n      hasLeadingIcon: () => {},\n      getRootBoundingClientRect: () => {},\n      getCheckmarkBoundingClientRect: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /**\n     * Whether a trailing icon click should immediately trigger exit/removal of the chip.\n     * @private {boolean}\n     * */\n    this.shouldRemoveOnTrailingIconClick_ = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n    this.adapter_.notifySelection(selected);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick_;\n  }\n\n  /**\n   * @param {boolean} shouldRemove\n   */\n  setShouldRemoveOnTrailingIconClick(shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  }\n\n  /** @return {!ClientRect} */\n  getDimensions() {\n    // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n    // size of the checkmark.\n    if (!this.adapter_.hasLeadingIcon() && this.adapter_.getCheckmarkBoundingClientRect() !== null) {\n      const height = this.adapter_.getRootBoundingClientRect().height;\n      // The checkmark's width is initially set to 0, so use the checkmark's height as a proxy since the checkmark\n      // should always be square.\n      const width =\n          this.adapter_.getRootBoundingClientRect().width + this.adapter_.getCheckmarkBoundingClientRect().height;\n      return /** @type {!ClientRect} */ ({height, width});\n    } else {\n      return this.adapter_.getRootBoundingClientRect();\n    }\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter_.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      if (this.shouldRemoveOnTrailingIconClick_) {\n        this.beginExit();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipInteractionEventType;\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *     selected: boolean,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipSelectionEventType;\n\n/**\n * @typedef {{\n *   detail: {\n *     chipId: string,\n *     root: Element,\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipRemovalEventType;\n\nexport {MDCChipFoundation, MDCChipInteractionEventType, MDCChipSelectionEventType, MDCChipRemovalEventType};\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"classes\"\n    :style=\"styles\"\n    tabindex=\"0\"\n    @click=\"handleInteraction\"\n    @keydown=\"handleInteraction\"\n    @transitionend=\"handleTransitionEnd\"\n  >\n    <i\n      v-if=\"haveleadingIcon\"\n      ref=\"leadingIcon\"\n      :class=\"leadingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--leading\"\n      >{{ leadingIcon }}</i\n    >\n    <div v-if=\"isFilter\" ref=\"checkmarkEl\" class=\"mdc-chip__checkmark\">\n      <svg class=\"mdc-chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n        <path\n          class=\"mdc-chip__checkmark-path\"\n          fill=\"none\"\n          stroke=\"black\"\n          d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n        />\n      </svg>\n    </div>\n    <div class=\"mdc-chip__text\"><slot /></div>\n    <i\n      v-if=\"havetrailingIcon\"\n      ref=\"trailingIcon\"\n      :class=\"trailingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--trailing\"\n      tabindex=\"0\"\n      role=\"button\"\n      @click=\"handleTrailingIconInteraction\"\n      @keydown=\"handleTrailingIconInteraction\"\n      >{{ trailingIcon }}</i\n    >\n  </div>\n</template>\napplyPassive\n<script>\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\nimport { CustomLinkMixin, emitCustomEvent } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true\n      },\n      styles: {},\n      id: ''\n    }\n  },\n  computed: {\n    selected: {\n      get() {\n        return this.foundation.isSelected()\n      },\n      set(nv) {\n        this.foundation.setSelected(nv)\n      }\n    },\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      )\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      )\n    }\n  },\n\n  created() {\n    this.id = this.mdcChipSet.nextId()\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className)\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className)\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chipId: this.id\n          },\n          true\n        )\n        this.mdcChipSet && this.mdcChipSet.handleInteraction\n      },\n\n      notifySelection: selected =>\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.SELECTION_EVENT,\n          { chipId: this.id, selected: selected },\n          true /* shouldBubble */\n        ),\n      notifyTrailingIconInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chipId: this.id\n          },\n          true\n        )\n      },\n      notifyRemoval: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.REMOVAL_EVENT,\n          { chipId: this.id, root: this.$el },\n          true\n        )\n      },\n      getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this.$el).getPropertyValue(propertyName),\n      setStyleProperty: (property, value) =>\n        this.$set(this.styles, property, value),\n\n      hasLeadingIcon: () => !!this.haveleadingIcon,\n      getRootBoundingClientRect: () => this.$el.getBoundingClientRect(),\n      getCheckmarkBoundingClientRect: () =>\n        this.$refs.checkmarkEl\n          ? this.$refs.checkmarkEl.getBoundingClientRect()\n          : null\n    })\n\n    this.foundation.init()\n\n    this.mdcChipSet.chips.push(this)\n\n    this.ripple = new RippleBase(this, {\n      computeBoundingRect: () => this.foundation.getDimensions()\n    })\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    handleInteraction(evt) {\n      this.foundation.handleInteraction(evt)\n    },\n    handleTransitionEnd(evt) {\n      this.foundation.handleTransitionEnd(evt)\n    },\n    handleTrailingIconInteraction(evt) {\n      this.foundation.handleTrailingIconInteraction(evt)\n    },\n    toggleSelected() {\n      this.foundation.toggleSelected()\n    },\n    isSelected() {\n      return this.foundation.isSelected()\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Removes the chip with the given id from the chip set.\n   * @param {string} chipId\n   */\n  removeChip(chipId) {}\n\n  /**\n   * Sets the selected state of the chip with the given id.\n   * @param {string} chipId\n   * @param {boolean} selected\n   */\n  setSelected(chipId, selected) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipInteractionEventType, MDCChipSelectionEventType, MDCChipRemovalEventType} from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      removeChip: () => {},\n      setSelected: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<string>}\n     */\n    this.selectedChipIds_ = [];\n  }\n\n  /**\n   * Returns an array of the IDs of all selected chips.\n   * @return {!Array<string>}\n   */\n  getSelectedChipIds() {\n    return this.selectedChipIds_;\n  }\n\n  /**\n   * Toggles selection of the chip with the given id.\n   * @private\n   * @param {string} chipId\n   */\n  toggleSelect_(chipId) {\n    if (this.selectedChipIds_.indexOf(chipId) >= 0) {\n      this.deselect_(chipId);\n    } else {\n      this.select(chipId);\n    }\n  }\n\n  /**\n   * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.\n   * @param {string} chipId\n   */\n  select(chipId) {\n    if (this.selectedChipIds_.indexOf(chipId) >= 0) {\n      return;\n    }\n\n    if (this.adapter_.hasClass(cssClasses.CHOICE) && this.selectedChipIds_.length > 0) {\n      const previouslySelectedChip = this.selectedChipIds_[0];\n      this.selectedChipIds_.length = 0;\n      this.adapter_.setSelected(previouslySelectedChip, false);\n    }\n    this.selectedChipIds_.push(chipId);\n    this.adapter_.setSelected(chipId, true);\n  }\n\n  /**\n   * Deselects the chip with the given id.\n   * @private\n   * @param {string} chipId\n   */\n  deselect_(chipId) {\n    const index = this.selectedChipIds_.indexOf(chipId);\n    if (index >= 0) {\n      this.selectedChipIds_.splice(index, 1);\n      this.adapter_.setSelected(chipId, false);\n    }\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {string} chipId\n   */\n  handleChipInteraction(chipId) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      this.toggleSelect_(chipId);\n    }\n  }\n\n  /**\n   * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.\n   * @param {string} chipId\n   * @param {boolean} selected\n   */\n  handleChipSelection(chipId, selected) {\n    const chipIsSelected = this.selectedChipIds_.indexOf(chipId) >= 0;\n    if (selected && !chipIsSelected) {\n      this.select(chipId);\n    } else if (!selected && chipIsSelected) {\n      this.deselect_(chipId);\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {string} chipId\n   */\n  handleChipRemoval(chipId) {\n    this.deselect_(chipId);\n    this.adapter_.removeChip(chipId);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation'\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\n\nlet idCounter = 0\n\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n    input: [Boolean]\n  },\n  provide() {\n    return { mdcChipSet: this }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n        'mdc-chip-set--input': this.input\n      },\n\n      chips: []\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      removeChip: chipId => {\n        const index = this.findChipIndex(chipId)\n\n        if (index > 0) {\n          this.$nextTick(() => {\n            this.chips.splice(index, 1)\n          })\n        }\n      },\n      setSelected: (chipId, selected) => {\n        const index = this.findChipIndex(chipId)\n        if (index >= 0) {\n          this.chips[index].selected = selected\n        }\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    nextId() {\n      return `mdc-chip-${++idCounter}`\n    },\n    findChipIndex(chipId) {\n      for (let i = 0; i < this.chips.length; i++) {\n        if (this.chips[i].id === chipId) {\n          return i\n        }\n      }\n      return -1\n    },\n    handleChipInteraction(evt) {\n      this.foundation.handleChipInteraction(evt.detail.chipId)\n    },\n    handleChipRemoval(evt) {\n      this.foundation.handleChipRemoval(evt.detail.chipId)\n    },\n    handleChipSelection(evt) {\n      this.foundation.handleChipSelection(\n        evt.detail.chipId,\n        evt.detail.selected\n      )\n    }\n  },\n  render(h) {\n    return h(\n      'div',\n      {\n        class: this.classes,\n        on: {\n          [MDCChipFoundation.strings.INTERACTION_EVENT]: evt =>\n            this.handleChipInteraction(evt),\n          [MDCChipFoundation.strings.SELECTION_EVENT]: evt =>\n            this.handleChipSelection(evt),\n          [MDCChipFoundation.strings.REMOVAL_EVENT]: evt =>\n            this.handleChipRemoval(evt)\n        }\n      },\n      this.$slots.default\n    )\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { mdcChip, mdcChipSet }\n\nexport default BasePlugin({\n  mdcChip,\n  mdcChipSet\n})\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","CustomLink","functional","props","tag","type","String","default","link","Object","render","h","context","element","data","parent","$router","$root","$options","on","click","nativeOn","children","CustomLinkMixin","to","exact","Boolean","append","replace","activeClass","exactActiveClass","computed","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","document","createEvent","initCustomEvent","dispatchEvent","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCChipAdapter","className","target","selected","propertyName","value","strings","ENTRY_ANIMATION_NAME","INTERACTION_EVENT","SELECTION_EVENT","TRAILING_ICON_INTERACTION_EVENT","REMOVAL_EVENT","CHECKMARK_SELECTOR","LEADING_ICON_SELECTOR","TRAILING_ICON_SELECTOR","cssClasses","CHECKMARK","CHIP_EXIT","HIDDEN_LEADING_ICON","LEADING_ICON","TRAILING_ICON","SELECTED","MDCChipFoundation","addClass","removeClass","hasClass","addClassToLeadingIcon","removeClassFromLeadingIcon","eventTargetHasClass","notifyInteraction","notifySelection","notifyTrailingIconInteraction","notifyRemoval","getComputedStyleValue","setStyleProperty","hasLeadingIcon","getRootBoundingClientRect","getCheckmarkBoundingClientRect","defaultAdapter","shouldRemoveOnTrailingIconClick_","shouldRemove","height","width","keyCode","chipWidth","requestAnimationFrame","stopPropagation","beginExit","MDCChipSetAdapter","chipId","CHIP_SELECTOR","CHOICE","FILTER","MDCChipSetFoundation","removeChip","setSelected","selectedChipIds_","indexOf","deselect_","select","length","previouslySelectedChip","push","index","splice","toggleSelect_","chipIsSelected","mdcChip","mdcChipSet"],"mappings":"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"}