{"version":3,"file":"typography.min.js","sources":["../../components/base/uniqueid-mixin.js","../../components/typography/typography-mixin.js","../../components/base/base-plugin.js","../../components/typography/mdc-typography.js","../../components/typography/index.js","../../components/base/auto-init.js","../../components/typography/entry.js"],"sourcesContent":["const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","export function mdcTypoMixin(\n  defaultTag,\n  defaultClassModifier,\n  name = `mdc-${defaultTag}`\n) {\n  return {\n    props: {\n      tag: {\n        type: String,\n        default: defaultTag\n      },\n      classModifier: {\n        type: String,\n        default: defaultClassModifier\n      }\n    },\n    render(createElement) {\n      return createElement(\n        this.tag,\n        {\n          class: {\n            [name]: true,\n            'mdc-typography': true,\n            [`mdc-typography--${this.classModifier}`]: true\n          },\n          attrs: this.$attrs,\n          on: this.$listeners\n        },\n        this.$slots.default\n      )\n    }\n  }\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { mdcTypoMixin } from './typography-mixin.js'\n\nexport const mdcHeadline1 = {\n  name: 'mdc-headline1',\n  mixins: [mdcTypoMixin('h1', 'headline1')]\n}\n\nexport const mdcHeadline2 = {\n  name: 'mdc-headline2',\n  mixins: [mdcTypoMixin('h2', 'headline2')]\n}\n\nexport const mdcHeadline3 = {\n  name: 'mdc-headline3',\n  mixins: [mdcTypoMixin('h3', 'headline3')]\n}\n\nexport const mdcHeadline4 = {\n  name: 'mdc-headline4',\n  mixins: [mdcTypoMixin('h4', 'headline4')]\n}\n\nexport const mdcHeadline5 = {\n  name: 'mdc-headline5',\n  mixins: [mdcTypoMixin('h5', 'headline5')]\n}\n\nexport const mdcHeadline6 = {\n  name: 'mdc-headline6',\n  mixins: [mdcTypoMixin('h6', 'headline6')]\n}\n\nexport const mdcSubtitle1 = {\n  name: 'mdc-subtitle1',\n  mixins: [mdcTypoMixin('h6', 'subtitle1')]\n}\nexport const mdcSubtitle2 = {\n  name: 'mdc-subtitle2',\n  mixins: [mdcTypoMixin('h6', 'subtitle2')]\n}\n\nexport const mdcBody1 = {\n  name: 'mdc-body1',\n  mixins: [mdcTypoMixin('p', 'body1')]\n}\n\nexport const mdcBody2 = {\n  name: 'mdc-body2',\n  mixins: [mdcTypoMixin('p', 'body2')]\n}\n\nexport const mdcButton1 = {\n  name: 'mdc-button1',\n  mixins: [mdcTypoMixin('span', 'button', 'mdc-button1')]\n}\n\nexport const mdcCaption = {\n  name: 'mdc-caption',\n  mixins: [mdcTypoMixin('span', 'caption')]\n}\n\nexport const mdcOverline = {\n  name: 'mdc-overline',\n  mixins: [mdcTypoMixin('span', 'overline')]\n}\n","import { BasePlugin } from '../base'\nimport {\n  mdcHeadline1,\n  mdcHeadline2,\n  mdcHeadline3,\n  mdcHeadline4,\n  mdcHeadline5,\n  mdcHeadline6,\n  mdcOverline,\n  mdcSubtitle1,\n  mdcSubtitle2,\n  mdcBody1,\n  mdcBody2,\n  mdcButton1,\n  mdcCaption\n} from './mdc-typography.js'\n\nexport {\n  mdcHeadline1,\n  mdcHeadline2,\n  mdcHeadline3,\n  mdcHeadline4,\n  mdcHeadline5,\n  mdcHeadline6,\n  mdcOverline,\n  mdcSubtitle1,\n  mdcSubtitle2,\n  mdcBody1,\n  mdcBody2,\n  mdcButton1,\n  mdcCaption\n}\n\nexport default BasePlugin({\n  mdcHeadline1,\n  mdcHeadline2,\n  mdcHeadline3,\n  mdcHeadline4,\n  mdcHeadline5,\n  mdcHeadline6,\n  mdcOverline,\n  mdcSubtitle1,\n  mdcSubtitle2,\n  mdcBody1,\n  mdcBody2,\n  mdcButton1,\n  mdcCaption\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["Math","floor","random","toString","mdcTypoMixin","defaultTag","defaultClassModifier","name","props","tag","type","String","default","classModifier","render","createElement","this","class","attrs","$attrs","on","$listeners","$slots","components","mdcHeadline1","mixins","mdcHeadline2","mdcHeadline3","mdcHeadline4","mdcHeadline5","mdcHeadline6","mdcSubtitle1","mdcSubtitle2","mdcBody1","mdcBody2","mdcButton1","mdcCaption","mdcOverline","version","install","vm","key","component","plugin","_Vue","window","Vue","global","use"],"mappings":";;;;;;;;;8TACEA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,YAAaE,WCD9C,SAASC,EACdC,EACAC,OACAC,uEAAcF,SAEP,CACLG,MAAO,CACLC,IAAK,CACHC,KAAMC,OACNC,QAASP,GAEXQ,cAAe,CACbH,KAAMC,OACNC,QAASN,IAGbQ,gBAAOC,gBACEA,EACLC,KAAKP,IACL,CACEQ,gBACGV,GAAO,OACR,kBAAkB,iCACES,KAAKH,gBAAkB,MAE7CK,MAAOF,KAAKG,OACZC,GAAIJ,KAAKK,YAEXL,KAAKM,OAAOV,eC5BOW,ECEdC,EAAe,CAC1BjB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjBsB,EAAe,CAC1BnB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjBuB,EAAe,CAC1BpB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjBwB,EAAe,CAC1BrB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjByB,EAAe,CAC1BtB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjB0B,EAAe,CAC1BvB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjB2B,EAAe,CAC1BxB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAEjB4B,EAAe,CAC1BzB,KAAM,gBACNkB,OAAQ,CAACrB,EAAa,KAAM,eAGjB6B,EAAW,CACtB1B,KAAM,YACNkB,OAAQ,CAACrB,EAAa,IAAK,WAGhB8B,EAAW,CACtB3B,KAAM,YACNkB,OAAQ,CAACrB,EAAa,IAAK,WAGhB+B,EAAa,CACxB5B,KAAM,cACNkB,OAAQ,CAACrB,EAAa,OAAQ,SAAU,iBAG7BgC,EAAa,CACxB7B,KAAM,cACNkB,OAAQ,CAACrB,EAAa,OAAQ,aAGnBiC,EAAc,CACzB9B,KAAM,eACNkB,OAAQ,CAACrB,EAAa,OAAQ,gBD9DvB,CACLkC,QAAS,cACTC,QAAS,SAAAC,OACF,IAAIC,KAAOlB,EAAY,KACtBmB,EAAYnB,EAAWkB,GAC3BD,EAAGE,UAAUA,EAAUnC,KAAMmC,KAGjCnB,WATuBA,EEiCD,CACxBC,aAAAA,EACAE,aAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAO,YAAAA,EACAN,aAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,WAAAA,WC9CK,SAAkBO,OAEnBC,EAAO,KACW,oBAAXC,OACTD,EAAOC,OAAOC,IACa,oBAAXC,SAEhBH,EAAOG,OAAOD,KAEZF,GACFA,EAAKI,IAAIL,ICLJA"}