{"version":3,"file":"theme.min.js","sources":["../../components/base/uniqueid-mixin.js","../../components/base/custom-element.js","../../components/theme/mdc-theme.vue","../../components/base/base-plugin.js","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/theme/index.js","../../components/base/auto-init.js","../../components/theme/entry.js"],"sourcesContent":["const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :class=\"classes\"\n    class=\"mdc-theme\">\n    <slot />\n  </custom-element>\n</template>\n\n\n<script>\nimport { CustomElement } from '../base'\n\nconst THEME_COLORS = [\n  'primary',\n  'secondary',\n  'background',\n  'primary-light',\n  'secondary-light',\n  'secondary-dark',\n  'primary-dark'\n]\n\nconst THEME_STYLES = [\n  'text-primary',\n  'text-secondary',\n  'text-hint',\n  'text-icon',\n  'text-disabled'\n]\n\nexport default {\n  name: 'mdc-theme',\n  components: {\n    CustomElement\n  },\n  props: {\n    tag: { type: String, default: 'div' },\n    color: String,\n    background: String\n  },\n  computed: {\n    classes() {\n      let classes = {}\n\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\n        classes[`mdc-theme--${this.color}`] = true\n      }\n\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\n        classes[`mdc-theme--${this.background}-bg`] = true\n\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\n        }\n      }\n      return classes\n    }\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","import { BasePlugin } from '../base'\nimport mdcTheme from './mdc-theme.vue'\n\nexport { mdcTheme }\n\nexport default BasePlugin({\n  mdcTheme\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","// import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["Math","floor","random","toString","functional","render","createElement","context","props","is","tag","data","children","script","components","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","staticRenderFns","_compiled","_scopeId","$vnode","this","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","version","install","vm","key","component","name","mdcTheme","plugin","_Vue","window","Vue","global","use","autoInit"],"mappings":";;;;;;;;;iMACEA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,YAAaE,kPCDxB,CAC3BC,YAAY,EACZC,gBAAOC,EAAeC,UACbD,EACLC,EAAQC,MAAMC,IAAMF,EAAQC,MAAME,KAAO,MACzCH,EAAQI,KACRJ,EAAQK,6aCJd,UAEAC,kQCJ2BC,ICAZ,SAA4BC,EAAkBC,EAAaC,EAAeC,EAASC,EAAsBC,EAAoCC,EAAcC,EAAgBC,EAAmBC,GAC7K,mBAAjBH,IACPE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAe,OAkBfI,EAfEC,EAAmC,mBAAlBT,EAA+BA,EAAcS,QAAUT,KAE1EF,GAAoBA,EAAiBV,SACrCqB,EAAQrB,OAASU,EAAiBV,OAClCqB,EAAQC,gBAAkBZ,EAAiBY,gBAC3CD,EAAQE,WAAY,EAEhBT,IACAO,EAAQtB,YAAa,IAIzBc,IACAQ,EAAQG,SAAWX,GAGnBE,GAEAK,EAAO,SAAUlB,IAEbA,EACIA,QACUuB,QAAUC,KAAKD,OAAOE,iBACtBC,QAAUF,KAAKE,OAAOH,QAAUC,KAAKE,OAAOH,OAAOE,aAElB,oBAAxBE,sBACnB3B,EAAU2B,qBAGVlB,GACAA,EAAYmB,KAAKJ,KAAMR,EAAkBhB,IAGzCA,GAAWA,EAAQ6B,uBACnB7B,EAAQ6B,sBAAsBC,IAAIjB,IAK1CM,EAAQY,aAAeb,GAElBT,IACLS,EAAOJ,EACD,WACEL,EAAYmB,KAAKJ,KAAMP,EAAqBO,KAAKQ,MAAMC,SAASC,cAElE,SAAUlC,GACRS,EAAYmB,KAAKJ,KAAMT,EAAef,MAG9CkB,KACIC,EAAQtB,WAAY,KAEdsC,EAAiBhB,EAAQrB,OAC/BqB,EAAQrB,OAAS,SAAkCsC,EAAGpC,UAClDkB,EAAKU,KAAK5B,GACHmC,EAAeC,EAAGpC,QAG5B,KAEKqC,EAAWlB,EAAQmB,aACzBnB,EAAQmB,aAAeD,EAAW,GAAGE,OAAOF,EAAUnB,GAAQ,CAACA,UAGhER,4EDvEF,CACL8B,QAAS,cACTC,QAAS,SAAAC,OACF,IAAIC,KAAOpC,EAAY,KACtBqC,EAAYrC,EAAWoC,GAC3BD,EAAGE,UAAUA,EAAUC,KAAMD,KAGjCrC,WATuBA,EEKD,CACxBuC,SAAAA,WCNK,SAAkBC,OAEnBC,EAAO,KACW,oBAAXC,OACTD,EAAOC,OAAOC,IACa,oBAAXC,SAEhBH,EAAOG,OAAOD,KAEZF,GACFA,EAAKI,IAAIL,GCLbM,CAASN"}