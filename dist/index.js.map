{"version":3,"file":"index.js","sources":["../components/base/base-plugin.js","../components/base/custom-event.js","../components/base/dispatch-event-mixin.js","../components/base/uniqueid-mixin.js","../node_modules/@material/top-app-bar/adapter.js","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/base/foundation.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/standard/foundation.js","../node_modules/@material/top-app-bar/short/foundation.js","../node_modules/@material/top-app-bar/fixed/foundation.js","../components/top-app-bar/mdc-top-app-bar.vue","../components/top-app-bar/mdc-top-app-bar-action.vue","../components/top-app-bar/index.js","../components/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n\n    this.scrollHandler_ = () => {};\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  initScrollHandler() {\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroyScrollHandler() {\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {numbers} from '../constants';\n\nconst INITIAL_VALUE = 0;\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}\n * @final\n */\nclass MDCTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /**\n     * Used for diffs of current scroll position vs previous scroll position\n     * @private {number}\n     */\n    this.lastScrollPosition_ = this.adapter_.getViewportScrollY();\n\n    /**\n     * Used to verify when the top app bar is completely showing or completely hidden\n     * @private {number}\n     */\n    this.topAppBarHeight_ = this.adapter_.getTopAppBarHeight();\n\n    /**\n     * wasDocked_ is used to indicate if the top app bar was docked in the previous\n     * scroll handler iteration.\n     * @private {boolean}\n     */\n    this.wasDocked_ = true;\n\n    /**\n     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully\n     * shown position.\n     * @private {boolean}\n     */\n    this.isDockedShowing_ = true;\n\n    /**\n     * Variable for current scroll position of the top app bar\n     * @private {number}\n     */\n    this.currentAppBarOffsetTop_ = 0;\n\n    /**\n     * Used to prevent the top app bar from being scrolled out of view during resize events\n     * @private {boolean} */\n    this.isCurrentlyBeingResized_ = false;\n\n    /**\n     * The timeout that's used to throttle the resize events\n     * @private {number}\n     */\n    this.resizeThrottleId_ = INITIAL_VALUE;\n\n    /**\n     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize\n     * @private {number}\n     */\n    this.resizeDebounceId_ = INITIAL_VALUE;\n\n    this.scrollHandler_ = () => this.topAppBarScrollHandler_();\n    this.resizeHandler_ = () => this.topAppBarResizeHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.setStyle('top', '');\n  }\n\n  /**\n   * Function to determine if the DOM needs to update.\n   * @return {boolean}\n   * @private\n   */\n  checkForUpdate_() {\n    const offscreenBoundaryTop = -this.topAppBarHeight_;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked_ = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked_) {\n        this.wasDocked_ = true;\n        return true;\n      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing_ = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  /**\n   * Function to move the top app bar if needed.\n   * @private\n   */\n  moveTopAppBar_() {\n    if (this.checkForUpdate_()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop_;\n      if (Math.abs(offset) >= this.topAppBarHeight_) {\n        offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.adapter_.setStyle('top', offset + 'px');\n    }\n  }\n\n  /**\n   * Scroll handler for the default scroll behavior of the top app bar.\n   * @private\n   */\n  topAppBarScrollHandler_() {\n    const currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition_;\n    this.lastScrollPosition_ = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized_) {\n      this.currentAppBarOffsetTop_ -= diff;\n\n      if (this.currentAppBarOffsetTop_ > 0) {\n        this.currentAppBarOffsetTop_ = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {\n        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;\n      }\n\n      this.moveTopAppBar_();\n    }\n  }\n\n  /**\n   * Top app bar resize handler that throttle/debounce functions that execute updates.\n   * @private\n   */\n  topAppBarResizeHandler_() {\n    // Throttle resize events 10 p/s\n    if (!this.resizeThrottleId_) {\n      this.resizeThrottleId_ = setTimeout(() => {\n        this.resizeThrottleId_ = INITIAL_VALUE;\n        this.throttledResizeHandler_();\n      }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    }\n\n    this.isCurrentlyBeingResized_ = true;\n\n    if (this.resizeDebounceId_) {\n      clearTimeout(this.resizeDebounceId_);\n    }\n\n    this.resizeDebounceId_ = setTimeout(() => {\n      this.topAppBarScrollHandler_();\n      this.isCurrentlyBeingResized_ = false;\n      this.resizeDebounceId_ = INITIAL_VALUE;\n    }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n  }\n\n  /**\n   * Throttled function that updates the top app bar scrolled values if the\n   * top app bar height changes.\n   * @private\n   */\n  throttledResizeHandler_() {\n    const currentHeight = this.adapter_.getTopAppBarHeight();\n    if (this.topAppBarHeight_ !== currentHeight) {\n      this.wasDocked_ = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;\n      this.topAppBarHeight_ = currentHeight;\n    }\n    this.topAppBarScrollHandler_();\n  }\n}\n\nexport default MDCTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {cssClasses} from '../constants';\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarFoundation from '../foundation';\n\n/**\n * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}\n * @final\n */\nclass MDCFixedTopAppBarFoundation extends MDCTopAppBarFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    /** State variable for the previous scroll iteration top app bar state */\n    this.wasScrolled_ = false;\n\n    this.scrollHandler_ = () => this.fixedScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  /**\n   * Scroll handler for applying/removing the modifier class\n   * on the fixed top app bar.\n   */\n  fixedScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.wasScrolled_) {\n        this.adapter_.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = false;\n      }\n    } else {\n      if (!this.wasScrolled_) {\n        this.adapter_.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n        this.wasScrolled_ = true;\n      }\n    }\n  }\n}\n\nexport default MDCFixedTopAppBarFoundation;\n","<template>\n  <header ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\" v-on=\"$listeners\">\n    <div class=\"mdc-top-app-bar__row\">\n      <section\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\"\n      >\n        <button\n          v-if=\"haveNavigationIcon\"\n          ref=\"navigationIcon\"\n          :class=\"naviconClasses\"\n          v-on=\"listeners\"\n        >\n          {{ icon }}\n        </button>\n        <span v-if=\"!!title\" class=\"mdc-top-app-bar__title\">{{ title }}</span>\n      </section>\n      <section\n        v-if=\"$slots.default\"\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\"\n      >\n        <slot />\n      </section>\n    </div>\n    <slot name=\"tabs\" />\n  </header>\n</template>\n\n<script>\nimport MDCTopAppBarFoundation from '@material/top-app-bar/standard/foundation'\nimport MDCShortTopAppBarFoundation from '@material/top-app-bar/short/foundation'\nimport MDCFixedTopAppBarFoundation from '@material/top-app-bar/fixed/foundation'\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-top-app-bar',\n  mixins: [DispatchEventMixin],\n  props: {\n    short: Boolean,\n    shortCollapsed: Boolean,\n    prominent: Boolean,\n    fixed: Boolean,\n    title: String,\n    icon: {\n      type: [String, Boolean],\n      default: 'menu'\n    },\n    iconClasses: Object,\n    dense: Boolean\n  },\n  data() {\n    return {\n      rootStyles: { top: '0' },\n      rootClasses: {\n        'mdc-top-app-bar': true,\n        'mdc-top-app-bar--dense': this.dense,\n        'mdc-top-app-bar--short': this.short,\n        'mdc-top-app-bar--short-collapsed': this.shortCollapsed,\n        'mdc-top-app-bar--prominent': this.prominent,\n        'mdc-top-app-bar--fixed': this.fixed\n      },\n      foundation: null\n    }\n  },\n  computed: {\n    haveNavigationIcon() {\n      return !!this.icon || this.iconClasses\n    },\n    naviconClasses() {\n      return {\n        'mdc-top-app-bar__navigation-icon': true,\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  },\n  mounted() {\n    const adapter = {\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      getTopAppBarHeight: () => this.$el.clientHeight,\n      registerNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.addEventListener(type, handler)\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.removeEventListener(type, handler)\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.$emit('nav')\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getTotalActionItems: () =>\n        this.$refs.root.querySelectorAll(\n          MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR\n        ).length\n    }\n\n    this.foundation = this.short\n      ? new MDCShortTopAppBarFoundation(adapter)\n      : this.fixed\n      ? new MDCFixedTopAppBarFoundation(adapter)\n      : new MDCTopAppBarFoundation(adapter)\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <a\n    :class=\"actioniconClasses\"\n    href=\"#\"\n    class=\"mdc-top-app-bar-action mdc-top-app-bar--action mdc-top-app-bar__action-item\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-top-app-bar-action',\n  mixins: [DispatchEventMixin, RippleMixin],\n  props: {\n    icon: String,\n    iconClasses: Object\n  },\n  computed: {\n    actioniconClasses() {\n      return {\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTopAppBar from './mdc-top-app-bar.vue'\nimport mdcTopAppBarAction from './mdc-top-app-bar-action.vue'\n\nexport { mdcTopAppBar, mdcTopAppBarAction }\n\nexport default BasePlugin({\n  mdcTopAppBar,\n  mdcTopAppBarAction\n})\n","//\n// vue PlugIn\n//\nimport VueMDCButton from './button'\nimport VueMDCCard from './card'\nimport VueMDCCheckbox from './checkbox'\nimport VueMDCChipSet from './chips'\nimport VueMDCDialog from './dialog'\nimport VueMDCDrawer from './drawer'\nimport VueMDCElevation from './elevation'\nimport VueMDCFab from './fab'\nimport VueMDCGridList from './grid-list'\nimport VueMDCIcon from './icon'\nimport VueMDCIconToggle from './icon-toggle'\nimport VueMDCLayoutApp from './layout-app'\nimport VueMDCLayoutGrid from './layout-grid'\nimport VueMDCLinearProgress from './linear-progress'\nimport VueMDCList from './list'\nimport VueMDCMenu from './menu'\nimport VueMDCRadio from './radio'\nimport VueMDCRipple from './ripple'\nimport VueMDCSelect from './select'\nimport VueMDCSlider from './slider'\nimport VueMDCSnackbar from './snackbar'\nimport VueMDCSwitch from './switch'\nimport VueMDCTabs from './tabs'\nimport VueMDCTextfield from './textfield'\nimport VueMDCTheme from './theme'\nimport VueMDCToolbar from './toolbar'\nimport VueMDCTopAppBar from './top-app-bar'\nimport VueMDCTypography from './typography'\n\nexport default {\n  version: '__VERSION__',\n  install(vm) {\n    vm.use(VueMDCButton)\n    vm.use(VueMDCCard)\n    vm.use(VueMDCCheckbox)\n    vm.use(VueMDCChipSet)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCDialog)\n    vm.use(VueMDCDrawer)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCFab)\n    vm.use(VueMDCGridList)\n    vm.use(VueMDCIcon)\n    vm.use(VueMDCIconToggle)\n    vm.use(VueMDCLayoutApp)\n    vm.use(VueMDCLayoutGrid)\n    vm.use(VueMDCLinearProgress)\n    vm.use(VueMDCList)\n    vm.use(VueMDCMenu)\n    vm.use(VueMDCRadio)\n    vm.use(VueMDCRipple)\n    vm.use(VueMDCSelect)\n    vm.use(VueMDCSlider)\n    vm.use(VueMDCSnackbar)\n    vm.use(VueMDCSwitch)\n    vm.use(VueMDCTabs)\n    vm.use(VueMDCTextfield)\n    vm.use(VueMDCTheme)\n    vm.use(VueMDCToolbar)\n    vm.use(VueMDCTopAppBar)\n    vm.use(VueMDCTypography)\n  }\n}\n"],"names":["BasePlugin","components","version","install","vm","key","component","name","DispatchEventMixin","props","event","String","Object","Array","methods","dispatchEvent","evt","$emit","type","target","eventTarget","$root","args","eventArgs","computed","listeners","$listeners","click","e","scope","Math","floor","random","toString","MDCTopAppBarAdapter","className","property","value","handler","cssClasses","FIXED_CLASS","FIXED_SCROLLED_CLASS","SHORT_CLASS","SHORT_HAS_ACTION_ITEM_CLASS","SHORT_COLLAPSED_CLASS","numbers","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","MAX_TOP_APP_BAR_HEIGHT","strings","ACTION_ITEM_SELECTOR","NAVIGATION_EVENT","NAVIGATION_ICON_SELECTOR","ROOT_SELECTOR","TITLE_SELECTOR","MDCFoundation","adapter","adapter_","MDCTopAppBarBaseFoundation","hasClass","addClass","removeClass","setStyle","getTopAppBarHeight","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","notifyNavigationIconClicked","registerScrollHandler","deregisterScrollHandler","registerResizeHandler","deregisterResizeHandler","getViewportScrollY","getTotalActionItems","defaultAdapter","navClickHandler_","scrollHandler_","INITIAL_VALUE","MDCTopAppBarFoundation","lastScrollPosition_","topAppBarHeight_","wasDocked_","isDockedShowing_","currentAppBarOffsetTop_","isCurrentlyBeingResized_","resizeThrottleId_","resizeDebounceId_","topAppBarScrollHandler_","resizeHandler_","topAppBarResizeHandler_","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","checkForUpdate_","offset","abs","currentScrollPosition","max","diff","moveTopAppBar_","setTimeout","throttledResizeHandler_","clearTimeout","currentHeight","MDCShortTopAppBarFoundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","currentScroll","MDCFixedTopAppBarFoundation","wasScrolled_","fixedScrollHandler_","mdcTopAppBar","mdcTopAppBarAction","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCElevation","VueMDCDialog","VueMDCDrawer","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography"],"mappings":"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"}