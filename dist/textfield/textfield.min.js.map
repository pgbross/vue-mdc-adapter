{"version":3,"file":"textfield.min.js","sources":["../../components/base/apply-passive.js","../../components/base/custom-element.js","../../components/base/dispatch-focus-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../node_modules/classnames/index.js","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/textfield/textfield-helper-text.vue","../../components/base/custom-event.js","../../components/textfield/textfield-icon.vue","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/foundation.js","../../node_modules/@material/ripple/index.js","../../components/ripple/mdc-ripple-base.js","../../components/ripple/mdc-ripple.vue","../../components/textfield/mdc-textfield.vue","../../components/base/base-plugin.js","../../components/textfield/index.js","../../components/base/auto-init.js","../../components/textfield/entry.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const DispatchFocusMixin = {\n  data() {\n    return { hasFocus: false }\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp() {\n      this._active = false\n    },\n    onFocusEvent() {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    onBlurEvent() {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus =\n        this.$el === document.activeElement ||\n        this.$el.contains(document.activeElement)\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted() {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  TEXTAREA: 'mdc-text-field--textarea',\n  OUTLINED: 'mdc-text-field--outlined',\n  WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n// Label should always float for these types as they show some UI even if value is empty.\nconst ALWAYS_FLOAT_TYPES = [\n  'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_ && !!this.getValue();\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  get shouldAlwaysFloat_() {\n    const type = this.getNativeInput_().type;\n    return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.trailingIcon_ = foundationMap.trailingIcon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n\n    /** @private {boolean} */\n    this.useNativeValidation_ = true;\n\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter_.floatLabel(true);\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    let targetEvent;\n    if (evt.touches) {\n      targetEvent = evt.touches[0];\n    } else {\n      targetEvent = evt;\n    }\n    const targetClientRect = targetEvent.target.getBoundingClientRect();\n    const normalizedX = targetEvent.clientX - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (!this.shouldFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n    if (this.getValue() !== value) {\n      this.getNativeInput_().value = value;\n    }\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useNativeValidation_\n      ? this.isNativeInputValid_() : this.isValid_;\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.isValid_ = isValid;\n    this.styleValidity_(isValid);\n\n    const shouldShake = !isValid && !this.isFocused_;\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(shouldShake);\n    }\n  }\n\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n   */\n  setUseNativeValidation(useNativeValidation) {\n    this.useNativeValidation_ = useNativeValidation;\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the trailing icon.\n   * @param {string} label\n   */\n  setTrailingIconAriaLabel(label) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the trailing icon.\n   * @param {string} content\n   */\n  setTrailingIconContent(content) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<!-- <template>\n  <p ref=\"helptextEl\" :class=\"classes\" aria-hidden=\"true\"><slot /></p>\n</template> -->\n\n<script>\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\nimport * as classnames_ from 'classnames'\n\nlet classnames = classnames_\n\nexport default {\n  name: 'textfield-helper-text',\n\n  // functional: true,\n  props: {\n    persistent: Boolean,\n    validation: Boolean\n  },\n  data() {\n    const node = this.$slots.default[0]\n    return {\n      classes: {\n        'mdc-text-field-helper-text': true,\n        'mdc-text-field-helper-text--persistent': node.data.attrs.persistent,\n        'mdc-text-field-helper-text--validation-msg': node.data.attrs.validation\n      }\n    }\n  },\n\n  render(h) {\n    const node = this.$slots.default[0]\n    node.data.class = classnames(this.classes)\n    return node\n  },\n  watch: {\n    persistent() {\n      this.foundation.setPersistent(this.persistent)\n    },\n    validation() {\n      this.foundation.setValidation(this.validation)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCTextFieldHelperTextFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n\n      hasClass: className => Boolean(this.classes[className]),\n\n      setAttr: (attr, value) => {\n        this.$el.setAttribute(attr, value)\n      },\n      removeAttr: attr => {\n        this.$el.removeAttribute(attr)\n      },\n      setContent: (/*content*/) => {\n        // help text get's updated from {{helptext}}\n        // cf. this.$el.textContent = content\n      }\n    })\n\n    this.foundation.init()\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","<script>\nimport MDCTextfieldIconFoundation from '@material/textfield/icon/foundation.js'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'textfield-icon',\n  functional: true,\n  props: {\n    disabled: Boolean\n  },\n\n  mounted() {\n    this.foundation = new MDCTextfieldIconFoundation(\n      Object.assign({\n        getAttr: attr => this.$el.getAttribute(attr),\n        setAttr: (attr, value) => this.$el.setAttribute(attr, value),\n        removeAttr: attr => this.$el.removeAttribute(attr),\n        setContent: content => {\n          this.$el.textContent = content\n        },\n        registerInteractionHandler: (evtType, handler) =>\n          this.$el.addEventListener(evtType, handler),\n        deregisterInteractionHandler: (evtType, handler) =>\n          this.$el.removeEventListener(evtType, handler),\n        notifyIconAction: () => {\n          this.$emit('click')\n          emitCustomEvent(\n            this.$el,\n            MDCTextfieldIconFoundation.strings.ICON_EVENT,\n            {},\n            true /* shouldBubble  */\n          )\n        }\n      })\n    )\n\n    this.foundation.init()\n  },\n\n  render(h, context) {\n    const node = context.children[0]\n    node.data.class = 'mdc-text-field__icon'\n    return node\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n        return isSupported;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_\n    ? /** @type {!EventListenerOptions} */ ({passive: true})\n    : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  const matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  let method = 'matches';\n  for (let i = 0; i < matchesMethods.length; i++) {\n    const matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ (ev);\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ (ev);\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event=)} */\n    this.deactivateHandler_ = () => this.deactivate_();\n\n    /** @private {function(!Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(!Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    this.previousActivationEvent_;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: undefined,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === undefined;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(\n      (target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e !== undefined) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Event=} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e !== undefined && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {!Event=} event Optional event containing position information.\n   */\n  activate(event) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = undefined, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @private\n   */\n  deactivate_() {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => this.animateDeactivation_(state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  deactivate() {\n    this.deactivate_();\n  }\n\n  /**\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_({wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","import { MDCRippleFoundation } from '@material/ripple/index'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :classes=\"classes\"\n    :styles=\"styles\" \n    class=\"mdc-ripple\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport { CustomElementMixin } from '../base'\nimport { RippleMixin } from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins: [CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  }\n}\n</script>\n","<template>\n  <div\n    :style=\"{ width: fullwidth ? '100%' : undefined }\"\n    :id=\"id\"\n    class=\"mdc-textfield-wrapper\"\n  >\n    <div ref=\"root\" :class=\"rootClasses\">\n      <textfield-icon ref=\"leadingIconEl\" v-if=\"$slots.leadingIcon\">\n        <slot name=\"leadingIcon\"></slot>\n      </textfield-icon>\n      <!--\n        workarround for https://github.com/vuejs/rollup-plugin-vue/issues/174\n      -->\n      <!-- eslint-disable vue/html-self-closing -->\n      <textarea\n        v-if=\"multiline\"\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        :rows=\"rows\"\n        :cols=\"cols\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      ></textarea>\n\n      <input\n        v-else\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :type=\"type\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      />\n\n      <mdc-floating-label v-if=\"hasLabel\" ref=\"labelEl\" :for=\"vma_uid_\">{{\n        label\n      }}</mdc-floating-label>\n\n      <textfield-icon ref=\"trailingIconEl\" v-if=\"$slots.trailingIcon\">\n        <slot name=\"trailingIcon\"></slot>\n      </textfield-icon>\n\n      <mdc-notched-outline v-if=\"hasOutline\" ref=\"labelEl\">{{\n        label\n      }}</mdc-notched-outline>\n\n      <mdc-line-ripple v-if=\"hasLineRipple\" ref=\"lineRippleEl\" />\n    </div>\n\n    <textfield-helper-text\n      ref=\"helpertextEl\"\n      v-if=\"$slots.helpText\"\n      :id=\"'help-' + vma_uid_\"\n    >\n      <slot name=\"helpText\"></slot>\n    </textfield-helper-text>\n  </div>\n</template>\n\n<script>\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\nimport TextfieldHelperText from './textfield-helper-text.vue'\nimport TextfieldIcon from './textfield-icon.vue'\n\nimport {\n  extractIconProp,\n  DispatchFocusMixin,\n  CustomElementMixin,\n  VMAUniqueIdMixin,\n  applyPassive\n} from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-textfield',\n  mixins: [CustomElementMixin, DispatchFocusMixin, VMAUniqueIdMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'model'\n  },\n  props: {\n    value: [String, Number],\n    type: {\n      type: String,\n      default: 'text',\n      validator: function(value) {\n        return (\n          [\n            'text',\n            'email',\n            'search',\n            'password',\n            'tel',\n            'url',\n            'number'\n          ].indexOf(value) !== -1\n        )\n      }\n    },\n    dense: Boolean,\n    label: String,\n    outline: Boolean,\n    disabled: Boolean,\n    required: Boolean,\n    valid: { type: Boolean, default: undefined },\n    fullwidth: Boolean,\n    multiline: Boolean,\n    size: { type: [Number, String], default: 20 },\n    minlength: { type: [Number, String], default: undefined },\n    maxlength: { type: [Number, String], default: undefined },\n    rows: { type: [Number, String], default: 8 },\n    cols: { type: [Number, String], default: 40 },\n    id: { type: String }\n  },\n  data: function() {\n    return {\n      text: this.value,\n      rootClasses: {\n        'mdc-textfield': true,\n        'mdc-text-field': true,\n        'mdc-text-field--upgraded': true,\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--dense': this.dense,\n        'mdc-text-field--fullwidth': this.fullwidth,\n        'mdc-text-field--textarea': this.multiline,\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\n        'mdc-text-field--with-leading-icon': Boolean(this.$slots.leadingIcon),\n        'mdc-text-field--with-trailing-icon': Boolean(this.$slots.trailingIcon)\n      },\n      inputClasses: {\n        'mdc-text-field__input': true\n      },\n      labelClasses: {\n        'mdc-floating-label': true\n      },\n      lineRippleClasses: {\n        'mdc-line-ripple': true\n      },\n      lineRippleStyles: {},\n      outlineClasses: {},\n      notchStyles: {}\n    }\n  },\n  components: { TextfieldHelperText, TextfieldIcon },\n  computed: {\n    inputPlaceHolder() {\n      return this.fullwidth ? this.label : undefined\n    },\n    inputAriaControls() {\n      return this.help ? 'help-' + this.vma_uid_ : undefined\n    },\n    hasLabel() {\n      return !this.fullwidth && !this.outline && this.label\n    },\n\n    hasOutlineLabel() {\n      return this.hasOutline && this.label\n    },\n    hasOutline() {\n      return !this.fullwidth && this.outline\n    },\n    hasLineRipple() {\n      return !this.hasOutline && !this.multiline\n    }\n  },\n  watch: {\n    disabled() {\n      this.foundation && this.foundation.setDisabled(this.disabled)\n    },\n    required() {\n      this.$refs.input && (this.$refs.input.required = this.required)\n    },\n    valid() {\n      if (typeof this.valid !== 'undefined') {\n        this.foundation && this.foundation.setValid(this.valid)\n      }\n    },\n    dense() {\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\n    },\n    value(value) {\n      if (this.foundation) {\n        if (value !== this.foundation.getValue()) {\n          this.foundation.setValue(value)\n        }\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCTextfieldFoundation(\n      Object.assign(\n        {\n          addClass: className => {\n            this.$set(this.rootClasses, className, true)\n          },\n          removeClass: className => {\n            this.$delete(this.rootClasses, className)\n          },\n          hasClass: className => {\n            this.$refs.root.classList.contains(className)\n          },\n          registerTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.addEventListener(evtType, handler)\n          },\n          deregisterTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.removeEventListener(evtType, handler)\n          },\n          isFocused: () => {\n            return document.activeElement === this.$refs.input\n          },\n          isRtl: () =>\n            window\n              .getComputedStyle(this.$refs.root)\n              .getPropertyValue('direction') === 'rtl',\n\n          registerValidationAttributeChangeHandler: handler => {\n            const getAttributesList = mutationsList =>\n              mutationsList.map(mutation => mutation.attributeName)\n            const observer = new MutationObserver(mutationsList =>\n              handler(getAttributesList(mutationsList))\n            )\n            const targetNode = this.$refs.input\n            const config = { attributes: true }\n            observer.observe(targetNode, config)\n            return observer\n          },\n          deregisterValidationAttributeChangeHandler: observer => {\n            observer.disconnect()\n          }\n        },\n        this.getInputAdapterMethods(),\n        this.getLabelAdapterMethods(),\n        this.getLineRippleAdapterMethods(),\n        this.getOutlineAdapterMethods()\n      ),\n      {\n        helperText: this.$refs.helpertextEl\n          ? this.$refs.helpertextEl.foundation\n          : void 0,\n        leadingIcon: this.$refs.leadingIconEl\n          ? this.$refs.leadingIconEl.foundation\n          : void 0,\n        trailingIcon: this.$refs.trailingIconEl\n          ? this.$refs.trailingIconEl.foundation\n          : void 0\n      }\n    )\n    this.foundation.init()\n    this.foundation.setValue(this.value)\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.input && (this.$refs.input.required = this.required)\n    if (typeof this.valid !== 'undefined') {\n      this.foundation.setValid(this.valid)\n    }\n\n    if (this.textbox) {\n      this.ripple = new RippleBase(this)\n      this.ripple.init()\n    }\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    getInputAdapterMethods() {\n      return {\n        registerInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.addEventListener(evtType, handler, applyPassive())\n        },\n        deregisterInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.removeEventListener(evtType, handler, applyPassive())\n        },\n        getNativeInput: () => {\n          return this.$refs.input\n        }\n      }\n    },\n    getLabelAdapterMethods() {\n      return {\n        shakeLabel: shouldShake => {\n          this.$refs.labelEl && this.$refs.labelEl.shake(shouldShake)\n        },\n        floatLabel: shouldFloat => {\n          this.$refs.labelEl && this.$refs.labelEl.float(shouldFloat)\n        },\n        hasLabel: () => {\n          return !!this.$refs.labelEl || !!this.$refs.notchedEl\n        },\n        getLabelWidth: () => {\n          return this.$refs.labelEl && this.$refs.labelEl.getWidth()\n        }\n      }\n    },\n    getLineRippleAdapterMethods() {\n      return {\n        deactivateLineRipple: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.deactivate()\n          }\n        },\n        activateLineRipple: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.activate()\n          }\n        },\n        setLineRippleTransformOrigin: normalizedX => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.setRippleCenter(normalizedX)\n          }\n        }\n      }\n    },\n    getOutlineAdapterMethods() {\n      return {\n        hasOutline: () => !!this.hasOutline,\n        notchOutline: (notchWidth, isRtl) =>\n          this.$refs.labelEl.notch(notchWidth, isRtl),\n        closeOutline: () => this.$refs.labelEl.closeNotch()\n      }\n    },\n    updateValue(value) {\n      this.$emit('model', value)\n    },\n    focus() {\n      this.$refs.input && this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input && this.$refs.input.blur()\n    }\n  }\n}\n</script>\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport { mdcTextField }\n\nexport default BasePlugin({\n  mdcTextField\n})\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","CustomElementMixin","components","CustomElement","functional","render","createElement","context","props","is","tag","data","children","DispatchFocusMixin","hasFocus","methods","onMouseDown","_active","onMouseUp","onFocusEvent","setTimeout","_this","dispatchFocusEvent","onBlurEvent","_this2","this","$el","activeElement","contains","$emit","mounted","beforeDestroy","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","beforeCreate","vma_uid_","_uid","MDCFoundation","adapter","adapter_","strings","ARIA_HIDDEN","ROLE","cssClasses","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCTextFieldHelperTextFoundation","_extends","defaultAdapter","addClass","removeClass","hasClass","setAttr","removeAttr","setContent","content","isPersistent","isValidation","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","hide_","ICON_EVENT","ICON_ROLE","MDCTextFieldIconFoundation","savedTabIndex_","interactionHandler_","evt","handleInteraction","getAttr","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","forEach","evtType","_this3","disabled","label","type","key","keyCode","ARIA_CONTROLS","INPUT_SELECTOR","LABEL_SELECTOR","ICON_SELECTOR","OUTLINE_SELECTOR","LINE_RIPPLE_SELECTOR","ROOT","DISABLED","DENSE","FOCUSED","INVALID","TEXTAREA","OUTLINED","WITH_LEADING_ICON","numbers","LABEL_SCALE","DENSE_LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","MDCTextFieldFoundation","foundationMap","helperText_","helperText","leadingIcon_","leadingIcon","trailingIcon_","trailingIcon","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","useNativeValidation_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","isValid","getValue","getNativeInput_","indexOf","shouldAlwaysFloat_","isBadInput_","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","deregisterValidationAttributeChangeHandler","getNativeInput","isFocused","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","shouldFloat","some","attributeName","_this4","styleValidity_","openNotch","labelScale","labelWidth","styleFocused_","shouldShake","showToScreenReader","targetEvent","targetClientRect","touches","target","getBoundingClientRect","normalizedX","clientX","left","value","isNativeInputValid_","useNativeValidation","styleDisabled_","setAriaLabel","validity","badInput","valid","setValidity","isDisabled","setDisabled","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","define","_typeof","amd","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","staticRenderFns","_compiled","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","concat","script","el","evtData","shouldBubble","CustomEvent","detail","bubbles","createEvent","initCustomEvent","dispatchEvent","supportsCssVariables_","UNBOUNDED","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","VAR_LEFT","VAR_TOP","VAR_FG_SIZE","VAR_FG_SCALE","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","PADDING","INITIAL_ORIGIN_SCALE","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","TAP_DELAY_MS","supportsCssVariables","windowObj","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","className","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","getMatchesProperty","HTMLElementPrototype","matchesMethods","method","matchesMethod","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","top","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isUnbounded","isSurfaceActive","isSurfaceDisabled","containsEventTarget","registerDocumentInteractionHandler","deregisterDocumentInteractionHandler","registerResizeHandler","deregisterResizeHandler","updateCssVariable","computeBoundingRect","getWindowPageOffset","isActivated","hasDeactivationUXRun","wasActivatedByPointer","wasElementMadeActive","activationEvent","isProgrammatic","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","requestAnimationFrame","layoutInternal_","clearTimeout","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","_this5","_this6","_this7","Object","keys","k","_this8","activationState","previousActivationEvent","_this9","resetActivationState_","registerDeactivationHandlers_","checkElementMadeActive_","animateActivation_","event","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","_this10","ev","pageOffset","clientRect","normalizedY","documentX","documentY","changedTouches","pageX","pageY","_this11","_this12","state","_this13","animateDeactivation_","cancelAnimationFrame","_this14","maxDim","max","sqrt","pow","_this15","updateLayoutCssVars_","round","unbounded","_this16","_this17","RippleCapableSurface","prototype","root_","RippleBase","vm","MATCHES","$set","$delete","handler","documentElement","varName","styles","pageXOffset","pageYOffset","ref","_matches","HTMLElement","ripple","init","destroy","version","install","component","name","mdcTextField","plugin","_Vue","Vue","global","use"],"mappings":"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"}