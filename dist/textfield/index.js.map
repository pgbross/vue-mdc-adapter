{"version":3,"file":"index.js","sources":["../../components/base/apply-passive.js","../../components/base/base-plugin.js","../../components/base/custom-element.js","../../components/base/custom-event.js","../../components/base/dispatch-focus-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/textfield/helper-text/adapter.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/adapter.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/textfield/adapter.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../components/textfield/textfield-helper-text.vue","../../node_modules/vue-runtime-helpers/normalize-component.js","../../components/textfield/textfield-icon.vue","../../components/textfield/mdc-textfield.vue","../../components/textfield/index.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const DispatchFocusMixin = {\n  data() {\n    return { hasFocus: false }\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp() {\n      this._active = false\n    },\n    onFocusEvent() {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    onBlurEvent() {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus =\n        this.$el === document.activeElement ||\n        this.$el.contains(document.activeElement)\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted() {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   leadingIcon: (!MDCTextFieldIconFoundation|undefined),\n *   trailingIcon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * Handler accepts list of attribute names.\n   * @param {function(!Array<string>): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * @param {number} labelWidth\n   */\n  notchOutline(labelWidth) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  TEXTAREA: 'mdc-text-field--textarea',\n  OUTLINED: 'mdc-text-field--outlined',\n  WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n// Label should always float for these types as they show some UI even if value is empty.\nconst ALWAYS_FLOAT_TYPES = [\n  'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_ && !!this.getValue();\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  get shouldAlwaysFloat_() {\n    const type = this.getNativeInput_().type;\n    return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.trailingIcon_ = foundationMap.trailingIcon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n\n    /** @private {boolean} */\n    this.useNativeValidation_ = true;\n\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter_.floatLabel(true);\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    let targetEvent;\n    if (evt.touches) {\n      targetEvent = evt.touches[0];\n    } else {\n      targetEvent = evt;\n    }\n    const targetClientRect = targetEvent.target.getBoundingClientRect();\n    const normalizedX = targetEvent.clientX - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (!this.shouldFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n    if (this.getValue() !== value) {\n      this.getNativeInput_().value = value;\n    }\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useNativeValidation_\n      ? this.isNativeInputValid_() : this.isValid_;\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.isValid_ = isValid;\n    this.styleValidity_(isValid);\n\n    const shouldShake = !isValid && !this.isFocused_;\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(shouldShake);\n    }\n  }\n\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n   */\n  setUseNativeValidation(useNativeValidation) {\n    this.useNativeValidation_ = useNativeValidation;\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the leading icon.\n   * @param {string} label\n   */\n  setLeadingIconAriaLabel(label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the leading icon.\n   * @param {string} content\n   */\n  setLeadingIconContent(content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the trailing icon.\n   * @param {string} label\n   */\n  setTrailingIconAriaLabel(label) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the trailing icon.\n   * @param {string} content\n   */\n  setTrailingIconContent(content) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","<!-- <template>\n  <p ref=\"helptextEl\" :class=\"classes\" aria-hidden=\"true\"><slot /></p>\n</template> -->\n\n<script>\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\n\nexport default {\n  name: 'textfield-helper-text',\n\n  // functional: true,\n  props: {\n    persistent: Boolean,\n    validation: Boolean\n  },\n  data() {\n    const node = this.$slots.default[0]\n    return {\n      classes: {\n        'mdc-text-field-helper-text': true,\n        'mdc-text-field-helper-text--persistent': node.data.attrs.persistent,\n        'mdc-text-field-helper-text--validation-msg': node.data.attrs.validation\n      }\n    }\n  },\n\n  render(h) {\n    const node = this.$slots.default[0]\n    node.data.class = classNames(this.classes)\n    return node\n  },\n  watch: {\n    persistent() {\n      this.foundation.setPersistent(this.persistent)\n    },\n    validation() {\n      this.foundation.setValidation(this.validation)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCTextFieldHelperTextFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n\n      hasClass: className => Boolean(this.classes[className]),\n\n      setAttr: (attr, value) => {\n        this.$el.setAttribute(attr, value)\n      },\n      removeAttr: attr => {\n        this.$el.removeAttribute(attr)\n      },\n      setContent: (/*content*/) => {\n        // help text get's updated from {{helptext}}\n        // cf. this.$el.textContent = content\n      }\n    })\n\n    this.foundation.init()\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n\n// ===\n// Private functions\n// ===\n\nvar hasOwn = {}.hasOwnProperty\n\nfunction classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n</script>\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<script>\nimport MDCTextfieldIconFoundation from '@material/textfield/icon/foundation.js'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'textfield-icon',\n  functional: true,\n  props: {\n    disabled: Boolean\n  },\n\n  mounted() {\n    this.foundation = new MDCTextfieldIconFoundation(\n      Object.assign({\n        getAttr: attr => this.$el.getAttribute(attr),\n        setAttr: (attr, value) => this.$el.setAttribute(attr, value),\n        removeAttr: attr => this.$el.removeAttribute(attr),\n        setContent: content => {\n          this.$el.textContent = content\n        },\n        registerInteractionHandler: (evtType, handler) =>\n          this.$el.addEventListener(evtType, handler),\n        deregisterInteractionHandler: (evtType, handler) =>\n          this.$el.removeEventListener(evtType, handler),\n        notifyIconAction: () => {\n          this.$emit('click')\n          emitCustomEvent(\n            this.$el,\n            MDCTextfieldIconFoundation.strings.ICON_EVENT,\n            {},\n            true /* shouldBubble  */\n          )\n        }\n      })\n    )\n\n    this.foundation.init()\n  },\n\n  render(h, context) {\n    const node = context.children[0]\n    node.data.class = 'mdc-text-field__icon'\n    return node\n  },\n\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div\n    :style=\"{ width: fullwidth ? '100%' : undefined }\"\n    :id=\"id\"\n    class=\"mdc-textfield-wrapper\"\n  >\n    <div ref=\"root\" :class=\"rootClasses\">\n      <textfield-icon ref=\"leadingIconEl\" v-if=\"$slots.leadingIcon\">\n        <slot name=\"leadingIcon\"></slot>\n      </textfield-icon>\n      <!--\n        workarround for https://github.com/vuejs/rollup-plugin-vue/issues/174\n      -->\n      <!-- eslint-disable vue/html-self-closing -->\n      <textarea\n        v-if=\"multiline\"\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        :rows=\"rows\"\n        :cols=\"cols\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      ></textarea>\n\n      <input\n        v-else\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :type=\"type\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      />\n\n      <mdc-floating-label v-if=\"hasLabel\" ref=\"labelEl\" :for=\"vma_uid_\">{{\n        label\n      }}</mdc-floating-label>\n\n      <textfield-icon ref=\"trailingIconEl\" v-if=\"$slots.trailingIcon\">\n        <slot name=\"trailingIcon\"></slot>\n      </textfield-icon>\n\n      <mdc-notched-outline v-if=\"hasOutline\" ref=\"labelEl\">{{\n        label\n      }}</mdc-notched-outline>\n\n      <mdc-line-ripple v-if=\"hasLineRipple\" ref=\"lineRippleEl\" />\n    </div>\n\n    <textfield-helper-text\n      ref=\"helpertextEl\"\n      v-if=\"$slots.helpText\"\n      :id=\"'help-' + vma_uid_\"\n    >\n      <slot name=\"helpText\"></slot>\n    </textfield-helper-text>\n  </div>\n</template>\n\n<script>\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\nimport TextfieldHelperText from './textfield-helper-text.vue'\nimport TextfieldIcon from './textfield-icon.vue'\n\nimport {\n  extractIconProp,\n  DispatchFocusMixin,\n  CustomElementMixin,\n  VMAUniqueIdMixin,\n  applyPassive\n} from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-textfield',\n  mixins: [CustomElementMixin, DispatchFocusMixin, VMAUniqueIdMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'model'\n  },\n  props: {\n    value: [String, Number],\n    type: {\n      type: String,\n      default: 'text',\n      validator: function(value) {\n        return (\n          [\n            'text',\n            'email',\n            'search',\n            'password',\n            'tel',\n            'url',\n            'number'\n          ].indexOf(value) !== -1\n        )\n      }\n    },\n    dense: Boolean,\n    label: String,\n    outline: Boolean,\n    disabled: Boolean,\n    required: Boolean,\n    valid: { type: Boolean, default: undefined },\n    fullwidth: Boolean,\n    multiline: Boolean,\n    size: { type: [Number, String], default: 20 },\n    minlength: { type: [Number, String], default: undefined },\n    maxlength: { type: [Number, String], default: undefined },\n    rows: { type: [Number, String], default: 8 },\n    cols: { type: [Number, String], default: 40 },\n    id: { type: String }\n  },\n  data: function() {\n    return {\n      text: this.value,\n      rootClasses: {\n        'mdc-textfield': true,\n        'mdc-text-field': true,\n        'mdc-text-field--upgraded': true,\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--dense': this.dense,\n        'mdc-text-field--fullwidth': this.fullwidth,\n        'mdc-text-field--textarea': this.multiline,\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\n        'mdc-text-field--with-leading-icon': Boolean(this.$slots.leadingIcon),\n        'mdc-text-field--with-trailing-icon': Boolean(this.$slots.trailingIcon)\n      },\n      inputClasses: {\n        'mdc-text-field__input': true\n      },\n      labelClasses: {\n        'mdc-floating-label': true\n      },\n      lineRippleClasses: {\n        'mdc-line-ripple': true\n      },\n      lineRippleStyles: {},\n      outlineClasses: {},\n      notchStyles: {}\n    }\n  },\n  components: { TextfieldHelperText, TextfieldIcon },\n  computed: {\n    inputPlaceHolder() {\n      return this.fullwidth ? this.label : undefined\n    },\n    inputAriaControls() {\n      return this.help ? 'help-' + this.vma_uid_ : undefined\n    },\n    hasLabel() {\n      return !this.fullwidth && !this.outline && this.label\n    },\n\n    hasOutlineLabel() {\n      return this.hasOutline && this.label\n    },\n    hasOutline() {\n      return !this.fullwidth && this.outline\n    },\n    hasLineRipple() {\n      return !this.hasOutline && !this.multiline\n    }\n  },\n  watch: {\n    disabled() {\n      this.foundation && this.foundation.setDisabled(this.disabled)\n    },\n    required() {\n      this.$refs.input && (this.$refs.input.required = this.required)\n    },\n    valid() {\n      if (typeof this.valid !== 'undefined') {\n        this.foundation && this.foundation.setValid(this.valid)\n      }\n    },\n    dense() {\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\n    },\n    value(value) {\n      if (this.foundation) {\n        if (value !== this.foundation.getValue()) {\n          this.foundation.setValue(value)\n        }\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCTextfieldFoundation(\n      Object.assign(\n        {\n          addClass: className => {\n            this.$set(this.rootClasses, className, true)\n          },\n          removeClass: className => {\n            this.$delete(this.rootClasses, className)\n          },\n          hasClass: className => {\n            this.$refs.root.classList.contains(className)\n          },\n          registerTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.addEventListener(evtType, handler)\n          },\n          deregisterTextFieldInteractionHandler: (evtType, handler) => {\n            this.$refs.root.removeEventListener(evtType, handler)\n          },\n          isFocused: () => {\n            return document.activeElement === this.$refs.input\n          },\n          isRtl: () =>\n            window\n              .getComputedStyle(this.$refs.root)\n              .getPropertyValue('direction') === 'rtl',\n\n          registerValidationAttributeChangeHandler: handler => {\n            const getAttributesList = mutationsList =>\n              mutationsList.map(mutation => mutation.attributeName)\n            const observer = new MutationObserver(mutationsList =>\n              handler(getAttributesList(mutationsList))\n            )\n            const targetNode = this.$refs.input\n            const config = { attributes: true }\n            observer.observe(targetNode, config)\n            return observer\n          },\n          deregisterValidationAttributeChangeHandler: observer => {\n            observer.disconnect()\n          }\n        },\n        this.getInputAdapterMethods(),\n        this.getLabelAdapterMethods(),\n        this.getLineRippleAdapterMethods(),\n        this.getOutlineAdapterMethods()\n      ),\n      {\n        helperText: this.$refs.helpertextEl\n          ? this.$refs.helpertextEl.foundation\n          : void 0,\n        leadingIcon: this.$refs.leadingIconEl\n          ? this.$refs.leadingIconEl.foundation\n          : void 0,\n        trailingIcon: this.$refs.trailingIconEl\n          ? this.$refs.trailingIconEl.foundation\n          : void 0\n      }\n    )\n    this.foundation.init()\n    this.foundation.setValue(this.value)\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.input && (this.$refs.input.required = this.required)\n    if (typeof this.valid !== 'undefined') {\n      this.foundation.setValid(this.valid)\n    }\n\n    if (this.textbox) {\n      this.ripple = new RippleBase(this)\n      this.ripple.init()\n    }\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    getInputAdapterMethods() {\n      return {\n        registerInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.addEventListener(evtType, handler, applyPassive())\n        },\n        deregisterInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.removeEventListener(evtType, handler, applyPassive())\n        },\n        getNativeInput: () => {\n          return this.$refs.input\n        }\n      }\n    },\n    getLabelAdapterMethods() {\n      return {\n        shakeLabel: shouldShake => {\n          this.$refs.labelEl && this.$refs.labelEl.shake(shouldShake)\n        },\n        floatLabel: shouldFloat => {\n          this.$refs.labelEl && this.$refs.labelEl.float(shouldFloat)\n        },\n        hasLabel: () => {\n          return !!this.$refs.labelEl || !!this.$refs.notchedEl\n        },\n        getLabelWidth: () => {\n          return this.$refs.labelEl && this.$refs.labelEl.getWidth()\n        }\n      }\n    },\n    getLineRippleAdapterMethods() {\n      return {\n        deactivateLineRipple: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.deactivate()\n          }\n        },\n        activateLineRipple: () => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.activate()\n          }\n        },\n        setLineRippleTransformOrigin: normalizedX => {\n          if (this.$refs.lineRippleEl) {\n            this.$refs.lineRippleEl.setRippleCenter(normalizedX)\n          }\n        }\n      }\n    },\n    getOutlineAdapterMethods() {\n      return {\n        hasOutline: () => !!this.hasOutline,\n        notchOutline: (notchWidth, isRtl) =>\n          this.$refs.labelEl.notch(notchWidth, isRtl),\n        closeOutline: () => this.$refs.labelEl.closeNotch()\n      }\n    },\n    updateValue(value) {\n      this.$emit('model', value)\n    },\n    focus() {\n      this.$refs.input && this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input && this.$refs.input.blur()\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport { mdcTextField }\n\nexport default BasePlugin({\n  mdcTextField\n})\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","version","install","vm","key","component","name","CustomElement","functional","render","createElement","context","props","is","tag","data","children","CustomElementMixin","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","detail","bubbles","createEvent","initCustomEvent","dispatchEvent","DispatchFocusMixin","hasFocus","methods","onMouseDown","_active","onMouseUp","onFocusEvent","setTimeout","dispatchFocusEvent","onBlurEvent","$el","activeElement","contains","$emit","mounted","beforeDestroy","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","beforeCreate","vma_uid_","_uid","MDCFoundation","adapter","adapter_","MDCTextFieldHelperTextAdapter","className","attr","value","content","strings","ARIA_HIDDEN","ROLE","cssClasses","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCTextFieldHelperTextFoundation","addClass","removeClass","hasClass","setAttr","removeAttr","setContent","defaultAdapter","isPersistent","isValidation","inputIsValid","helperTextIsPersistent","helperTextIsValidationMsg","validationMsgNeedsDisplay","hide_","MDCTextFieldIconAdapter","handler","ICON_EVENT","ICON_ROLE","MDCTextFieldIconFoundation","getAttr","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","savedTabIndex_","interactionHandler_","handleInteraction","forEach","disabled","label","type","keyCode","MDCTextFieldAdapter","observer","normalizedX","shouldShake","shouldFloat","labelWidth","ARIA_CONTROLS","INPUT_SELECTOR","LABEL_SELECTOR","ICON_SELECTOR","OUTLINE_SELECTOR","LINE_RIPPLE_SELECTOR","ROOT","DISABLED","DENSE","FOCUSED","INVALID","TEXTAREA","OUTLINED","WITH_LEADING_ICON","numbers","LABEL_SCALE","DENSE_LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","MDCTextFieldFoundation","isValid","isFocused_","getValue","getNativeInput_","indexOf","shouldAlwaysFloat_","isBadInput_","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","deregisterValidationAttributeChangeHandler","getNativeInput","isFocused","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","foundationMap","helperText_","helperText","leadingIcon_","leadingIcon","trailingIcon_","trailingIcon","receivedUserInput_","useCustomValidityChecking_","isValid_","useNativeValidation_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","some","attributeName","styleValidity_","openNotch","isDense","labelScale","styleFocused_","showToScreenReader","targetEvent","touches","targetClientRect","target","getBoundingClientRect","clientX","left","isNativeInputValid_","useNativeValidation","styleDisabled_","setAriaLabel","validity","badInput","valid","setValidity","isDisabled","setDisabled","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","staticRenderFns","_compiled","_scopeId","hook","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","renderWithStyleInjection","h","existing","concat","script","mdcTextField"],"mappings":"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"}